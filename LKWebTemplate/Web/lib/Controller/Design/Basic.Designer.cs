//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:2.0.50727.5472
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace LKWebTemplate.Controller.Design {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("Basic")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class Basic : global::System.Data.DataSet {
        
        private APPLICATION_HEADDataTable tableAPPLICATION_HEAD;
        
        private SITEMAPDataTable tableSITEMAP;
        
        private APPMENUDataTable tableAPPMENU;
        
        private APPPAGEDataTable tableAPPPAGE;
        
        private ATTENDANTDataTable tableATTENDANT;
        
        private COMPANYDataTable tableCOMPANY;
        
        private DEPARTMENTDataTable tableDEPARTMENT;
        
        private GROUP_APPMENUDataTable tableGROUP_APPMENU;
        
        private GROUP_ATTENDANTDataTable tableGROUP_ATTENDANT;
        
        private GROUP_HEADDataTable tableGROUP_HEAD;
        
        private SITEDataTable tableSITE;
        
        private attendant_vDataTable tableattendant_v;
        
        private sitemap_vDataTable tablesitemap_v;
        
        private group_head_vDataTable tablegroup_head_v;
        
        private group_attendant_vDataTable tablegroup_attendant_v;
        
        private appmenu_apppage_vDataTable tableappmenu_apppage_v;
        
        private group_appmenu_vDataTable tablegroup_appmenu_v;
        
        private authority_menu_vDataTable tableauthority_menu_v;
        
        private ERROR_LOGDataTable tableERROR_LOG;
        
        private error_log_vDataTable tableerror_log_v;
        
        private global::System.Data.DataRelation relationSITEMAP_APPLICATION_HEAD_FK1;
        
        private global::System.Data.DataRelation relationSITEMAP_APPPAGE_FK1;
        
        private global::System.Data.DataRelation relationSITEMAP_SITEMAP_FK1;
        
        private global::System.Data.DataRelation relationSITEMAP_SITEMAP_FK2;
        
        private global::System.Data.DataRelation relationAPPMENU_APPLICATION_HEAD_FK1;
        
        private global::System.Data.DataRelation relationAPPMENU_APPMENU_FK1;
        
        private global::System.Data.DataRelation relationAPPMENU_SITEMAP_FK1;
        
        private global::System.Data.DataRelation relationAPPPAGE_APPLICATION_HEAD_FK1;
        
        private global::System.Data.DataRelation relationATTENDANT_FK1;
        
        private global::System.Data.DataRelation relationATTENDANT_FK2;
        
        private global::System.Data.DataRelation relationATTENDANT_FK3;
        
        private global::System.Data.DataRelation relationDEPARTMENT_FK1;
        
        private global::System.Data.DataRelation relationDEPARTMENT_FK2;
        
        private global::System.Data.DataRelation relationDEPARTMENT_FK3;
        
        private global::System.Data.DataRelation relationGROUP_APPMENU_APPMENU_FK1;
        
        private global::System.Data.DataRelation relationGROUP_APPMENU_GROUP_HEAD_FK1;
        
        private global::System.Data.DataRelation relationGROUP_ATTENDANT_ATTENDANT_FK1;
        
        private global::System.Data.DataRelation relationGROUP_ATTENDANT_GROUP_HEA_FK1;
        
        private global::System.Data.DataRelation relationGROUP_HEAD_APPLICATION_HE_FK1;
        
        private global::System.Data.DataRelation relationGROUP_HEAD_COMPANY_FK1;
        
        private global::System.Data.DataRelation relationSITE_FK1;
        
        private global::System.Data.DataRelation relationSITE_FK2;
        
        private global::System.Data.DataRelation relationCOMPANY_group_attendant_v;
        
        private global::System.Data.DataRelation relationATTENDANT_group_attendant_v;
        
        private global::System.Data.DataRelation relationGROUP_HEAD_group_attendant_v;
        
        private global::System.Data.DataRelation relationAPPLICATION_HEAD_group_head_v;
        
        private global::System.Data.DataRelation relationCOMPANY_group_head_v;
        
        private global::System.Data.DataRelation relationAPPMENU_appmenu_apppage_v;
        
        private global::System.Data.DataRelation relationAPPLICATION_HEAD_appmenu_apppage_v;
        
        private global::System.Data.DataRelation relationSITEMAP_appmenu_apppage_v;
        
        private global::System.Data.DataRelation relationAPPMENU_group_appmenu_v;
        
        private global::System.Data.DataRelation relationGROUP_HEAD_group_appmenu_v;
        
        private global::System.Data.DataRelation relationATTENDANT_error_log_v;
        
        private global::System.Data.DataRelation relationATTENDANT_ERROR_LOG;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Basic() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected Basic(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["APPLICATION_HEAD"] != null)) {
                    base.Tables.Add(new APPLICATION_HEADDataTable(ds.Tables["APPLICATION_HEAD"]));
                }
                if ((ds.Tables["SITEMAP"] != null)) {
                    base.Tables.Add(new SITEMAPDataTable(ds.Tables["SITEMAP"]));
                }
                if ((ds.Tables["APPMENU"] != null)) {
                    base.Tables.Add(new APPMENUDataTable(ds.Tables["APPMENU"]));
                }
                if ((ds.Tables["APPPAGE"] != null)) {
                    base.Tables.Add(new APPPAGEDataTable(ds.Tables["APPPAGE"]));
                }
                if ((ds.Tables["ATTENDANT"] != null)) {
                    base.Tables.Add(new ATTENDANTDataTable(ds.Tables["ATTENDANT"]));
                }
                if ((ds.Tables["COMPANY"] != null)) {
                    base.Tables.Add(new COMPANYDataTable(ds.Tables["COMPANY"]));
                }
                if ((ds.Tables["DEPARTMENT"] != null)) {
                    base.Tables.Add(new DEPARTMENTDataTable(ds.Tables["DEPARTMENT"]));
                }
                if ((ds.Tables["GROUP_APPMENU"] != null)) {
                    base.Tables.Add(new GROUP_APPMENUDataTable(ds.Tables["GROUP_APPMENU"]));
                }
                if ((ds.Tables["GROUP_ATTENDANT"] != null)) {
                    base.Tables.Add(new GROUP_ATTENDANTDataTable(ds.Tables["GROUP_ATTENDANT"]));
                }
                if ((ds.Tables["GROUP_HEAD"] != null)) {
                    base.Tables.Add(new GROUP_HEADDataTable(ds.Tables["GROUP_HEAD"]));
                }
                if ((ds.Tables["SITE"] != null)) {
                    base.Tables.Add(new SITEDataTable(ds.Tables["SITE"]));
                }
                if ((ds.Tables["attendant_v"] != null)) {
                    base.Tables.Add(new attendant_vDataTable(ds.Tables["attendant_v"]));
                }
                if ((ds.Tables["sitemap_v"] != null)) {
                    base.Tables.Add(new sitemap_vDataTable(ds.Tables["sitemap_v"]));
                }
                if ((ds.Tables["group_head_v"] != null)) {
                    base.Tables.Add(new group_head_vDataTable(ds.Tables["group_head_v"]));
                }
                if ((ds.Tables["group_attendant_v"] != null)) {
                    base.Tables.Add(new group_attendant_vDataTable(ds.Tables["group_attendant_v"]));
                }
                if ((ds.Tables["appmenu_apppage_v"] != null)) {
                    base.Tables.Add(new appmenu_apppage_vDataTable(ds.Tables["appmenu_apppage_v"]));
                }
                if ((ds.Tables["group_appmenu_v"] != null)) {
                    base.Tables.Add(new group_appmenu_vDataTable(ds.Tables["group_appmenu_v"]));
                }
                if ((ds.Tables["authority_menu_v"] != null)) {
                    base.Tables.Add(new authority_menu_vDataTable(ds.Tables["authority_menu_v"]));
                }
                if ((ds.Tables["ERROR_LOG"] != null)) {
                    base.Tables.Add(new ERROR_LOGDataTable(ds.Tables["ERROR_LOG"]));
                }
                if ((ds.Tables["error_log_v"] != null)) {
                    base.Tables.Add(new error_log_vDataTable(ds.Tables["error_log_v"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public APPLICATION_HEADDataTable APPLICATION_HEAD {
            get {
                return this.tableAPPLICATION_HEAD;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SITEMAPDataTable SITEMAP {
            get {
                return this.tableSITEMAP;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public APPMENUDataTable APPMENU {
            get {
                return this.tableAPPMENU;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public APPPAGEDataTable APPPAGE {
            get {
                return this.tableAPPPAGE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ATTENDANTDataTable ATTENDANT {
            get {
                return this.tableATTENDANT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public COMPANYDataTable COMPANY {
            get {
                return this.tableCOMPANY;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DEPARTMENTDataTable DEPARTMENT {
            get {
                return this.tableDEPARTMENT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GROUP_APPMENUDataTable GROUP_APPMENU {
            get {
                return this.tableGROUP_APPMENU;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GROUP_ATTENDANTDataTable GROUP_ATTENDANT {
            get {
                return this.tableGROUP_ATTENDANT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GROUP_HEADDataTable GROUP_HEAD {
            get {
                return this.tableGROUP_HEAD;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SITEDataTable SITE {
            get {
                return this.tableSITE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public attendant_vDataTable attendant_v {
            get {
                return this.tableattendant_v;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public sitemap_vDataTable sitemap_v {
            get {
                return this.tablesitemap_v;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public group_head_vDataTable group_head_v {
            get {
                return this.tablegroup_head_v;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public group_attendant_vDataTable group_attendant_v {
            get {
                return this.tablegroup_attendant_v;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public appmenu_apppage_vDataTable appmenu_apppage_v {
            get {
                return this.tableappmenu_apppage_v;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public group_appmenu_vDataTable group_appmenu_v {
            get {
                return this.tablegroup_appmenu_v;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public authority_menu_vDataTable authority_menu_v {
            get {
                return this.tableauthority_menu_v;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ERROR_LOGDataTable ERROR_LOG {
            get {
                return this.tableERROR_LOG;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public error_log_vDataTable error_log_v {
            get {
                return this.tableerror_log_v;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            Basic cln = ((Basic)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["APPLICATION_HEAD"] != null)) {
                    base.Tables.Add(new APPLICATION_HEADDataTable(ds.Tables["APPLICATION_HEAD"]));
                }
                if ((ds.Tables["SITEMAP"] != null)) {
                    base.Tables.Add(new SITEMAPDataTable(ds.Tables["SITEMAP"]));
                }
                if ((ds.Tables["APPMENU"] != null)) {
                    base.Tables.Add(new APPMENUDataTable(ds.Tables["APPMENU"]));
                }
                if ((ds.Tables["APPPAGE"] != null)) {
                    base.Tables.Add(new APPPAGEDataTable(ds.Tables["APPPAGE"]));
                }
                if ((ds.Tables["ATTENDANT"] != null)) {
                    base.Tables.Add(new ATTENDANTDataTable(ds.Tables["ATTENDANT"]));
                }
                if ((ds.Tables["COMPANY"] != null)) {
                    base.Tables.Add(new COMPANYDataTable(ds.Tables["COMPANY"]));
                }
                if ((ds.Tables["DEPARTMENT"] != null)) {
                    base.Tables.Add(new DEPARTMENTDataTable(ds.Tables["DEPARTMENT"]));
                }
                if ((ds.Tables["GROUP_APPMENU"] != null)) {
                    base.Tables.Add(new GROUP_APPMENUDataTable(ds.Tables["GROUP_APPMENU"]));
                }
                if ((ds.Tables["GROUP_ATTENDANT"] != null)) {
                    base.Tables.Add(new GROUP_ATTENDANTDataTable(ds.Tables["GROUP_ATTENDANT"]));
                }
                if ((ds.Tables["GROUP_HEAD"] != null)) {
                    base.Tables.Add(new GROUP_HEADDataTable(ds.Tables["GROUP_HEAD"]));
                }
                if ((ds.Tables["SITE"] != null)) {
                    base.Tables.Add(new SITEDataTable(ds.Tables["SITE"]));
                }
                if ((ds.Tables["attendant_v"] != null)) {
                    base.Tables.Add(new attendant_vDataTable(ds.Tables["attendant_v"]));
                }
                if ((ds.Tables["sitemap_v"] != null)) {
                    base.Tables.Add(new sitemap_vDataTable(ds.Tables["sitemap_v"]));
                }
                if ((ds.Tables["group_head_v"] != null)) {
                    base.Tables.Add(new group_head_vDataTable(ds.Tables["group_head_v"]));
                }
                if ((ds.Tables["group_attendant_v"] != null)) {
                    base.Tables.Add(new group_attendant_vDataTable(ds.Tables["group_attendant_v"]));
                }
                if ((ds.Tables["appmenu_apppage_v"] != null)) {
                    base.Tables.Add(new appmenu_apppage_vDataTable(ds.Tables["appmenu_apppage_v"]));
                }
                if ((ds.Tables["group_appmenu_v"] != null)) {
                    base.Tables.Add(new group_appmenu_vDataTable(ds.Tables["group_appmenu_v"]));
                }
                if ((ds.Tables["authority_menu_v"] != null)) {
                    base.Tables.Add(new authority_menu_vDataTable(ds.Tables["authority_menu_v"]));
                }
                if ((ds.Tables["ERROR_LOG"] != null)) {
                    base.Tables.Add(new ERROR_LOGDataTable(ds.Tables["ERROR_LOG"]));
                }
                if ((ds.Tables["error_log_v"] != null)) {
                    base.Tables.Add(new error_log_vDataTable(ds.Tables["error_log_v"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableAPPLICATION_HEAD = ((APPLICATION_HEADDataTable)(base.Tables["APPLICATION_HEAD"]));
            if ((initTable == true)) {
                if ((this.tableAPPLICATION_HEAD != null)) {
                    this.tableAPPLICATION_HEAD.InitVars();
                }
            }
            this.tableSITEMAP = ((SITEMAPDataTable)(base.Tables["SITEMAP"]));
            if ((initTable == true)) {
                if ((this.tableSITEMAP != null)) {
                    this.tableSITEMAP.InitVars();
                }
            }
            this.tableAPPMENU = ((APPMENUDataTable)(base.Tables["APPMENU"]));
            if ((initTable == true)) {
                if ((this.tableAPPMENU != null)) {
                    this.tableAPPMENU.InitVars();
                }
            }
            this.tableAPPPAGE = ((APPPAGEDataTable)(base.Tables["APPPAGE"]));
            if ((initTable == true)) {
                if ((this.tableAPPPAGE != null)) {
                    this.tableAPPPAGE.InitVars();
                }
            }
            this.tableATTENDANT = ((ATTENDANTDataTable)(base.Tables["ATTENDANT"]));
            if ((initTable == true)) {
                if ((this.tableATTENDANT != null)) {
                    this.tableATTENDANT.InitVars();
                }
            }
            this.tableCOMPANY = ((COMPANYDataTable)(base.Tables["COMPANY"]));
            if ((initTable == true)) {
                if ((this.tableCOMPANY != null)) {
                    this.tableCOMPANY.InitVars();
                }
            }
            this.tableDEPARTMENT = ((DEPARTMENTDataTable)(base.Tables["DEPARTMENT"]));
            if ((initTable == true)) {
                if ((this.tableDEPARTMENT != null)) {
                    this.tableDEPARTMENT.InitVars();
                }
            }
            this.tableGROUP_APPMENU = ((GROUP_APPMENUDataTable)(base.Tables["GROUP_APPMENU"]));
            if ((initTable == true)) {
                if ((this.tableGROUP_APPMENU != null)) {
                    this.tableGROUP_APPMENU.InitVars();
                }
            }
            this.tableGROUP_ATTENDANT = ((GROUP_ATTENDANTDataTable)(base.Tables["GROUP_ATTENDANT"]));
            if ((initTable == true)) {
                if ((this.tableGROUP_ATTENDANT != null)) {
                    this.tableGROUP_ATTENDANT.InitVars();
                }
            }
            this.tableGROUP_HEAD = ((GROUP_HEADDataTable)(base.Tables["GROUP_HEAD"]));
            if ((initTable == true)) {
                if ((this.tableGROUP_HEAD != null)) {
                    this.tableGROUP_HEAD.InitVars();
                }
            }
            this.tableSITE = ((SITEDataTable)(base.Tables["SITE"]));
            if ((initTable == true)) {
                if ((this.tableSITE != null)) {
                    this.tableSITE.InitVars();
                }
            }
            this.tableattendant_v = ((attendant_vDataTable)(base.Tables["attendant_v"]));
            if ((initTable == true)) {
                if ((this.tableattendant_v != null)) {
                    this.tableattendant_v.InitVars();
                }
            }
            this.tablesitemap_v = ((sitemap_vDataTable)(base.Tables["sitemap_v"]));
            if ((initTable == true)) {
                if ((this.tablesitemap_v != null)) {
                    this.tablesitemap_v.InitVars();
                }
            }
            this.tablegroup_head_v = ((group_head_vDataTable)(base.Tables["group_head_v"]));
            if ((initTable == true)) {
                if ((this.tablegroup_head_v != null)) {
                    this.tablegroup_head_v.InitVars();
                }
            }
            this.tablegroup_attendant_v = ((group_attendant_vDataTable)(base.Tables["group_attendant_v"]));
            if ((initTable == true)) {
                if ((this.tablegroup_attendant_v != null)) {
                    this.tablegroup_attendant_v.InitVars();
                }
            }
            this.tableappmenu_apppage_v = ((appmenu_apppage_vDataTable)(base.Tables["appmenu_apppage_v"]));
            if ((initTable == true)) {
                if ((this.tableappmenu_apppage_v != null)) {
                    this.tableappmenu_apppage_v.InitVars();
                }
            }
            this.tablegroup_appmenu_v = ((group_appmenu_vDataTable)(base.Tables["group_appmenu_v"]));
            if ((initTable == true)) {
                if ((this.tablegroup_appmenu_v != null)) {
                    this.tablegroup_appmenu_v.InitVars();
                }
            }
            this.tableauthority_menu_v = ((authority_menu_vDataTable)(base.Tables["authority_menu_v"]));
            if ((initTable == true)) {
                if ((this.tableauthority_menu_v != null)) {
                    this.tableauthority_menu_v.InitVars();
                }
            }
            this.tableERROR_LOG = ((ERROR_LOGDataTable)(base.Tables["ERROR_LOG"]));
            if ((initTable == true)) {
                if ((this.tableERROR_LOG != null)) {
                    this.tableERROR_LOG.InitVars();
                }
            }
            this.tableerror_log_v = ((error_log_vDataTable)(base.Tables["error_log_v"]));
            if ((initTable == true)) {
                if ((this.tableerror_log_v != null)) {
                    this.tableerror_log_v.InitVars();
                }
            }
            this.relationSITEMAP_APPLICATION_HEAD_FK1 = this.Relations["SITEMAP_APPLICATION_HEAD_FK1"];
            this.relationSITEMAP_APPPAGE_FK1 = this.Relations["SITEMAP_APPPAGE_FK1"];
            this.relationSITEMAP_SITEMAP_FK1 = this.Relations["SITEMAP_SITEMAP_FK1"];
            this.relationSITEMAP_SITEMAP_FK2 = this.Relations["SITEMAP_SITEMAP_FK2"];
            this.relationAPPMENU_APPLICATION_HEAD_FK1 = this.Relations["APPMENU_APPLICATION_HEAD_FK1"];
            this.relationAPPMENU_APPMENU_FK1 = this.Relations["APPMENU_APPMENU_FK1"];
            this.relationAPPMENU_SITEMAP_FK1 = this.Relations["APPMENU_SITEMAP_FK1"];
            this.relationAPPPAGE_APPLICATION_HEAD_FK1 = this.Relations["APPPAGE_APPLICATION_HEAD_FK1"];
            this.relationATTENDANT_FK1 = this.Relations["ATTENDANT_FK1"];
            this.relationATTENDANT_FK2 = this.Relations["ATTENDANT_FK2"];
            this.relationATTENDANT_FK3 = this.Relations["ATTENDANT_FK3"];
            this.relationDEPARTMENT_FK1 = this.Relations["DEPARTMENT_FK1"];
            this.relationDEPARTMENT_FK2 = this.Relations["DEPARTMENT_FK2"];
            this.relationDEPARTMENT_FK3 = this.Relations["DEPARTMENT_FK3"];
            this.relationGROUP_APPMENU_APPMENU_FK1 = this.Relations["GROUP_APPMENU_APPMENU_FK1"];
            this.relationGROUP_APPMENU_GROUP_HEAD_FK1 = this.Relations["GROUP_APPMENU_GROUP_HEAD_FK1"];
            this.relationGROUP_ATTENDANT_ATTENDANT_FK1 = this.Relations["GROUP_ATTENDANT_ATTENDANT_FK1"];
            this.relationGROUP_ATTENDANT_GROUP_HEA_FK1 = this.Relations["GROUP_ATTENDANT_GROUP_HEA_FK1"];
            this.relationGROUP_HEAD_APPLICATION_HE_FK1 = this.Relations["GROUP_HEAD_APPLICATION_HE_FK1"];
            this.relationGROUP_HEAD_COMPANY_FK1 = this.Relations["GROUP_HEAD_COMPANY_FK1"];
            this.relationSITE_FK1 = this.Relations["SITE_FK1"];
            this.relationSITE_FK2 = this.Relations["SITE_FK2"];
            this.relationCOMPANY_group_attendant_v = this.Relations["COMPANY_group_attendant_v"];
            this.relationATTENDANT_group_attendant_v = this.Relations["ATTENDANT_group_attendant_v"];
            this.relationGROUP_HEAD_group_attendant_v = this.Relations["GROUP_HEAD_group_attendant_v"];
            this.relationAPPLICATION_HEAD_group_head_v = this.Relations["APPLICATION_HEAD_group_head_v"];
            this.relationCOMPANY_group_head_v = this.Relations["COMPANY_group_head_v"];
            this.relationAPPMENU_appmenu_apppage_v = this.Relations["APPMENU_appmenu_apppage_v"];
            this.relationAPPLICATION_HEAD_appmenu_apppage_v = this.Relations["APPLICATION_HEAD_appmenu_apppage_v"];
            this.relationSITEMAP_appmenu_apppage_v = this.Relations["SITEMAP_appmenu_apppage_v"];
            this.relationAPPMENU_group_appmenu_v = this.Relations["APPMENU_group_appmenu_v"];
            this.relationGROUP_HEAD_group_appmenu_v = this.Relations["GROUP_HEAD_group_appmenu_v"];
            this.relationATTENDANT_error_log_v = this.Relations["ATTENDANT_error_log_v"];
            this.relationATTENDANT_ERROR_LOG = this.Relations["ATTENDANT_ERROR_LOG"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "Basic";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/Basic.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableAPPLICATION_HEAD = new APPLICATION_HEADDataTable();
            base.Tables.Add(this.tableAPPLICATION_HEAD);
            this.tableSITEMAP = new SITEMAPDataTable();
            base.Tables.Add(this.tableSITEMAP);
            this.tableAPPMENU = new APPMENUDataTable();
            base.Tables.Add(this.tableAPPMENU);
            this.tableAPPPAGE = new APPPAGEDataTable();
            base.Tables.Add(this.tableAPPPAGE);
            this.tableATTENDANT = new ATTENDANTDataTable();
            base.Tables.Add(this.tableATTENDANT);
            this.tableCOMPANY = new COMPANYDataTable();
            base.Tables.Add(this.tableCOMPANY);
            this.tableDEPARTMENT = new DEPARTMENTDataTable();
            base.Tables.Add(this.tableDEPARTMENT);
            this.tableGROUP_APPMENU = new GROUP_APPMENUDataTable();
            base.Tables.Add(this.tableGROUP_APPMENU);
            this.tableGROUP_ATTENDANT = new GROUP_ATTENDANTDataTable();
            base.Tables.Add(this.tableGROUP_ATTENDANT);
            this.tableGROUP_HEAD = new GROUP_HEADDataTable();
            base.Tables.Add(this.tableGROUP_HEAD);
            this.tableSITE = new SITEDataTable();
            base.Tables.Add(this.tableSITE);
            this.tableattendant_v = new attendant_vDataTable();
            base.Tables.Add(this.tableattendant_v);
            this.tablesitemap_v = new sitemap_vDataTable();
            base.Tables.Add(this.tablesitemap_v);
            this.tablegroup_head_v = new group_head_vDataTable();
            base.Tables.Add(this.tablegroup_head_v);
            this.tablegroup_attendant_v = new group_attendant_vDataTable();
            base.Tables.Add(this.tablegroup_attendant_v);
            this.tableappmenu_apppage_v = new appmenu_apppage_vDataTable();
            base.Tables.Add(this.tableappmenu_apppage_v);
            this.tablegroup_appmenu_v = new group_appmenu_vDataTable();
            base.Tables.Add(this.tablegroup_appmenu_v);
            this.tableauthority_menu_v = new authority_menu_vDataTable();
            base.Tables.Add(this.tableauthority_menu_v);
            this.tableERROR_LOG = new ERROR_LOGDataTable();
            base.Tables.Add(this.tableERROR_LOG);
            this.tableerror_log_v = new error_log_vDataTable();
            base.Tables.Add(this.tableerror_log_v);
            this.relationSITEMAP_APPLICATION_HEAD_FK1 = new global::System.Data.DataRelation("SITEMAP_APPLICATION_HEAD_FK1", new global::System.Data.DataColumn[] {
                        this.tableAPPLICATION_HEAD.uuidColumn}, new global::System.Data.DataColumn[] {
                        this.tableSITEMAP.application_head_uuidColumn}, false);
            this.Relations.Add(this.relationSITEMAP_APPLICATION_HEAD_FK1);
            this.relationSITEMAP_APPPAGE_FK1 = new global::System.Data.DataRelation("SITEMAP_APPPAGE_FK1", new global::System.Data.DataColumn[] {
                        this.tableAPPPAGE.uuidColumn}, new global::System.Data.DataColumn[] {
                        this.tableSITEMAP.apppage_uuidColumn}, false);
            this.Relations.Add(this.relationSITEMAP_APPPAGE_FK1);
            this.relationSITEMAP_SITEMAP_FK1 = new global::System.Data.DataRelation("SITEMAP_SITEMAP_FK1", new global::System.Data.DataColumn[] {
                        this.tableSITEMAP.uuidColumn}, new global::System.Data.DataColumn[] {
                        this.tableSITEMAP.sitemap_uuidColumn}, false);
            this.Relations.Add(this.relationSITEMAP_SITEMAP_FK1);
            this.relationSITEMAP_SITEMAP_FK2 = new global::System.Data.DataRelation("SITEMAP_SITEMAP_FK2", new global::System.Data.DataColumn[] {
                        this.tableSITEMAP.uuidColumn}, new global::System.Data.DataColumn[] {
                        this.tableSITEMAP.root_uuidColumn}, false);
            this.Relations.Add(this.relationSITEMAP_SITEMAP_FK2);
            this.relationAPPMENU_APPLICATION_HEAD_FK1 = new global::System.Data.DataRelation("APPMENU_APPLICATION_HEAD_FK1", new global::System.Data.DataColumn[] {
                        this.tableAPPLICATION_HEAD.uuidColumn}, new global::System.Data.DataColumn[] {
                        this.tableAPPMENU.application_head_uuidColumn}, false);
            this.Relations.Add(this.relationAPPMENU_APPLICATION_HEAD_FK1);
            this.relationAPPMENU_APPMENU_FK1 = new global::System.Data.DataRelation("APPMENU_APPMENU_FK1", new global::System.Data.DataColumn[] {
                        this.tableAPPMENU.uuidColumn}, new global::System.Data.DataColumn[] {
                        this.tableAPPMENU.appmenu_uuidColumn}, false);
            this.Relations.Add(this.relationAPPMENU_APPMENU_FK1);
            this.relationAPPMENU_SITEMAP_FK1 = new global::System.Data.DataRelation("APPMENU_SITEMAP_FK1", new global::System.Data.DataColumn[] {
                        this.tableSITEMAP.uuidColumn}, new global::System.Data.DataColumn[] {
                        this.tableAPPMENU.sitemap_uuidColumn}, false);
            this.Relations.Add(this.relationAPPMENU_SITEMAP_FK1);
            this.relationAPPPAGE_APPLICATION_HEAD_FK1 = new global::System.Data.DataRelation("APPPAGE_APPLICATION_HEAD_FK1", new global::System.Data.DataColumn[] {
                        this.tableAPPLICATION_HEAD.uuidColumn}, new global::System.Data.DataColumn[] {
                        this.tableAPPPAGE.application_head_uuidColumn}, false);
            this.Relations.Add(this.relationAPPPAGE_APPLICATION_HEAD_FK1);
            this.relationATTENDANT_FK1 = new global::System.Data.DataRelation("ATTENDANT_FK1", new global::System.Data.DataColumn[] {
                        this.tableCOMPANY.uuidColumn}, new global::System.Data.DataColumn[] {
                        this.tableATTENDANT.company_uuidColumn}, false);
            this.Relations.Add(this.relationATTENDANT_FK1);
            this.relationATTENDANT_FK2 = new global::System.Data.DataRelation("ATTENDANT_FK2", new global::System.Data.DataColumn[] {
                        this.tableDEPARTMENT.uuidColumn}, new global::System.Data.DataColumn[] {
                        this.tableATTENDANT.department_uuidColumn}, false);
            this.Relations.Add(this.relationATTENDANT_FK2);
            this.relationATTENDANT_FK3 = new global::System.Data.DataRelation("ATTENDANT_FK3", new global::System.Data.DataColumn[] {
                        this.tableSITE.uuidColumn}, new global::System.Data.DataColumn[] {
                        this.tableATTENDANT.site_uuidColumn}, false);
            this.Relations.Add(this.relationATTENDANT_FK3);
            this.relationDEPARTMENT_FK1 = new global::System.Data.DataRelation("DEPARTMENT_FK1", new global::System.Data.DataColumn[] {
                        this.tableCOMPANY.uuidColumn}, new global::System.Data.DataColumn[] {
                        this.tableDEPARTMENT.company_uuidColumn}, false);
            this.Relations.Add(this.relationDEPARTMENT_FK1);
            this.relationDEPARTMENT_FK2 = new global::System.Data.DataRelation("DEPARTMENT_FK2", new global::System.Data.DataColumn[] {
                        this.tableDEPARTMENT.uuidColumn}, new global::System.Data.DataColumn[] {
                        this.tableDEPARTMENT.parent_department_uuidColumn}, false);
            this.Relations.Add(this.relationDEPARTMENT_FK2);
            this.relationDEPARTMENT_FK3 = new global::System.Data.DataRelation("DEPARTMENT_FK3", new global::System.Data.DataColumn[] {
                        this.tableATTENDANT.uuidColumn}, new global::System.Data.DataColumn[] {
                        this.tableDEPARTMENT.manager_uuidColumn}, false);
            this.Relations.Add(this.relationDEPARTMENT_FK3);
            this.relationGROUP_APPMENU_APPMENU_FK1 = new global::System.Data.DataRelation("GROUP_APPMENU_APPMENU_FK1", new global::System.Data.DataColumn[] {
                        this.tableAPPMENU.uuidColumn}, new global::System.Data.DataColumn[] {
                        this.tableGROUP_APPMENU.appmenu_uuidColumn}, false);
            this.Relations.Add(this.relationGROUP_APPMENU_APPMENU_FK1);
            this.relationGROUP_APPMENU_GROUP_HEAD_FK1 = new global::System.Data.DataRelation("GROUP_APPMENU_GROUP_HEAD_FK1", new global::System.Data.DataColumn[] {
                        this.tableGROUP_HEAD.uuidColumn}, new global::System.Data.DataColumn[] {
                        this.tableGROUP_APPMENU.group_head_uuidColumn}, false);
            this.Relations.Add(this.relationGROUP_APPMENU_GROUP_HEAD_FK1);
            this.relationGROUP_ATTENDANT_ATTENDANT_FK1 = new global::System.Data.DataRelation("GROUP_ATTENDANT_ATTENDANT_FK1", new global::System.Data.DataColumn[] {
                        this.tableATTENDANT.uuidColumn}, new global::System.Data.DataColumn[] {
                        this.tableGROUP_ATTENDANT.attendant_uuidColumn}, false);
            this.Relations.Add(this.relationGROUP_ATTENDANT_ATTENDANT_FK1);
            this.relationGROUP_ATTENDANT_GROUP_HEA_FK1 = new global::System.Data.DataRelation("GROUP_ATTENDANT_GROUP_HEA_FK1", new global::System.Data.DataColumn[] {
                        this.tableGROUP_HEAD.uuidColumn}, new global::System.Data.DataColumn[] {
                        this.tableGROUP_ATTENDANT.group_head_uuidColumn}, false);
            this.Relations.Add(this.relationGROUP_ATTENDANT_GROUP_HEA_FK1);
            this.relationGROUP_HEAD_APPLICATION_HE_FK1 = new global::System.Data.DataRelation("GROUP_HEAD_APPLICATION_HE_FK1", new global::System.Data.DataColumn[] {
                        this.tableAPPLICATION_HEAD.uuidColumn}, new global::System.Data.DataColumn[] {
                        this.tableGROUP_HEAD.application_head_uuidColumn}, false);
            this.Relations.Add(this.relationGROUP_HEAD_APPLICATION_HE_FK1);
            this.relationGROUP_HEAD_COMPANY_FK1 = new global::System.Data.DataRelation("GROUP_HEAD_COMPANY_FK1", new global::System.Data.DataColumn[] {
                        this.tableCOMPANY.uuidColumn}, new global::System.Data.DataColumn[] {
                        this.tableGROUP_HEAD.company_uuidColumn}, false);
            this.Relations.Add(this.relationGROUP_HEAD_COMPANY_FK1);
            this.relationSITE_FK1 = new global::System.Data.DataRelation("SITE_FK1", new global::System.Data.DataColumn[] {
                        this.tableCOMPANY.uuidColumn}, new global::System.Data.DataColumn[] {
                        this.tableSITE.company_uuidColumn}, false);
            this.Relations.Add(this.relationSITE_FK1);
            this.relationSITE_FK2 = new global::System.Data.DataRelation("SITE_FK2", new global::System.Data.DataColumn[] {
                        this.tableSITE.uuidColumn}, new global::System.Data.DataColumn[] {
                        this.tableSITE.parent_site_uuidColumn}, false);
            this.Relations.Add(this.relationSITE_FK2);
            this.relationCOMPANY_group_attendant_v = new global::System.Data.DataRelation("COMPANY_group_attendant_v", new global::System.Data.DataColumn[] {
                        this.tableCOMPANY.uuidColumn}, new global::System.Data.DataColumn[] {
                        this.tablegroup_attendant_v.company_uuidColumn}, false);
            this.Relations.Add(this.relationCOMPANY_group_attendant_v);
            this.relationATTENDANT_group_attendant_v = new global::System.Data.DataRelation("ATTENDANT_group_attendant_v", new global::System.Data.DataColumn[] {
                        this.tableATTENDANT.uuidColumn}, new global::System.Data.DataColumn[] {
                        this.tablegroup_attendant_v.attendant_uuidColumn}, false);
            this.Relations.Add(this.relationATTENDANT_group_attendant_v);
            this.relationGROUP_HEAD_group_attendant_v = new global::System.Data.DataRelation("GROUP_HEAD_group_attendant_v", new global::System.Data.DataColumn[] {
                        this.tableGROUP_HEAD.uuidColumn}, new global::System.Data.DataColumn[] {
                        this.tablegroup_attendant_v.group_head_uuidColumn}, false);
            this.Relations.Add(this.relationGROUP_HEAD_group_attendant_v);
            this.relationAPPLICATION_HEAD_group_head_v = new global::System.Data.DataRelation("APPLICATION_HEAD_group_head_v", new global::System.Data.DataColumn[] {
                        this.tableAPPLICATION_HEAD.uuidColumn}, new global::System.Data.DataColumn[] {
                        this.tablegroup_head_v.application_head_uuidColumn}, false);
            this.Relations.Add(this.relationAPPLICATION_HEAD_group_head_v);
            this.relationCOMPANY_group_head_v = new global::System.Data.DataRelation("COMPANY_group_head_v", new global::System.Data.DataColumn[] {
                        this.tableCOMPANY.uuidColumn}, new global::System.Data.DataColumn[] {
                        this.tablegroup_head_v.company_uuidColumn}, false);
            this.Relations.Add(this.relationCOMPANY_group_head_v);
            this.relationAPPMENU_appmenu_apppage_v = new global::System.Data.DataRelation("APPMENU_appmenu_apppage_v", new global::System.Data.DataColumn[] {
                        this.tableAPPMENU.uuidColumn}, new global::System.Data.DataColumn[] {
                        this.tableappmenu_apppage_v.APPMENU_UUIDColumn}, false);
            this.Relations.Add(this.relationAPPMENU_appmenu_apppage_v);
            this.relationAPPLICATION_HEAD_appmenu_apppage_v = new global::System.Data.DataRelation("APPLICATION_HEAD_appmenu_apppage_v", new global::System.Data.DataColumn[] {
                        this.tableAPPLICATION_HEAD.uuidColumn}, new global::System.Data.DataColumn[] {
                        this.tableappmenu_apppage_v.APPLICATION_HEAD_UUIDColumn}, false);
            this.Relations.Add(this.relationAPPLICATION_HEAD_appmenu_apppage_v);
            this.relationSITEMAP_appmenu_apppage_v = new global::System.Data.DataRelation("SITEMAP_appmenu_apppage_v", new global::System.Data.DataColumn[] {
                        this.tableSITEMAP.uuidColumn}, new global::System.Data.DataColumn[] {
                        this.tableappmenu_apppage_v.SITEMAP_UUIDColumn}, false);
            this.Relations.Add(this.relationSITEMAP_appmenu_apppage_v);
            this.relationAPPMENU_group_appmenu_v = new global::System.Data.DataRelation("APPMENU_group_appmenu_v", new global::System.Data.DataColumn[] {
                        this.tableAPPMENU.uuidColumn}, new global::System.Data.DataColumn[] {
                        this.tablegroup_appmenu_v.APPMENU_UUIDColumn}, false);
            this.Relations.Add(this.relationAPPMENU_group_appmenu_v);
            this.relationGROUP_HEAD_group_appmenu_v = new global::System.Data.DataRelation("GROUP_HEAD_group_appmenu_v", new global::System.Data.DataColumn[] {
                        this.tableGROUP_HEAD.uuidColumn}, new global::System.Data.DataColumn[] {
                        this.tablegroup_appmenu_v.GROUP_HEAD_UUIDColumn}, false);
            this.Relations.Add(this.relationGROUP_HEAD_group_appmenu_v);
            this.relationATTENDANT_error_log_v = new global::System.Data.DataRelation("ATTENDANT_error_log_v", new global::System.Data.DataColumn[] {
                        this.tableATTENDANT.uuidColumn}, new global::System.Data.DataColumn[] {
                        this.tableerror_log_v.attendant_uuidColumn}, false);
            this.Relations.Add(this.relationATTENDANT_error_log_v);
            this.relationATTENDANT_ERROR_LOG = new global::System.Data.DataRelation("ATTENDANT_ERROR_LOG", new global::System.Data.DataColumn[] {
                        this.tableATTENDANT.uuidColumn}, new global::System.Data.DataColumn[] {
                        this.tableERROR_LOG.attendant_uuidColumn}, false);
            this.Relations.Add(this.relationATTENDANT_ERROR_LOG);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeAPPLICATION_HEAD() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSITEMAP() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeAPPMENU() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeAPPPAGE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeATTENDANT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCOMPANY() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDEPARTMENT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGROUP_APPMENU() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGROUP_ATTENDANT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGROUP_HEAD() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSITE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeattendant_v() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializesitemap_v() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializegroup_head_v() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializegroup_attendant_v() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeappmenu_apppage_v() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializegroup_appmenu_v() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeauthority_menu_v() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeERROR_LOG() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeerror_log_v() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            Basic ds = new Basic();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void APPLICATION_HEADRowChangeEventHandler(object sender, APPLICATION_HEADRowChangeEvent e);
        
        public delegate void SITEMAPRowChangeEventHandler(object sender, SITEMAPRowChangeEvent e);
        
        public delegate void APPMENURowChangeEventHandler(object sender, APPMENURowChangeEvent e);
        
        public delegate void APPPAGERowChangeEventHandler(object sender, APPPAGERowChangeEvent e);
        
        public delegate void ATTENDANTRowChangeEventHandler(object sender, ATTENDANTRowChangeEvent e);
        
        public delegate void COMPANYRowChangeEventHandler(object sender, COMPANYRowChangeEvent e);
        
        public delegate void DEPARTMENTRowChangeEventHandler(object sender, DEPARTMENTRowChangeEvent e);
        
        public delegate void GROUP_APPMENURowChangeEventHandler(object sender, GROUP_APPMENURowChangeEvent e);
        
        public delegate void GROUP_ATTENDANTRowChangeEventHandler(object sender, GROUP_ATTENDANTRowChangeEvent e);
        
        public delegate void GROUP_HEADRowChangeEventHandler(object sender, GROUP_HEADRowChangeEvent e);
        
        public delegate void SITERowChangeEventHandler(object sender, SITERowChangeEvent e);
        
        public delegate void attendant_vRowChangeEventHandler(object sender, attendant_vRowChangeEvent e);
        
        public delegate void sitemap_vRowChangeEventHandler(object sender, sitemap_vRowChangeEvent e);
        
        public delegate void group_head_vRowChangeEventHandler(object sender, group_head_vRowChangeEvent e);
        
        public delegate void group_attendant_vRowChangeEventHandler(object sender, group_attendant_vRowChangeEvent e);
        
        public delegate void appmenu_apppage_vRowChangeEventHandler(object sender, appmenu_apppage_vRowChangeEvent e);
        
        public delegate void group_appmenu_vRowChangeEventHandler(object sender, group_appmenu_vRowChangeEvent e);
        
        public delegate void authority_menu_vRowChangeEventHandler(object sender, authority_menu_vRowChangeEvent e);
        
        public delegate void ERROR_LOGRowChangeEventHandler(object sender, ERROR_LOGRowChangeEvent e);
        
        public delegate void error_log_vRowChangeEventHandler(object sender, error_log_vRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class APPLICATION_HEADDataTable : global::System.Data.TypedTableBase<APPLICATION_HEADRow> {
            
            private global::System.Data.DataColumn columnuuid;
            
            private global::System.Data.DataColumn columncreate_date;
            
            private global::System.Data.DataColumn columnupdate_date;
            
            private global::System.Data.DataColumn columnis_active;
            
            private global::System.Data.DataColumn columnname;
            
            private global::System.Data.DataColumn columndescription;
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columncreate_user;
            
            private global::System.Data.DataColumn columnupdate_user;
            
            private global::System.Data.DataColumn columnweb_site;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APPLICATION_HEADDataTable() {
                this.TableName = "APPLICATION_HEAD";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal APPLICATION_HEADDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected APPLICATION_HEADDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn uuidColumn {
                get {
                    return this.columnuuid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn create_dateColumn {
                get {
                    return this.columncreate_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn update_dateColumn {
                get {
                    return this.columnupdate_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn is_activeColumn {
                get {
                    return this.columnis_active;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn descriptionColumn {
                get {
                    return this.columndescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn create_userColumn {
                get {
                    return this.columncreate_user;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn update_userColumn {
                get {
                    return this.columnupdate_user;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn web_siteColumn {
                get {
                    return this.columnweb_site;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APPLICATION_HEADRow this[int index] {
                get {
                    return ((APPLICATION_HEADRow)(this.Rows[index]));
                }
            }
            
            public event APPLICATION_HEADRowChangeEventHandler APPLICATION_HEADRowChanging;
            
            public event APPLICATION_HEADRowChangeEventHandler APPLICATION_HEADRowChanged;
            
            public event APPLICATION_HEADRowChangeEventHandler APPLICATION_HEADRowDeleting;
            
            public event APPLICATION_HEADRowChangeEventHandler APPLICATION_HEADRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddAPPLICATION_HEADRow(APPLICATION_HEADRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APPLICATION_HEADRow AddAPPLICATION_HEADRow(string uuid, System.DateTime create_date, System.DateTime update_date, string is_active, string name, string description, string id, string create_user, string update_user, string web_site) {
                APPLICATION_HEADRow rowAPPLICATION_HEADRow = ((APPLICATION_HEADRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        uuid,
                        create_date,
                        update_date,
                        is_active,
                        name,
                        description,
                        id,
                        create_user,
                        update_user,
                        web_site};
                rowAPPLICATION_HEADRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAPPLICATION_HEADRow);
                return rowAPPLICATION_HEADRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APPLICATION_HEADRow FindByuuid(string uuid) {
                return ((APPLICATION_HEADRow)(this.Rows.Find(new object[] {
                            uuid})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                APPLICATION_HEADDataTable cln = ((APPLICATION_HEADDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new APPLICATION_HEADDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnuuid = base.Columns["uuid"];
                this.columncreate_date = base.Columns["create_date"];
                this.columnupdate_date = base.Columns["update_date"];
                this.columnis_active = base.Columns["is_active"];
                this.columnname = base.Columns["name"];
                this.columndescription = base.Columns["description"];
                this.columnid = base.Columns["id"];
                this.columncreate_user = base.Columns["create_user"];
                this.columnupdate_user = base.Columns["update_user"];
                this.columnweb_site = base.Columns["web_site"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnuuid = new global::System.Data.DataColumn("uuid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuuid);
                this.columncreate_date = new global::System.Data.DataColumn("create_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreate_date);
                this.columnupdate_date = new global::System.Data.DataColumn("update_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnupdate_date);
                this.columnis_active = new global::System.Data.DataColumn("is_active", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnis_active);
                this.columnname = new global::System.Data.DataColumn("name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columndescription = new global::System.Data.DataColumn("description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndescription);
                this.columnid = new global::System.Data.DataColumn("id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columncreate_user = new global::System.Data.DataColumn("create_user", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreate_user);
                this.columnupdate_user = new global::System.Data.DataColumn("update_user", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnupdate_user);
                this.columnweb_site = new global::System.Data.DataColumn("web_site", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnweb_site);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnuuid}, true));
                this.columnuuid.AllowDBNull = false;
                this.columnuuid.Unique = true;
                this.columnuuid.MaxLength = 36;
                this.columncreate_date.AllowDBNull = false;
                this.columnis_active.AllowDBNull = false;
                this.columnis_active.MaxLength = 1;
                this.columnname.AllowDBNull = false;
                this.columnname.MaxLength = 200;
                this.columndescription.MaxLength = 500;
                this.columnid.AllowDBNull = false;
                this.columnid.MaxLength = 100;
                this.columncreate_user.MaxLength = 36;
                this.columnupdate_user.MaxLength = 36;
                this.columnweb_site.MaxLength = 200;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APPLICATION_HEADRow NewAPPLICATION_HEADRow() {
                return ((APPLICATION_HEADRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new APPLICATION_HEADRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(APPLICATION_HEADRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.APPLICATION_HEADRowChanged != null)) {
                    this.APPLICATION_HEADRowChanged(this, new APPLICATION_HEADRowChangeEvent(((APPLICATION_HEADRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.APPLICATION_HEADRowChanging != null)) {
                    this.APPLICATION_HEADRowChanging(this, new APPLICATION_HEADRowChangeEvent(((APPLICATION_HEADRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.APPLICATION_HEADRowDeleted != null)) {
                    this.APPLICATION_HEADRowDeleted(this, new APPLICATION_HEADRowChangeEvent(((APPLICATION_HEADRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.APPLICATION_HEADRowDeleting != null)) {
                    this.APPLICATION_HEADRowDeleting(this, new APPLICATION_HEADRowChangeEvent(((APPLICATION_HEADRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveAPPLICATION_HEADRow(APPLICATION_HEADRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Basic ds = new Basic();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "APPLICATION_HEADDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SITEMAPDataTable : global::System.Data.TypedTableBase<SITEMAPRow> {
            
            private global::System.Data.DataColumn columnuuid;
            
            private global::System.Data.DataColumn columnis_active;
            
            private global::System.Data.DataColumn columncreate_date;
            
            private global::System.Data.DataColumn columncreate_user;
            
            private global::System.Data.DataColumn columnupdate_date;
            
            private global::System.Data.DataColumn columnupdate_user;
            
            private global::System.Data.DataColumn columnsitemap_uuid;
            
            private global::System.Data.DataColumn columnapppage_uuid;
            
            private global::System.Data.DataColumn columnroot_uuid;
            
            private global::System.Data.DataColumn columnhaschild;
            
            private global::System.Data.DataColumn columnapplication_head_uuid;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SITEMAPDataTable() {
                this.TableName = "SITEMAP";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SITEMAPDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SITEMAPDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn uuidColumn {
                get {
                    return this.columnuuid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn is_activeColumn {
                get {
                    return this.columnis_active;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn create_dateColumn {
                get {
                    return this.columncreate_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn create_userColumn {
                get {
                    return this.columncreate_user;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn update_dateColumn {
                get {
                    return this.columnupdate_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn update_userColumn {
                get {
                    return this.columnupdate_user;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sitemap_uuidColumn {
                get {
                    return this.columnsitemap_uuid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn apppage_uuidColumn {
                get {
                    return this.columnapppage_uuid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn root_uuidColumn {
                get {
                    return this.columnroot_uuid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn haschildColumn {
                get {
                    return this.columnhaschild;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn application_head_uuidColumn {
                get {
                    return this.columnapplication_head_uuid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SITEMAPRow this[int index] {
                get {
                    return ((SITEMAPRow)(this.Rows[index]));
                }
            }
            
            public event SITEMAPRowChangeEventHandler SITEMAPRowChanging;
            
            public event SITEMAPRowChangeEventHandler SITEMAPRowChanged;
            
            public event SITEMAPRowChangeEventHandler SITEMAPRowDeleting;
            
            public event SITEMAPRowChangeEventHandler SITEMAPRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSITEMAPRow(SITEMAPRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SITEMAPRow AddSITEMAPRow(string uuid, string is_active, System.DateTime create_date, string create_user, System.DateTime update_date, string update_user, SITEMAPRow parentSITEMAPRowBySITEMAP_SITEMAP_FK1, APPPAGERow parentAPPPAGERowBySITEMAP_APPPAGE_FK1, SITEMAPRow parentSITEMAPRowBySITEMAP_SITEMAP_FK2, string haschild, APPLICATION_HEADRow parentAPPLICATION_HEADRowBySITEMAP_APPLICATION_HEAD_FK1) {
                SITEMAPRow rowSITEMAPRow = ((SITEMAPRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        uuid,
                        is_active,
                        create_date,
                        create_user,
                        update_date,
                        update_user,
                        null,
                        null,
                        null,
                        haschild,
                        null};
                if ((parentSITEMAPRowBySITEMAP_SITEMAP_FK1 != null)) {
                    columnValuesArray[6] = parentSITEMAPRowBySITEMAP_SITEMAP_FK1[0];
                }
                if ((parentAPPPAGERowBySITEMAP_APPPAGE_FK1 != null)) {
                    columnValuesArray[7] = parentAPPPAGERowBySITEMAP_APPPAGE_FK1[0];
                }
                if ((parentSITEMAPRowBySITEMAP_SITEMAP_FK2 != null)) {
                    columnValuesArray[8] = parentSITEMAPRowBySITEMAP_SITEMAP_FK2[0];
                }
                if ((parentAPPLICATION_HEADRowBySITEMAP_APPLICATION_HEAD_FK1 != null)) {
                    columnValuesArray[10] = parentAPPLICATION_HEADRowBySITEMAP_APPLICATION_HEAD_FK1[0];
                }
                rowSITEMAPRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSITEMAPRow);
                return rowSITEMAPRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SITEMAPRow FindByuuid(string uuid) {
                return ((SITEMAPRow)(this.Rows.Find(new object[] {
                            uuid})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SITEMAPDataTable cln = ((SITEMAPDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SITEMAPDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnuuid = base.Columns["uuid"];
                this.columnis_active = base.Columns["is_active"];
                this.columncreate_date = base.Columns["create_date"];
                this.columncreate_user = base.Columns["create_user"];
                this.columnupdate_date = base.Columns["update_date"];
                this.columnupdate_user = base.Columns["update_user"];
                this.columnsitemap_uuid = base.Columns["sitemap_uuid"];
                this.columnapppage_uuid = base.Columns["apppage_uuid"];
                this.columnroot_uuid = base.Columns["root_uuid"];
                this.columnhaschild = base.Columns["haschild"];
                this.columnapplication_head_uuid = base.Columns["application_head_uuid"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnuuid = new global::System.Data.DataColumn("uuid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuuid);
                this.columnis_active = new global::System.Data.DataColumn("is_active", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnis_active);
                this.columncreate_date = new global::System.Data.DataColumn("create_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreate_date);
                this.columncreate_user = new global::System.Data.DataColumn("create_user", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreate_user);
                this.columnupdate_date = new global::System.Data.DataColumn("update_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnupdate_date);
                this.columnupdate_user = new global::System.Data.DataColumn("update_user", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnupdate_user);
                this.columnsitemap_uuid = new global::System.Data.DataColumn("sitemap_uuid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsitemap_uuid);
                this.columnapppage_uuid = new global::System.Data.DataColumn("apppage_uuid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnapppage_uuid);
                this.columnroot_uuid = new global::System.Data.DataColumn("root_uuid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnroot_uuid);
                this.columnhaschild = new global::System.Data.DataColumn("haschild", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhaschild);
                this.columnapplication_head_uuid = new global::System.Data.DataColumn("application_head_uuid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnapplication_head_uuid);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnuuid}, true));
                this.columnuuid.AllowDBNull = false;
                this.columnuuid.Unique = true;
                this.columnuuid.MaxLength = 36;
                this.columnis_active.AllowDBNull = false;
                this.columnis_active.MaxLength = 1;
                this.columncreate_date.AllowDBNull = false;
                this.columncreate_user.AllowDBNull = false;
                this.columncreate_user.MaxLength = 36;
                this.columnupdate_user.MaxLength = 36;
                this.columnsitemap_uuid.MaxLength = 36;
                this.columnapppage_uuid.AllowDBNull = false;
                this.columnapppage_uuid.MaxLength = 36;
                this.columnroot_uuid.AllowDBNull = false;
                this.columnroot_uuid.MaxLength = 36;
                this.columnhaschild.AllowDBNull = false;
                this.columnhaschild.MaxLength = 1;
                this.columnapplication_head_uuid.MaxLength = 36;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SITEMAPRow NewSITEMAPRow() {
                return ((SITEMAPRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SITEMAPRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SITEMAPRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SITEMAPRowChanged != null)) {
                    this.SITEMAPRowChanged(this, new SITEMAPRowChangeEvent(((SITEMAPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SITEMAPRowChanging != null)) {
                    this.SITEMAPRowChanging(this, new SITEMAPRowChangeEvent(((SITEMAPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SITEMAPRowDeleted != null)) {
                    this.SITEMAPRowDeleted(this, new SITEMAPRowChangeEvent(((SITEMAPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SITEMAPRowDeleting != null)) {
                    this.SITEMAPRowDeleting(this, new SITEMAPRowChangeEvent(((SITEMAPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSITEMAPRow(SITEMAPRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Basic ds = new Basic();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SITEMAPDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class APPMENUDataTable : global::System.Data.TypedTableBase<APPMENURow> {
            
            private global::System.Data.DataColumn columnuuid;
            
            private global::System.Data.DataColumn columnis_active;
            
            private global::System.Data.DataColumn columncreate_date;
            
            private global::System.Data.DataColumn columncreate_user;
            
            private global::System.Data.DataColumn columnupdate_date;
            
            private global::System.Data.DataColumn columnupdate_user;
            
            private global::System.Data.DataColumn columnname_zh_tw;
            
            private global::System.Data.DataColumn columnname_zh_cn;
            
            private global::System.Data.DataColumn columnname_en_us;
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnappmenu_uuid;
            
            private global::System.Data.DataColumn columnhaschild;
            
            private global::System.Data.DataColumn columnapplication_head_uuid;
            
            private global::System.Data.DataColumn columnord;
            
            private global::System.Data.DataColumn columnparameter_class;
            
            private global::System.Data.DataColumn columnimage;
            
            private global::System.Data.DataColumn columnsitemap_uuid;
            
            private global::System.Data.DataColumn columnaction_mode;
            
            private global::System.Data.DataColumn columnis_default_page;
            
            private global::System.Data.DataColumn columnis_admin;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APPMENUDataTable() {
                this.TableName = "APPMENU";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal APPMENUDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected APPMENUDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn uuidColumn {
                get {
                    return this.columnuuid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn is_activeColumn {
                get {
                    return this.columnis_active;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn create_dateColumn {
                get {
                    return this.columncreate_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn create_userColumn {
                get {
                    return this.columncreate_user;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn update_dateColumn {
                get {
                    return this.columnupdate_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn update_userColumn {
                get {
                    return this.columnupdate_user;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn name_zh_twColumn {
                get {
                    return this.columnname_zh_tw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn name_zh_cnColumn {
                get {
                    return this.columnname_zh_cn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn name_en_usColumn {
                get {
                    return this.columnname_en_us;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn appmenu_uuidColumn {
                get {
                    return this.columnappmenu_uuid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn haschildColumn {
                get {
                    return this.columnhaschild;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn application_head_uuidColumn {
                get {
                    return this.columnapplication_head_uuid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ordColumn {
                get {
                    return this.columnord;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn parameter_classColumn {
                get {
                    return this.columnparameter_class;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn imageColumn {
                get {
                    return this.columnimage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sitemap_uuidColumn {
                get {
                    return this.columnsitemap_uuid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn action_modeColumn {
                get {
                    return this.columnaction_mode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn is_default_pageColumn {
                get {
                    return this.columnis_default_page;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn is_adminColumn {
                get {
                    return this.columnis_admin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APPMENURow this[int index] {
                get {
                    return ((APPMENURow)(this.Rows[index]));
                }
            }
            
            public event APPMENURowChangeEventHandler APPMENURowChanging;
            
            public event APPMENURowChangeEventHandler APPMENURowChanged;
            
            public event APPMENURowChangeEventHandler APPMENURowDeleting;
            
            public event APPMENURowChangeEventHandler APPMENURowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddAPPMENURow(APPMENURow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APPMENURow AddAPPMENURow(
                        string uuid, 
                        string is_active, 
                        System.DateTime create_date, 
                        string create_user, 
                        System.DateTime update_date, 
                        string update_user, 
                        string name_zh_tw, 
                        string name_zh_cn, 
                        string name_en_us, 
                        string id, 
                        APPMENURow parentAPPMENURowByAPPMENU_APPMENU_FK1, 
                        string haschild, 
                        APPLICATION_HEADRow parentAPPLICATION_HEADRowByAPPMENU_APPLICATION_HEAD_FK1, 
                        decimal ord, 
                        string parameter_class, 
                        string image, 
                        SITEMAPRow parentSITEMAPRowByAPPMENU_SITEMAP_FK1, 
                        string action_mode, 
                        string is_default_page, 
                        string is_admin) {
                APPMENURow rowAPPMENURow = ((APPMENURow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        uuid,
                        is_active,
                        create_date,
                        create_user,
                        update_date,
                        update_user,
                        name_zh_tw,
                        name_zh_cn,
                        name_en_us,
                        id,
                        null,
                        haschild,
                        null,
                        ord,
                        parameter_class,
                        image,
                        null,
                        action_mode,
                        is_default_page,
                        is_admin};
                if ((parentAPPMENURowByAPPMENU_APPMENU_FK1 != null)) {
                    columnValuesArray[10] = parentAPPMENURowByAPPMENU_APPMENU_FK1[0];
                }
                if ((parentAPPLICATION_HEADRowByAPPMENU_APPLICATION_HEAD_FK1 != null)) {
                    columnValuesArray[12] = parentAPPLICATION_HEADRowByAPPMENU_APPLICATION_HEAD_FK1[0];
                }
                if ((parentSITEMAPRowByAPPMENU_SITEMAP_FK1 != null)) {
                    columnValuesArray[16] = parentSITEMAPRowByAPPMENU_SITEMAP_FK1[0];
                }
                rowAPPMENURow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAPPMENURow);
                return rowAPPMENURow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APPMENURow FindByuuid(string uuid) {
                return ((APPMENURow)(this.Rows.Find(new object[] {
                            uuid})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                APPMENUDataTable cln = ((APPMENUDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new APPMENUDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnuuid = base.Columns["uuid"];
                this.columnis_active = base.Columns["is_active"];
                this.columncreate_date = base.Columns["create_date"];
                this.columncreate_user = base.Columns["create_user"];
                this.columnupdate_date = base.Columns["update_date"];
                this.columnupdate_user = base.Columns["update_user"];
                this.columnname_zh_tw = base.Columns["name_zh_tw"];
                this.columnname_zh_cn = base.Columns["name_zh_cn"];
                this.columnname_en_us = base.Columns["name_en_us"];
                this.columnid = base.Columns["id"];
                this.columnappmenu_uuid = base.Columns["appmenu_uuid"];
                this.columnhaschild = base.Columns["haschild"];
                this.columnapplication_head_uuid = base.Columns["application_head_uuid"];
                this.columnord = base.Columns["ord"];
                this.columnparameter_class = base.Columns["parameter_class"];
                this.columnimage = base.Columns["image"];
                this.columnsitemap_uuid = base.Columns["sitemap_uuid"];
                this.columnaction_mode = base.Columns["action_mode"];
                this.columnis_default_page = base.Columns["is_default_page"];
                this.columnis_admin = base.Columns["is_admin"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnuuid = new global::System.Data.DataColumn("uuid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuuid);
                this.columnis_active = new global::System.Data.DataColumn("is_active", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnis_active);
                this.columncreate_date = new global::System.Data.DataColumn("create_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreate_date);
                this.columncreate_user = new global::System.Data.DataColumn("create_user", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreate_user);
                this.columnupdate_date = new global::System.Data.DataColumn("update_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnupdate_date);
                this.columnupdate_user = new global::System.Data.DataColumn("update_user", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnupdate_user);
                this.columnname_zh_tw = new global::System.Data.DataColumn("name_zh_tw", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname_zh_tw);
                this.columnname_zh_cn = new global::System.Data.DataColumn("name_zh_cn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname_zh_cn);
                this.columnname_en_us = new global::System.Data.DataColumn("name_en_us", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname_en_us);
                this.columnid = new global::System.Data.DataColumn("id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnappmenu_uuid = new global::System.Data.DataColumn("appmenu_uuid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnappmenu_uuid);
                this.columnhaschild = new global::System.Data.DataColumn("haschild", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhaschild);
                this.columnapplication_head_uuid = new global::System.Data.DataColumn("application_head_uuid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnapplication_head_uuid);
                this.columnord = new global::System.Data.DataColumn("ord", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnord);
                this.columnparameter_class = new global::System.Data.DataColumn("parameter_class", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnparameter_class);
                this.columnimage = new global::System.Data.DataColumn("image", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnimage);
                this.columnsitemap_uuid = new global::System.Data.DataColumn("sitemap_uuid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsitemap_uuid);
                this.columnaction_mode = new global::System.Data.DataColumn("action_mode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaction_mode);
                this.columnis_default_page = new global::System.Data.DataColumn("is_default_page", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnis_default_page);
                this.columnis_admin = new global::System.Data.DataColumn("is_admin", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnis_admin);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnuuid}, true));
                this.columnuuid.AllowDBNull = false;
                this.columnuuid.Unique = true;
                this.columnuuid.MaxLength = 36;
                this.columnis_active.AllowDBNull = false;
                this.columnis_active.MaxLength = 1;
                this.columncreate_date.AllowDBNull = false;
                this.columncreate_user.AllowDBNull = false;
                this.columncreate_user.MaxLength = 36;
                this.columnupdate_user.MaxLength = 36;
                this.columnname_zh_tw.AllowDBNull = false;
                this.columnname_zh_tw.MaxLength = 200;
                this.columnname_zh_cn.AllowDBNull = false;
                this.columnname_zh_cn.MaxLength = 200;
                this.columnname_en_us.AllowDBNull = false;
                this.columnname_en_us.MaxLength = 200;
                this.columnid.AllowDBNull = false;
                this.columnid.MaxLength = 100;
                this.columnappmenu_uuid.MaxLength = 36;
                this.columnhaschild.AllowDBNull = false;
                this.columnhaschild.MaxLength = 1;
                this.columnapplication_head_uuid.AllowDBNull = false;
                this.columnapplication_head_uuid.MaxLength = 36;
                this.columnord.AllowDBNull = false;
                this.columnparameter_class.MaxLength = 200;
                this.columnimage.MaxLength = 100;
                this.columnsitemap_uuid.MaxLength = 36;
                this.columnaction_mode.MaxLength = 50;
                this.columnis_default_page.MaxLength = 1;
                this.columnis_admin.MaxLength = 1;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APPMENURow NewAPPMENURow() {
                return ((APPMENURow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new APPMENURow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(APPMENURow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.APPMENURowChanged != null)) {
                    this.APPMENURowChanged(this, new APPMENURowChangeEvent(((APPMENURow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.APPMENURowChanging != null)) {
                    this.APPMENURowChanging(this, new APPMENURowChangeEvent(((APPMENURow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.APPMENURowDeleted != null)) {
                    this.APPMENURowDeleted(this, new APPMENURowChangeEvent(((APPMENURow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.APPMENURowDeleting != null)) {
                    this.APPMENURowDeleting(this, new APPMENURowChangeEvent(((APPMENURow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveAPPMENURow(APPMENURow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Basic ds = new Basic();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "APPMENUDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class APPPAGEDataTable : global::System.Data.TypedTableBase<APPPAGERow> {
            
            private global::System.Data.DataColumn columnuuid;
            
            private global::System.Data.DataColumn columnis_active;
            
            private global::System.Data.DataColumn columncreate_date;
            
            private global::System.Data.DataColumn columncreate_user;
            
            private global::System.Data.DataColumn columnupdate_date;
            
            private global::System.Data.DataColumn columnupdate_user;
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnname;
            
            private global::System.Data.DataColumn columndescription;
            
            private global::System.Data.DataColumn columnurl;
            
            private global::System.Data.DataColumn columnparameter_class;
            
            private global::System.Data.DataColumn columnapplication_head_uuid;
            
            private global::System.Data.DataColumn columnp_mode;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APPPAGEDataTable() {
                this.TableName = "APPPAGE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal APPPAGEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected APPPAGEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn uuidColumn {
                get {
                    return this.columnuuid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn is_activeColumn {
                get {
                    return this.columnis_active;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn create_dateColumn {
                get {
                    return this.columncreate_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn create_userColumn {
                get {
                    return this.columncreate_user;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn update_dateColumn {
                get {
                    return this.columnupdate_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn update_userColumn {
                get {
                    return this.columnupdate_user;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn descriptionColumn {
                get {
                    return this.columndescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn urlColumn {
                get {
                    return this.columnurl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn parameter_classColumn {
                get {
                    return this.columnparameter_class;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn application_head_uuidColumn {
                get {
                    return this.columnapplication_head_uuid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn p_modeColumn {
                get {
                    return this.columnp_mode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APPPAGERow this[int index] {
                get {
                    return ((APPPAGERow)(this.Rows[index]));
                }
            }
            
            public event APPPAGERowChangeEventHandler APPPAGERowChanging;
            
            public event APPPAGERowChangeEventHandler APPPAGERowChanged;
            
            public event APPPAGERowChangeEventHandler APPPAGERowDeleting;
            
            public event APPPAGERowChangeEventHandler APPPAGERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddAPPPAGERow(APPPAGERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APPPAGERow AddAPPPAGERow(string uuid, string is_active, System.DateTime create_date, string create_user, System.DateTime update_date, string update_user, string id, string name, string description, string url, string parameter_class, APPLICATION_HEADRow parentAPPLICATION_HEADRowByAPPPAGE_APPLICATION_HEAD_FK1, string p_mode) {
                APPPAGERow rowAPPPAGERow = ((APPPAGERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        uuid,
                        is_active,
                        create_date,
                        create_user,
                        update_date,
                        update_user,
                        id,
                        name,
                        description,
                        url,
                        parameter_class,
                        null,
                        p_mode};
                if ((parentAPPLICATION_HEADRowByAPPPAGE_APPLICATION_HEAD_FK1 != null)) {
                    columnValuesArray[11] = parentAPPLICATION_HEADRowByAPPPAGE_APPLICATION_HEAD_FK1[0];
                }
                rowAPPPAGERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAPPPAGERow);
                return rowAPPPAGERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APPPAGERow FindByuuid(string uuid) {
                return ((APPPAGERow)(this.Rows.Find(new object[] {
                            uuid})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                APPPAGEDataTable cln = ((APPPAGEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new APPPAGEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnuuid = base.Columns["uuid"];
                this.columnis_active = base.Columns["is_active"];
                this.columncreate_date = base.Columns["create_date"];
                this.columncreate_user = base.Columns["create_user"];
                this.columnupdate_date = base.Columns["update_date"];
                this.columnupdate_user = base.Columns["update_user"];
                this.columnid = base.Columns["id"];
                this.columnname = base.Columns["name"];
                this.columndescription = base.Columns["description"];
                this.columnurl = base.Columns["url"];
                this.columnparameter_class = base.Columns["parameter_class"];
                this.columnapplication_head_uuid = base.Columns["application_head_uuid"];
                this.columnp_mode = base.Columns["p_mode"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnuuid = new global::System.Data.DataColumn("uuid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuuid);
                this.columnis_active = new global::System.Data.DataColumn("is_active", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnis_active);
                this.columncreate_date = new global::System.Data.DataColumn("create_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreate_date);
                this.columncreate_user = new global::System.Data.DataColumn("create_user", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreate_user);
                this.columnupdate_date = new global::System.Data.DataColumn("update_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnupdate_date);
                this.columnupdate_user = new global::System.Data.DataColumn("update_user", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnupdate_user);
                this.columnid = new global::System.Data.DataColumn("id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnname = new global::System.Data.DataColumn("name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columndescription = new global::System.Data.DataColumn("description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndescription);
                this.columnurl = new global::System.Data.DataColumn("url", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnurl);
                this.columnparameter_class = new global::System.Data.DataColumn("parameter_class", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnparameter_class);
                this.columnapplication_head_uuid = new global::System.Data.DataColumn("application_head_uuid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnapplication_head_uuid);
                this.columnp_mode = new global::System.Data.DataColumn("p_mode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnp_mode);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnuuid}, true));
                this.columnuuid.AllowDBNull = false;
                this.columnuuid.Unique = true;
                this.columnuuid.MaxLength = 36;
                this.columnis_active.AllowDBNull = false;
                this.columnis_active.MaxLength = 1;
                this.columncreate_date.AllowDBNull = false;
                this.columncreate_user.AllowDBNull = false;
                this.columncreate_user.MaxLength = 36;
                this.columnupdate_user.MaxLength = 36;
                this.columnid.AllowDBNull = false;
                this.columnid.MaxLength = 100;
                this.columnname.AllowDBNull = false;
                this.columnname.MaxLength = 200;
                this.columndescription.MaxLength = 500;
                this.columnurl.AllowDBNull = false;
                this.columnurl.MaxLength = 200;
                this.columnparameter_class.MaxLength = 200;
                this.columnapplication_head_uuid.AllowDBNull = false;
                this.columnapplication_head_uuid.MaxLength = 36;
                this.columnp_mode.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APPPAGERow NewAPPPAGERow() {
                return ((APPPAGERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new APPPAGERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(APPPAGERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.APPPAGERowChanged != null)) {
                    this.APPPAGERowChanged(this, new APPPAGERowChangeEvent(((APPPAGERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.APPPAGERowChanging != null)) {
                    this.APPPAGERowChanging(this, new APPPAGERowChangeEvent(((APPPAGERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.APPPAGERowDeleted != null)) {
                    this.APPPAGERowDeleted(this, new APPPAGERowChangeEvent(((APPPAGERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.APPPAGERowDeleting != null)) {
                    this.APPPAGERowDeleting(this, new APPPAGERowChangeEvent(((APPPAGERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveAPPPAGERow(APPPAGERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Basic ds = new Basic();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "APPPAGEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ATTENDANTDataTable : global::System.Data.TypedTableBase<ATTENDANTRow> {
            
            private global::System.Data.DataColumn columnuuid;
            
            private global::System.Data.DataColumn columncreate_date;
            
            private global::System.Data.DataColumn columnupdate_date;
            
            private global::System.Data.DataColumn columnis_active;
            
            private global::System.Data.DataColumn columncompany_uuid;
            
            private global::System.Data.DataColumn columnaccount;
            
            private global::System.Data.DataColumn columnc_name;
            
            private global::System.Data.DataColumn columne_name;
            
            private global::System.Data.DataColumn columnemail;
            
            private global::System.Data.DataColumn columnpassword;
            
            private global::System.Data.DataColumn columnis_supper;
            
            private global::System.Data.DataColumn columnis_admin;
            
            private global::System.Data.DataColumn columncode_page;
            
            private global::System.Data.DataColumn columndepartment_uuid;
            
            private global::System.Data.DataColumn columnphone;
            
            private global::System.Data.DataColumn columnsite_uuid;
            
            private global::System.Data.DataColumn columngender;
            
            private global::System.Data.DataColumn columnbirthday;
            
            private global::System.Data.DataColumn columnhire_date;
            
            private global::System.Data.DataColumn columnquit_date;
            
            private global::System.Data.DataColumn columnis_manager;
            
            private global::System.Data.DataColumn columnis_direct;
            
            private global::System.Data.DataColumn columngrade;
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnsrc_uuid;
            
            private global::System.Data.DataColumn columnis_default_pass;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ATTENDANTDataTable() {
                this.TableName = "ATTENDANT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ATTENDANTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ATTENDANTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn uuidColumn {
                get {
                    return this.columnuuid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn create_dateColumn {
                get {
                    return this.columncreate_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn update_dateColumn {
                get {
                    return this.columnupdate_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn is_activeColumn {
                get {
                    return this.columnis_active;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn company_uuidColumn {
                get {
                    return this.columncompany_uuid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn accountColumn {
                get {
                    return this.columnaccount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn c_nameColumn {
                get {
                    return this.columnc_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn e_nameColumn {
                get {
                    return this.columne_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn emailColumn {
                get {
                    return this.columnemail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn passwordColumn {
                get {
                    return this.columnpassword;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn is_supperColumn {
                get {
                    return this.columnis_supper;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn is_adminColumn {
                get {
                    return this.columnis_admin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn code_pageColumn {
                get {
                    return this.columncode_page;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn department_uuidColumn {
                get {
                    return this.columndepartment_uuid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn phoneColumn {
                get {
                    return this.columnphone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn site_uuidColumn {
                get {
                    return this.columnsite_uuid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn genderColumn {
                get {
                    return this.columngender;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn birthdayColumn {
                get {
                    return this.columnbirthday;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn hire_dateColumn {
                get {
                    return this.columnhire_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn quit_dateColumn {
                get {
                    return this.columnquit_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn is_managerColumn {
                get {
                    return this.columnis_manager;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn is_directColumn {
                get {
                    return this.columnis_direct;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn gradeColumn {
                get {
                    return this.columngrade;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn src_uuidColumn {
                get {
                    return this.columnsrc_uuid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn is_default_passColumn {
                get {
                    return this.columnis_default_pass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ATTENDANTRow this[int index] {
                get {
                    return ((ATTENDANTRow)(this.Rows[index]));
                }
            }
            
            public event ATTENDANTRowChangeEventHandler ATTENDANTRowChanging;
            
            public event ATTENDANTRowChangeEventHandler ATTENDANTRowChanged;
            
            public event ATTENDANTRowChangeEventHandler ATTENDANTRowDeleting;
            
            public event ATTENDANTRowChangeEventHandler ATTENDANTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddATTENDANTRow(ATTENDANTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ATTENDANTRow AddATTENDANTRow(
                        string uuid, 
                        System.DateTime create_date, 
                        System.DateTime update_date, 
                        string is_active, 
                        COMPANYRow parentCOMPANYRowByATTENDANT_FK1, 
                        string account, 
                        string c_name, 
                        string e_name, 
                        string email, 
                        string password, 
                        string is_supper, 
                        string is_admin, 
                        string code_page, 
                        DEPARTMENTRow parentDEPARTMENTRowByATTENDANT_FK2, 
                        string phone, 
                        SITERow parentSITERowByATTENDANT_FK3, 
                        string gender, 
                        System.DateTime birthday, 
                        System.DateTime hire_date, 
                        System.DateTime quit_date, 
                        string is_manager, 
                        string is_direct, 
                        string grade, 
                        string id, 
                        string src_uuid, 
                        string is_default_pass) {
                ATTENDANTRow rowATTENDANTRow = ((ATTENDANTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        uuid,
                        create_date,
                        update_date,
                        is_active,
                        null,
                        account,
                        c_name,
                        e_name,
                        email,
                        password,
                        is_supper,
                        is_admin,
                        code_page,
                        null,
                        phone,
                        null,
                        gender,
                        birthday,
                        hire_date,
                        quit_date,
                        is_manager,
                        is_direct,
                        grade,
                        id,
                        src_uuid,
                        is_default_pass};
                if ((parentCOMPANYRowByATTENDANT_FK1 != null)) {
                    columnValuesArray[4] = parentCOMPANYRowByATTENDANT_FK1[0];
                }
                if ((parentDEPARTMENTRowByATTENDANT_FK2 != null)) {
                    columnValuesArray[13] = parentDEPARTMENTRowByATTENDANT_FK2[0];
                }
                if ((parentSITERowByATTENDANT_FK3 != null)) {
                    columnValuesArray[15] = parentSITERowByATTENDANT_FK3[0];
                }
                rowATTENDANTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowATTENDANTRow);
                return rowATTENDANTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ATTENDANTRow FindByuuid(string uuid) {
                return ((ATTENDANTRow)(this.Rows.Find(new object[] {
                            uuid})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ATTENDANTDataTable cln = ((ATTENDANTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ATTENDANTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnuuid = base.Columns["uuid"];
                this.columncreate_date = base.Columns["create_date"];
                this.columnupdate_date = base.Columns["update_date"];
                this.columnis_active = base.Columns["is_active"];
                this.columncompany_uuid = base.Columns["company_uuid"];
                this.columnaccount = base.Columns["account"];
                this.columnc_name = base.Columns["c_name"];
                this.columne_name = base.Columns["e_name"];
                this.columnemail = base.Columns["email"];
                this.columnpassword = base.Columns["password"];
                this.columnis_supper = base.Columns["is_supper"];
                this.columnis_admin = base.Columns["is_admin"];
                this.columncode_page = base.Columns["code_page"];
                this.columndepartment_uuid = base.Columns["department_uuid"];
                this.columnphone = base.Columns["phone"];
                this.columnsite_uuid = base.Columns["site_uuid"];
                this.columngender = base.Columns["gender"];
                this.columnbirthday = base.Columns["birthday"];
                this.columnhire_date = base.Columns["hire_date"];
                this.columnquit_date = base.Columns["quit_date"];
                this.columnis_manager = base.Columns["is_manager"];
                this.columnis_direct = base.Columns["is_direct"];
                this.columngrade = base.Columns["grade"];
                this.columnid = base.Columns["id"];
                this.columnsrc_uuid = base.Columns["src_uuid"];
                this.columnis_default_pass = base.Columns["is_default_pass"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnuuid = new global::System.Data.DataColumn("uuid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuuid);
                this.columncreate_date = new global::System.Data.DataColumn("create_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreate_date);
                this.columnupdate_date = new global::System.Data.DataColumn("update_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnupdate_date);
                this.columnis_active = new global::System.Data.DataColumn("is_active", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnis_active);
                this.columncompany_uuid = new global::System.Data.DataColumn("company_uuid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncompany_uuid);
                this.columnaccount = new global::System.Data.DataColumn("account", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaccount);
                this.columnc_name = new global::System.Data.DataColumn("c_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnc_name);
                this.columne_name = new global::System.Data.DataColumn("e_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columne_name);
                this.columnemail = new global::System.Data.DataColumn("email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemail);
                this.columnpassword = new global::System.Data.DataColumn("password", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpassword);
                this.columnis_supper = new global::System.Data.DataColumn("is_supper", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnis_supper);
                this.columnis_admin = new global::System.Data.DataColumn("is_admin", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnis_admin);
                this.columncode_page = new global::System.Data.DataColumn("code_page", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncode_page);
                this.columndepartment_uuid = new global::System.Data.DataColumn("department_uuid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndepartment_uuid);
                this.columnphone = new global::System.Data.DataColumn("phone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnphone);
                this.columnsite_uuid = new global::System.Data.DataColumn("site_uuid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsite_uuid);
                this.columngender = new global::System.Data.DataColumn("gender", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngender);
                this.columnbirthday = new global::System.Data.DataColumn("birthday", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbirthday);
                this.columnhire_date = new global::System.Data.DataColumn("hire_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhire_date);
                this.columnquit_date = new global::System.Data.DataColumn("quit_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnquit_date);
                this.columnis_manager = new global::System.Data.DataColumn("is_manager", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnis_manager);
                this.columnis_direct = new global::System.Data.DataColumn("is_direct", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnis_direct);
                this.columngrade = new global::System.Data.DataColumn("grade", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngrade);
                this.columnid = new global::System.Data.DataColumn("id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnsrc_uuid = new global::System.Data.DataColumn("src_uuid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsrc_uuid);
                this.columnis_default_pass = new global::System.Data.DataColumn("is_default_pass", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnis_default_pass);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnuuid}, true));
                this.columnuuid.AllowDBNull = false;
                this.columnuuid.Unique = true;
                this.columnuuid.MaxLength = 36;
                this.columnis_active.AllowDBNull = false;
                this.columnis_active.MaxLength = 1;
                this.columncompany_uuid.AllowDBNull = false;
                this.columncompany_uuid.MaxLength = 36;
                this.columnaccount.AllowDBNull = false;
                this.columnaccount.MaxLength = 50;
                this.columnc_name.MaxLength = 100;
                this.columne_name.MaxLength = 100;
                this.columnemail.AllowDBNull = false;
                this.columnemail.MaxLength = 300;
                this.columnpassword.MaxLength = 50;
                this.columnis_supper.AllowDBNull = false;
                this.columnis_supper.MaxLength = 1;
                this.columnis_admin.AllowDBNull = false;
                this.columnis_admin.MaxLength = 1;
                this.columncode_page.AllowDBNull = false;
                this.columncode_page.MaxLength = 10;
                this.columndepartment_uuid.MaxLength = 36;
                this.columnphone.MaxLength = 50;
                this.columnsite_uuid.MaxLength = 36;
                this.columngender.MaxLength = 1;
                this.columnis_manager.MaxLength = 1;
                this.columnis_direct.MaxLength = 1;
                this.columngrade.MaxLength = 10;
                this.columnid.MaxLength = 100;
                this.columnsrc_uuid.MaxLength = 36;
                this.columnis_default_pass.MaxLength = 1;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ATTENDANTRow NewATTENDANTRow() {
                return ((ATTENDANTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ATTENDANTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ATTENDANTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ATTENDANTRowChanged != null)) {
                    this.ATTENDANTRowChanged(this, new ATTENDANTRowChangeEvent(((ATTENDANTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ATTENDANTRowChanging != null)) {
                    this.ATTENDANTRowChanging(this, new ATTENDANTRowChangeEvent(((ATTENDANTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ATTENDANTRowDeleted != null)) {
                    this.ATTENDANTRowDeleted(this, new ATTENDANTRowChangeEvent(((ATTENDANTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ATTENDANTRowDeleting != null)) {
                    this.ATTENDANTRowDeleting(this, new ATTENDANTRowChangeEvent(((ATTENDANTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveATTENDANTRow(ATTENDANTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Basic ds = new Basic();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ATTENDANTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class COMPANYDataTable : global::System.Data.TypedTableBase<COMPANYRow> {
            
            private global::System.Data.DataColumn columnuuid;
            
            private global::System.Data.DataColumn columncreate_date;
            
            private global::System.Data.DataColumn columnupdate_date;
            
            private global::System.Data.DataColumn columnis_active;
            
            private global::System.Data.DataColumn columnclass;
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnc_name;
            
            private global::System.Data.DataColumn columne_name;
            
            private global::System.Data.DataColumn columnvoucher_point_uuid;
            
            private global::System.Data.DataColumn columnweek_shift;
            
            private global::System.Data.DataColumn columnou_sync_type;
            
            private global::System.Data.DataColumn columnname_zh_cn;
            
            private global::System.Data.DataColumn columnconcurrent_user;
            
            private global::System.Data.DataColumn columnexpired_date;
            
            private global::System.Data.DataColumn columnsales_attendant_uuid;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public COMPANYDataTable() {
                this.TableName = "COMPANY";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal COMPANYDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected COMPANYDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn uuidColumn {
                get {
                    return this.columnuuid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn create_dateColumn {
                get {
                    return this.columncreate_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn update_dateColumn {
                get {
                    return this.columnupdate_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn is_activeColumn {
                get {
                    return this.columnis_active;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn classColumn {
                get {
                    return this.columnclass;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn c_nameColumn {
                get {
                    return this.columnc_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn e_nameColumn {
                get {
                    return this.columne_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn voucher_point_uuidColumn {
                get {
                    return this.columnvoucher_point_uuid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn week_shiftColumn {
                get {
                    return this.columnweek_shift;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ou_sync_typeColumn {
                get {
                    return this.columnou_sync_type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn name_zh_cnColumn {
                get {
                    return this.columnname_zh_cn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn concurrent_userColumn {
                get {
                    return this.columnconcurrent_user;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn expired_dateColumn {
                get {
                    return this.columnexpired_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sales_attendant_uuidColumn {
                get {
                    return this.columnsales_attendant_uuid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public COMPANYRow this[int index] {
                get {
                    return ((COMPANYRow)(this.Rows[index]));
                }
            }
            
            public event COMPANYRowChangeEventHandler COMPANYRowChanging;
            
            public event COMPANYRowChangeEventHandler COMPANYRowChanged;
            
            public event COMPANYRowChangeEventHandler COMPANYRowDeleting;
            
            public event COMPANYRowChangeEventHandler COMPANYRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCOMPANYRow(COMPANYRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public COMPANYRow AddCOMPANYRow(string uuid, System.DateTime create_date, System.DateTime update_date, string is_active, string _class, string id, string c_name, string e_name, string voucher_point_uuid, decimal week_shift, string ou_sync_type, string name_zh_cn, string concurrent_user, System.DateTime expired_date, string sales_attendant_uuid) {
                COMPANYRow rowCOMPANYRow = ((COMPANYRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        uuid,
                        create_date,
                        update_date,
                        is_active,
                        _class,
                        id,
                        c_name,
                        e_name,
                        voucher_point_uuid,
                        week_shift,
                        ou_sync_type,
                        name_zh_cn,
                        concurrent_user,
                        expired_date,
                        sales_attendant_uuid};
                rowCOMPANYRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCOMPANYRow);
                return rowCOMPANYRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public COMPANYRow FindByuuid(string uuid) {
                return ((COMPANYRow)(this.Rows.Find(new object[] {
                            uuid})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                COMPANYDataTable cln = ((COMPANYDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new COMPANYDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnuuid = base.Columns["uuid"];
                this.columncreate_date = base.Columns["create_date"];
                this.columnupdate_date = base.Columns["update_date"];
                this.columnis_active = base.Columns["is_active"];
                this.columnclass = base.Columns["class"];
                this.columnid = base.Columns["id"];
                this.columnc_name = base.Columns["c_name"];
                this.columne_name = base.Columns["e_name"];
                this.columnvoucher_point_uuid = base.Columns["voucher_point_uuid"];
                this.columnweek_shift = base.Columns["week_shift"];
                this.columnou_sync_type = base.Columns["ou_sync_type"];
                this.columnname_zh_cn = base.Columns["name_zh_cn"];
                this.columnconcurrent_user = base.Columns["concurrent_user"];
                this.columnexpired_date = base.Columns["expired_date"];
                this.columnsales_attendant_uuid = base.Columns["sales_attendant_uuid"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnuuid = new global::System.Data.DataColumn("uuid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuuid);
                this.columncreate_date = new global::System.Data.DataColumn("create_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreate_date);
                this.columnupdate_date = new global::System.Data.DataColumn("update_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnupdate_date);
                this.columnis_active = new global::System.Data.DataColumn("is_active", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnis_active);
                this.columnclass = new global::System.Data.DataColumn("class", typeof(string), null, global::System.Data.MappingType.Element);
                this.columnclass.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "classColumn");
                this.columnclass.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnclass");
                this.columnclass.ExtendedProperties.Add("Generator_UserColumnName", "class");
                base.Columns.Add(this.columnclass);
                this.columnid = new global::System.Data.DataColumn("id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnc_name = new global::System.Data.DataColumn("c_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnc_name);
                this.columne_name = new global::System.Data.DataColumn("e_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columne_name);
                this.columnvoucher_point_uuid = new global::System.Data.DataColumn("voucher_point_uuid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvoucher_point_uuid);
                this.columnweek_shift = new global::System.Data.DataColumn("week_shift", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnweek_shift);
                this.columnou_sync_type = new global::System.Data.DataColumn("ou_sync_type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnou_sync_type);
                this.columnname_zh_cn = new global::System.Data.DataColumn("name_zh_cn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname_zh_cn);
                this.columnconcurrent_user = new global::System.Data.DataColumn("concurrent_user", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnconcurrent_user);
                this.columnexpired_date = new global::System.Data.DataColumn("expired_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnexpired_date);
                this.columnsales_attendant_uuid = new global::System.Data.DataColumn("sales_attendant_uuid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsales_attendant_uuid);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnuuid}, true));
                this.columnuuid.AllowDBNull = false;
                this.columnuuid.Unique = true;
                this.columnuuid.MaxLength = 36;
                this.columnis_active.AllowDBNull = false;
                this.columnis_active.MaxLength = 1;
                this.columnclass.AllowDBNull = false;
                this.columnclass.MaxLength = 10;
                this.columnid.AllowDBNull = false;
                this.columnid.MaxLength = 100;
                this.columnc_name.MaxLength = 100;
                this.columne_name.MaxLength = 100;
                this.columnvoucher_point_uuid.MaxLength = 36;
                this.columnou_sync_type.MaxLength = 1;
                this.columnname_zh_cn.MaxLength = 128;
                this.columnconcurrent_user.MaxLength = 128;
                this.columnsales_attendant_uuid.MaxLength = 36;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public COMPANYRow NewCOMPANYRow() {
                return ((COMPANYRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new COMPANYRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(COMPANYRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.COMPANYRowChanged != null)) {
                    this.COMPANYRowChanged(this, new COMPANYRowChangeEvent(((COMPANYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.COMPANYRowChanging != null)) {
                    this.COMPANYRowChanging(this, new COMPANYRowChangeEvent(((COMPANYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.COMPANYRowDeleted != null)) {
                    this.COMPANYRowDeleted(this, new COMPANYRowChangeEvent(((COMPANYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.COMPANYRowDeleting != null)) {
                    this.COMPANYRowDeleting(this, new COMPANYRowChangeEvent(((COMPANYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCOMPANYRow(COMPANYRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Basic ds = new Basic();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "COMPANYDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DEPARTMENTDataTable : global::System.Data.TypedTableBase<DEPARTMENTRow> {
            
            private global::System.Data.DataColumn columnuuid;
            
            private global::System.Data.DataColumn columncreate_date;
            
            private global::System.Data.DataColumn columnupdate_date;
            
            private global::System.Data.DataColumn columnis_active;
            
            private global::System.Data.DataColumn columncompany_uuid;
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnc_name;
            
            private global::System.Data.DataColumn columne_name;
            
            private global::System.Data.DataColumn columnparent_department_uuid;
            
            private global::System.Data.DataColumn columnmanager_uuid;
            
            private global::System.Data.DataColumn columnparent_department_id;
            
            private global::System.Data.DataColumn columnmanager_id;
            
            private global::System.Data.DataColumn columnparent_department_uuid_list;
            
            private global::System.Data.DataColumn columns_name;
            
            private global::System.Data.DataColumn columncost_center;
            
            private global::System.Data.DataColumn columnsrc_uuid;
            
            private global::System.Data.DataColumn columnfull_department_name;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DEPARTMENTDataTable() {
                this.TableName = "DEPARTMENT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DEPARTMENTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DEPARTMENTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn uuidColumn {
                get {
                    return this.columnuuid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn create_dateColumn {
                get {
                    return this.columncreate_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn update_dateColumn {
                get {
                    return this.columnupdate_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn is_activeColumn {
                get {
                    return this.columnis_active;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn company_uuidColumn {
                get {
                    return this.columncompany_uuid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn c_nameColumn {
                get {
                    return this.columnc_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn e_nameColumn {
                get {
                    return this.columne_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn parent_department_uuidColumn {
                get {
                    return this.columnparent_department_uuid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn manager_uuidColumn {
                get {
                    return this.columnmanager_uuid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn parent_department_idColumn {
                get {
                    return this.columnparent_department_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn manager_idColumn {
                get {
                    return this.columnmanager_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn parent_department_uuid_listColumn {
                get {
                    return this.columnparent_department_uuid_list;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn s_nameColumn {
                get {
                    return this.columns_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cost_centerColumn {
                get {
                    return this.columncost_center;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn src_uuidColumn {
                get {
                    return this.columnsrc_uuid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn full_department_nameColumn {
                get {
                    return this.columnfull_department_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DEPARTMENTRow this[int index] {
                get {
                    return ((DEPARTMENTRow)(this.Rows[index]));
                }
            }
            
            public event DEPARTMENTRowChangeEventHandler DEPARTMENTRowChanging;
            
            public event DEPARTMENTRowChangeEventHandler DEPARTMENTRowChanged;
            
            public event DEPARTMENTRowChangeEventHandler DEPARTMENTRowDeleting;
            
            public event DEPARTMENTRowChangeEventHandler DEPARTMENTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDEPARTMENTRow(DEPARTMENTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DEPARTMENTRow AddDEPARTMENTRow(
                        string uuid, 
                        System.DateTime create_date, 
                        System.DateTime update_date, 
                        string is_active, 
                        COMPANYRow parentCOMPANYRowByDEPARTMENT_FK1, 
                        string id, 
                        string c_name, 
                        string e_name, 
                        DEPARTMENTRow parentDEPARTMENTRowByDEPARTMENT_FK2, 
                        ATTENDANTRow parentATTENDANTRowByDEPARTMENT_FK3, 
                        string parent_department_id, 
                        string manager_id, 
                        string parent_department_uuid_list, 
                        string s_name, 
                        string cost_center, 
                        string src_uuid, 
                        string full_department_name) {
                DEPARTMENTRow rowDEPARTMENTRow = ((DEPARTMENTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        uuid,
                        create_date,
                        update_date,
                        is_active,
                        null,
                        id,
                        c_name,
                        e_name,
                        null,
                        null,
                        parent_department_id,
                        manager_id,
                        parent_department_uuid_list,
                        s_name,
                        cost_center,
                        src_uuid,
                        full_department_name};
                if ((parentCOMPANYRowByDEPARTMENT_FK1 != null)) {
                    columnValuesArray[4] = parentCOMPANYRowByDEPARTMENT_FK1[0];
                }
                if ((parentDEPARTMENTRowByDEPARTMENT_FK2 != null)) {
                    columnValuesArray[8] = parentDEPARTMENTRowByDEPARTMENT_FK2[0];
                }
                if ((parentATTENDANTRowByDEPARTMENT_FK3 != null)) {
                    columnValuesArray[9] = parentATTENDANTRowByDEPARTMENT_FK3[0];
                }
                rowDEPARTMENTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDEPARTMENTRow);
                return rowDEPARTMENTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DEPARTMENTRow FindByuuid(string uuid) {
                return ((DEPARTMENTRow)(this.Rows.Find(new object[] {
                            uuid})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DEPARTMENTDataTable cln = ((DEPARTMENTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DEPARTMENTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnuuid = base.Columns["uuid"];
                this.columncreate_date = base.Columns["create_date"];
                this.columnupdate_date = base.Columns["update_date"];
                this.columnis_active = base.Columns["is_active"];
                this.columncompany_uuid = base.Columns["company_uuid"];
                this.columnid = base.Columns["id"];
                this.columnc_name = base.Columns["c_name"];
                this.columne_name = base.Columns["e_name"];
                this.columnparent_department_uuid = base.Columns["parent_department_uuid"];
                this.columnmanager_uuid = base.Columns["manager_uuid"];
                this.columnparent_department_id = base.Columns["parent_department_id"];
                this.columnmanager_id = base.Columns["manager_id"];
                this.columnparent_department_uuid_list = base.Columns["parent_department_uuid_list"];
                this.columns_name = base.Columns["s_name"];
                this.columncost_center = base.Columns["cost_center"];
                this.columnsrc_uuid = base.Columns["src_uuid"];
                this.columnfull_department_name = base.Columns["full_department_name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnuuid = new global::System.Data.DataColumn("uuid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuuid);
                this.columncreate_date = new global::System.Data.DataColumn("create_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreate_date);
                this.columnupdate_date = new global::System.Data.DataColumn("update_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnupdate_date);
                this.columnis_active = new global::System.Data.DataColumn("is_active", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnis_active);
                this.columncompany_uuid = new global::System.Data.DataColumn("company_uuid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncompany_uuid);
                this.columnid = new global::System.Data.DataColumn("id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnc_name = new global::System.Data.DataColumn("c_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnc_name);
                this.columne_name = new global::System.Data.DataColumn("e_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columne_name);
                this.columnparent_department_uuid = new global::System.Data.DataColumn("parent_department_uuid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnparent_department_uuid);
                this.columnmanager_uuid = new global::System.Data.DataColumn("manager_uuid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmanager_uuid);
                this.columnparent_department_id = new global::System.Data.DataColumn("parent_department_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnparent_department_id);
                this.columnmanager_id = new global::System.Data.DataColumn("manager_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmanager_id);
                this.columnparent_department_uuid_list = new global::System.Data.DataColumn("parent_department_uuid_list", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnparent_department_uuid_list);
                this.columns_name = new global::System.Data.DataColumn("s_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columns_name);
                this.columncost_center = new global::System.Data.DataColumn("cost_center", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncost_center);
                this.columnsrc_uuid = new global::System.Data.DataColumn("src_uuid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsrc_uuid);
                this.columnfull_department_name = new global::System.Data.DataColumn("full_department_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfull_department_name);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnuuid}, true));
                this.columnuuid.AllowDBNull = false;
                this.columnuuid.Unique = true;
                this.columnuuid.MaxLength = 36;
                this.columnis_active.AllowDBNull = false;
                this.columnis_active.MaxLength = 1;
                this.columncompany_uuid.AllowDBNull = false;
                this.columncompany_uuid.MaxLength = 36;
                this.columnid.AllowDBNull = false;
                this.columnid.MaxLength = 100;
                this.columnc_name.MaxLength = 100;
                this.columne_name.MaxLength = 100;
                this.columnparent_department_uuid.MaxLength = 36;
                this.columnmanager_uuid.MaxLength = 36;
                this.columnparent_department_id.MaxLength = 100;
                this.columnmanager_id.MaxLength = 100;
                this.columnparent_department_uuid_list.MaxLength = 4000;
                this.columns_name.MaxLength = 100;
                this.columncost_center.MaxLength = 100;
                this.columnsrc_uuid.MaxLength = 36;
                this.columnfull_department_name.MaxLength = 4000;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DEPARTMENTRow NewDEPARTMENTRow() {
                return ((DEPARTMENTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DEPARTMENTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DEPARTMENTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DEPARTMENTRowChanged != null)) {
                    this.DEPARTMENTRowChanged(this, new DEPARTMENTRowChangeEvent(((DEPARTMENTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DEPARTMENTRowChanging != null)) {
                    this.DEPARTMENTRowChanging(this, new DEPARTMENTRowChangeEvent(((DEPARTMENTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DEPARTMENTRowDeleted != null)) {
                    this.DEPARTMENTRowDeleted(this, new DEPARTMENTRowChangeEvent(((DEPARTMENTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DEPARTMENTRowDeleting != null)) {
                    this.DEPARTMENTRowDeleting(this, new DEPARTMENTRowChangeEvent(((DEPARTMENTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDEPARTMENTRow(DEPARTMENTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Basic ds = new Basic();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DEPARTMENTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GROUP_APPMENUDataTable : global::System.Data.TypedTableBase<GROUP_APPMENURow> {
            
            private global::System.Data.DataColumn columnuuid;
            
            private global::System.Data.DataColumn columnis_active;
            
            private global::System.Data.DataColumn columncreate_date;
            
            private global::System.Data.DataColumn columncreate_user;
            
            private global::System.Data.DataColumn columnupdate_date;
            
            private global::System.Data.DataColumn columnupdate_user;
            
            private global::System.Data.DataColumn columnappmenu_uuid;
            
            private global::System.Data.DataColumn columngroup_head_uuid;
            
            private global::System.Data.DataColumn columnis_default_page;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GROUP_APPMENUDataTable() {
                this.TableName = "GROUP_APPMENU";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GROUP_APPMENUDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GROUP_APPMENUDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn uuidColumn {
                get {
                    return this.columnuuid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn is_activeColumn {
                get {
                    return this.columnis_active;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn create_dateColumn {
                get {
                    return this.columncreate_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn create_userColumn {
                get {
                    return this.columncreate_user;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn update_dateColumn {
                get {
                    return this.columnupdate_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn update_userColumn {
                get {
                    return this.columnupdate_user;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn appmenu_uuidColumn {
                get {
                    return this.columnappmenu_uuid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn group_head_uuidColumn {
                get {
                    return this.columngroup_head_uuid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn is_default_pageColumn {
                get {
                    return this.columnis_default_page;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GROUP_APPMENURow this[int index] {
                get {
                    return ((GROUP_APPMENURow)(this.Rows[index]));
                }
            }
            
            public event GROUP_APPMENURowChangeEventHandler GROUP_APPMENURowChanging;
            
            public event GROUP_APPMENURowChangeEventHandler GROUP_APPMENURowChanged;
            
            public event GROUP_APPMENURowChangeEventHandler GROUP_APPMENURowDeleting;
            
            public event GROUP_APPMENURowChangeEventHandler GROUP_APPMENURowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGROUP_APPMENURow(GROUP_APPMENURow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GROUP_APPMENURow AddGROUP_APPMENURow(string uuid, string is_active, System.DateTime create_date, string create_user, System.DateTime update_date, string update_user, APPMENURow parentAPPMENURowByGROUP_APPMENU_APPMENU_FK1, GROUP_HEADRow parentGROUP_HEADRowByGROUP_APPMENU_GROUP_HEAD_FK1, string is_default_page) {
                GROUP_APPMENURow rowGROUP_APPMENURow = ((GROUP_APPMENURow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        uuid,
                        is_active,
                        create_date,
                        create_user,
                        update_date,
                        update_user,
                        null,
                        null,
                        is_default_page};
                if ((parentAPPMENURowByGROUP_APPMENU_APPMENU_FK1 != null)) {
                    columnValuesArray[6] = parentAPPMENURowByGROUP_APPMENU_APPMENU_FK1[0];
                }
                if ((parentGROUP_HEADRowByGROUP_APPMENU_GROUP_HEAD_FK1 != null)) {
                    columnValuesArray[7] = parentGROUP_HEADRowByGROUP_APPMENU_GROUP_HEAD_FK1[0];
                }
                rowGROUP_APPMENURow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGROUP_APPMENURow);
                return rowGROUP_APPMENURow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GROUP_APPMENURow FindByuuid(string uuid) {
                return ((GROUP_APPMENURow)(this.Rows.Find(new object[] {
                            uuid})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                GROUP_APPMENUDataTable cln = ((GROUP_APPMENUDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GROUP_APPMENUDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnuuid = base.Columns["uuid"];
                this.columnis_active = base.Columns["is_active"];
                this.columncreate_date = base.Columns["create_date"];
                this.columncreate_user = base.Columns["create_user"];
                this.columnupdate_date = base.Columns["update_date"];
                this.columnupdate_user = base.Columns["update_user"];
                this.columnappmenu_uuid = base.Columns["appmenu_uuid"];
                this.columngroup_head_uuid = base.Columns["group_head_uuid"];
                this.columnis_default_page = base.Columns["is_default_page"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnuuid = new global::System.Data.DataColumn("uuid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuuid);
                this.columnis_active = new global::System.Data.DataColumn("is_active", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnis_active);
                this.columncreate_date = new global::System.Data.DataColumn("create_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreate_date);
                this.columncreate_user = new global::System.Data.DataColumn("create_user", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreate_user);
                this.columnupdate_date = new global::System.Data.DataColumn("update_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnupdate_date);
                this.columnupdate_user = new global::System.Data.DataColumn("update_user", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnupdate_user);
                this.columnappmenu_uuid = new global::System.Data.DataColumn("appmenu_uuid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnappmenu_uuid);
                this.columngroup_head_uuid = new global::System.Data.DataColumn("group_head_uuid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngroup_head_uuid);
                this.columnis_default_page = new global::System.Data.DataColumn("is_default_page", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnis_default_page);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnuuid}, true));
                this.columnuuid.AllowDBNull = false;
                this.columnuuid.Unique = true;
                this.columnuuid.MaxLength = 36;
                this.columnis_active.AllowDBNull = false;
                this.columnis_active.MaxLength = 1;
                this.columncreate_date.AllowDBNull = false;
                this.columncreate_user.AllowDBNull = false;
                this.columncreate_user.MaxLength = 36;
                this.columnupdate_user.MaxLength = 36;
                this.columnappmenu_uuid.AllowDBNull = false;
                this.columnappmenu_uuid.MaxLength = 36;
                this.columngroup_head_uuid.AllowDBNull = false;
                this.columngroup_head_uuid.MaxLength = 36;
                this.columnis_default_page.AllowDBNull = false;
                this.columnis_default_page.MaxLength = 1;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GROUP_APPMENURow NewGROUP_APPMENURow() {
                return ((GROUP_APPMENURow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GROUP_APPMENURow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(GROUP_APPMENURow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GROUP_APPMENURowChanged != null)) {
                    this.GROUP_APPMENURowChanged(this, new GROUP_APPMENURowChangeEvent(((GROUP_APPMENURow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GROUP_APPMENURowChanging != null)) {
                    this.GROUP_APPMENURowChanging(this, new GROUP_APPMENURowChangeEvent(((GROUP_APPMENURow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GROUP_APPMENURowDeleted != null)) {
                    this.GROUP_APPMENURowDeleted(this, new GROUP_APPMENURowChangeEvent(((GROUP_APPMENURow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GROUP_APPMENURowDeleting != null)) {
                    this.GROUP_APPMENURowDeleting(this, new GROUP_APPMENURowChangeEvent(((GROUP_APPMENURow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGROUP_APPMENURow(GROUP_APPMENURow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Basic ds = new Basic();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GROUP_APPMENUDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GROUP_ATTENDANTDataTable : global::System.Data.TypedTableBase<GROUP_ATTENDANTRow> {
            
            private global::System.Data.DataColumn columnuuid;
            
            private global::System.Data.DataColumn columnis_active;
            
            private global::System.Data.DataColumn columncreate_date;
            
            private global::System.Data.DataColumn columncreate_user;
            
            private global::System.Data.DataColumn columnupdate_date;
            
            private global::System.Data.DataColumn columnupdate_user;
            
            private global::System.Data.DataColumn columngroup_head_uuid;
            
            private global::System.Data.DataColumn columnattendant_uuid;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GROUP_ATTENDANTDataTable() {
                this.TableName = "GROUP_ATTENDANT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GROUP_ATTENDANTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GROUP_ATTENDANTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn uuidColumn {
                get {
                    return this.columnuuid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn is_activeColumn {
                get {
                    return this.columnis_active;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn create_dateColumn {
                get {
                    return this.columncreate_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn create_userColumn {
                get {
                    return this.columncreate_user;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn update_dateColumn {
                get {
                    return this.columnupdate_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn update_userColumn {
                get {
                    return this.columnupdate_user;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn group_head_uuidColumn {
                get {
                    return this.columngroup_head_uuid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn attendant_uuidColumn {
                get {
                    return this.columnattendant_uuid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GROUP_ATTENDANTRow this[int index] {
                get {
                    return ((GROUP_ATTENDANTRow)(this.Rows[index]));
                }
            }
            
            public event GROUP_ATTENDANTRowChangeEventHandler GROUP_ATTENDANTRowChanging;
            
            public event GROUP_ATTENDANTRowChangeEventHandler GROUP_ATTENDANTRowChanged;
            
            public event GROUP_ATTENDANTRowChangeEventHandler GROUP_ATTENDANTRowDeleting;
            
            public event GROUP_ATTENDANTRowChangeEventHandler GROUP_ATTENDANTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGROUP_ATTENDANTRow(GROUP_ATTENDANTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GROUP_ATTENDANTRow AddGROUP_ATTENDANTRow(string uuid, string is_active, System.DateTime create_date, string create_user, System.DateTime update_date, string update_user, GROUP_HEADRow parentGROUP_HEADRowByGROUP_ATTENDANT_GROUP_HEA_FK1, ATTENDANTRow parentATTENDANTRowByGROUP_ATTENDANT_ATTENDANT_FK1) {
                GROUP_ATTENDANTRow rowGROUP_ATTENDANTRow = ((GROUP_ATTENDANTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        uuid,
                        is_active,
                        create_date,
                        create_user,
                        update_date,
                        update_user,
                        null,
                        null};
                if ((parentGROUP_HEADRowByGROUP_ATTENDANT_GROUP_HEA_FK1 != null)) {
                    columnValuesArray[6] = parentGROUP_HEADRowByGROUP_ATTENDANT_GROUP_HEA_FK1[0];
                }
                if ((parentATTENDANTRowByGROUP_ATTENDANT_ATTENDANT_FK1 != null)) {
                    columnValuesArray[7] = parentATTENDANTRowByGROUP_ATTENDANT_ATTENDANT_FK1[0];
                }
                rowGROUP_ATTENDANTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGROUP_ATTENDANTRow);
                return rowGROUP_ATTENDANTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GROUP_ATTENDANTRow FindByuuid(string uuid) {
                return ((GROUP_ATTENDANTRow)(this.Rows.Find(new object[] {
                            uuid})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                GROUP_ATTENDANTDataTable cln = ((GROUP_ATTENDANTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GROUP_ATTENDANTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnuuid = base.Columns["uuid"];
                this.columnis_active = base.Columns["is_active"];
                this.columncreate_date = base.Columns["create_date"];
                this.columncreate_user = base.Columns["create_user"];
                this.columnupdate_date = base.Columns["update_date"];
                this.columnupdate_user = base.Columns["update_user"];
                this.columngroup_head_uuid = base.Columns["group_head_uuid"];
                this.columnattendant_uuid = base.Columns["attendant_uuid"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnuuid = new global::System.Data.DataColumn("uuid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuuid);
                this.columnis_active = new global::System.Data.DataColumn("is_active", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnis_active);
                this.columncreate_date = new global::System.Data.DataColumn("create_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreate_date);
                this.columncreate_user = new global::System.Data.DataColumn("create_user", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreate_user);
                this.columnupdate_date = new global::System.Data.DataColumn("update_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnupdate_date);
                this.columnupdate_user = new global::System.Data.DataColumn("update_user", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnupdate_user);
                this.columngroup_head_uuid = new global::System.Data.DataColumn("group_head_uuid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngroup_head_uuid);
                this.columnattendant_uuid = new global::System.Data.DataColumn("attendant_uuid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnattendant_uuid);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnuuid}, true));
                this.columnuuid.AllowDBNull = false;
                this.columnuuid.Unique = true;
                this.columnuuid.MaxLength = 36;
                this.columnis_active.AllowDBNull = false;
                this.columnis_active.MaxLength = 1;
                this.columncreate_date.AllowDBNull = false;
                this.columncreate_user.AllowDBNull = false;
                this.columncreate_user.MaxLength = 36;
                this.columnupdate_user.MaxLength = 36;
                this.columngroup_head_uuid.AllowDBNull = false;
                this.columngroup_head_uuid.MaxLength = 36;
                this.columnattendant_uuid.AllowDBNull = false;
                this.columnattendant_uuid.MaxLength = 36;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GROUP_ATTENDANTRow NewGROUP_ATTENDANTRow() {
                return ((GROUP_ATTENDANTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GROUP_ATTENDANTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(GROUP_ATTENDANTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GROUP_ATTENDANTRowChanged != null)) {
                    this.GROUP_ATTENDANTRowChanged(this, new GROUP_ATTENDANTRowChangeEvent(((GROUP_ATTENDANTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GROUP_ATTENDANTRowChanging != null)) {
                    this.GROUP_ATTENDANTRowChanging(this, new GROUP_ATTENDANTRowChangeEvent(((GROUP_ATTENDANTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GROUP_ATTENDANTRowDeleted != null)) {
                    this.GROUP_ATTENDANTRowDeleted(this, new GROUP_ATTENDANTRowChangeEvent(((GROUP_ATTENDANTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GROUP_ATTENDANTRowDeleting != null)) {
                    this.GROUP_ATTENDANTRowDeleting(this, new GROUP_ATTENDANTRowChangeEvent(((GROUP_ATTENDANTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGROUP_ATTENDANTRow(GROUP_ATTENDANTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Basic ds = new Basic();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GROUP_ATTENDANTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GROUP_HEADDataTable : global::System.Data.TypedTableBase<GROUP_HEADRow> {
            
            private global::System.Data.DataColumn columnuuid;
            
            private global::System.Data.DataColumn columncreate_date;
            
            private global::System.Data.DataColumn columnupdate_date;
            
            private global::System.Data.DataColumn columnis_active;
            
            private global::System.Data.DataColumn columnname_zh_tw;
            
            private global::System.Data.DataColumn columnname_zh_cn;
            
            private global::System.Data.DataColumn columnname_en_us;
            
            private global::System.Data.DataColumn columncompany_uuid;
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columncreate_user;
            
            private global::System.Data.DataColumn columnupdate_user;
            
            private global::System.Data.DataColumn columnapplication_head_uuid;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GROUP_HEADDataTable() {
                this.TableName = "GROUP_HEAD";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GROUP_HEADDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GROUP_HEADDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn uuidColumn {
                get {
                    return this.columnuuid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn create_dateColumn {
                get {
                    return this.columncreate_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn update_dateColumn {
                get {
                    return this.columnupdate_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn is_activeColumn {
                get {
                    return this.columnis_active;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn name_zh_twColumn {
                get {
                    return this.columnname_zh_tw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn name_zh_cnColumn {
                get {
                    return this.columnname_zh_cn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn name_en_usColumn {
                get {
                    return this.columnname_en_us;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn company_uuidColumn {
                get {
                    return this.columncompany_uuid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn create_userColumn {
                get {
                    return this.columncreate_user;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn update_userColumn {
                get {
                    return this.columnupdate_user;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn application_head_uuidColumn {
                get {
                    return this.columnapplication_head_uuid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GROUP_HEADRow this[int index] {
                get {
                    return ((GROUP_HEADRow)(this.Rows[index]));
                }
            }
            
            public event GROUP_HEADRowChangeEventHandler GROUP_HEADRowChanging;
            
            public event GROUP_HEADRowChangeEventHandler GROUP_HEADRowChanged;
            
            public event GROUP_HEADRowChangeEventHandler GROUP_HEADRowDeleting;
            
            public event GROUP_HEADRowChangeEventHandler GROUP_HEADRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGROUP_HEADRow(GROUP_HEADRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GROUP_HEADRow AddGROUP_HEADRow(string uuid, System.DateTime create_date, System.DateTime update_date, string is_active, string name_zh_tw, string name_zh_cn, string name_en_us, COMPANYRow parentCOMPANYRowByGROUP_HEAD_COMPANY_FK1, string id, string create_user, string update_user, APPLICATION_HEADRow parentAPPLICATION_HEADRowByGROUP_HEAD_APPLICATION_HE_FK1) {
                GROUP_HEADRow rowGROUP_HEADRow = ((GROUP_HEADRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        uuid,
                        create_date,
                        update_date,
                        is_active,
                        name_zh_tw,
                        name_zh_cn,
                        name_en_us,
                        null,
                        id,
                        create_user,
                        update_user,
                        null};
                if ((parentCOMPANYRowByGROUP_HEAD_COMPANY_FK1 != null)) {
                    columnValuesArray[7] = parentCOMPANYRowByGROUP_HEAD_COMPANY_FK1[0];
                }
                if ((parentAPPLICATION_HEADRowByGROUP_HEAD_APPLICATION_HE_FK1 != null)) {
                    columnValuesArray[11] = parentAPPLICATION_HEADRowByGROUP_HEAD_APPLICATION_HE_FK1[0];
                }
                rowGROUP_HEADRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGROUP_HEADRow);
                return rowGROUP_HEADRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GROUP_HEADRow FindByuuid(string uuid) {
                return ((GROUP_HEADRow)(this.Rows.Find(new object[] {
                            uuid})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                GROUP_HEADDataTable cln = ((GROUP_HEADDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GROUP_HEADDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnuuid = base.Columns["uuid"];
                this.columncreate_date = base.Columns["create_date"];
                this.columnupdate_date = base.Columns["update_date"];
                this.columnis_active = base.Columns["is_active"];
                this.columnname_zh_tw = base.Columns["name_zh_tw"];
                this.columnname_zh_cn = base.Columns["name_zh_cn"];
                this.columnname_en_us = base.Columns["name_en_us"];
                this.columncompany_uuid = base.Columns["company_uuid"];
                this.columnid = base.Columns["id"];
                this.columncreate_user = base.Columns["create_user"];
                this.columnupdate_user = base.Columns["update_user"];
                this.columnapplication_head_uuid = base.Columns["application_head_uuid"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnuuid = new global::System.Data.DataColumn("uuid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuuid);
                this.columncreate_date = new global::System.Data.DataColumn("create_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreate_date);
                this.columnupdate_date = new global::System.Data.DataColumn("update_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnupdate_date);
                this.columnis_active = new global::System.Data.DataColumn("is_active", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnis_active);
                this.columnname_zh_tw = new global::System.Data.DataColumn("name_zh_tw", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname_zh_tw);
                this.columnname_zh_cn = new global::System.Data.DataColumn("name_zh_cn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname_zh_cn);
                this.columnname_en_us = new global::System.Data.DataColumn("name_en_us", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname_en_us);
                this.columncompany_uuid = new global::System.Data.DataColumn("company_uuid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncompany_uuid);
                this.columnid = new global::System.Data.DataColumn("id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columncreate_user = new global::System.Data.DataColumn("create_user", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreate_user);
                this.columnupdate_user = new global::System.Data.DataColumn("update_user", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnupdate_user);
                this.columnapplication_head_uuid = new global::System.Data.DataColumn("application_head_uuid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnapplication_head_uuid);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnuuid}, true));
                this.columnuuid.AllowDBNull = false;
                this.columnuuid.Unique = true;
                this.columnuuid.MaxLength = 36;
                this.columncreate_date.AllowDBNull = false;
                this.columnis_active.AllowDBNull = false;
                this.columnis_active.MaxLength = 1;
                this.columnname_zh_tw.AllowDBNull = false;
                this.columnname_zh_tw.MaxLength = 200;
                this.columnname_zh_cn.AllowDBNull = false;
                this.columnname_zh_cn.MaxLength = 200;
                this.columnname_en_us.AllowDBNull = false;
                this.columnname_en_us.MaxLength = 200;
                this.columncompany_uuid.AllowDBNull = false;
                this.columncompany_uuid.MaxLength = 36;
                this.columnid.AllowDBNull = false;
                this.columnid.MaxLength = 100;
                this.columncreate_user.AllowDBNull = false;
                this.columncreate_user.MaxLength = 36;
                this.columnupdate_user.MaxLength = 36;
                this.columnapplication_head_uuid.AllowDBNull = false;
                this.columnapplication_head_uuid.MaxLength = 36;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GROUP_HEADRow NewGROUP_HEADRow() {
                return ((GROUP_HEADRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GROUP_HEADRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(GROUP_HEADRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GROUP_HEADRowChanged != null)) {
                    this.GROUP_HEADRowChanged(this, new GROUP_HEADRowChangeEvent(((GROUP_HEADRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GROUP_HEADRowChanging != null)) {
                    this.GROUP_HEADRowChanging(this, new GROUP_HEADRowChangeEvent(((GROUP_HEADRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GROUP_HEADRowDeleted != null)) {
                    this.GROUP_HEADRowDeleted(this, new GROUP_HEADRowChangeEvent(((GROUP_HEADRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GROUP_HEADRowDeleting != null)) {
                    this.GROUP_HEADRowDeleting(this, new GROUP_HEADRowChangeEvent(((GROUP_HEADRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGROUP_HEADRow(GROUP_HEADRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Basic ds = new Basic();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GROUP_HEADDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SITEDataTable : global::System.Data.TypedTableBase<SITERow> {
            
            private global::System.Data.DataColumn columnuuid;
            
            private global::System.Data.DataColumn columncreate_date;
            
            private global::System.Data.DataColumn columnupdate_date;
            
            private global::System.Data.DataColumn columnis_active;
            
            private global::System.Data.DataColumn columncompany_uuid;
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnc_name;
            
            private global::System.Data.DataColumn columne_name;
            
            private global::System.Data.DataColumn columnparent_site_uuid;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SITEDataTable() {
                this.TableName = "SITE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SITEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SITEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn uuidColumn {
                get {
                    return this.columnuuid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn create_dateColumn {
                get {
                    return this.columncreate_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn update_dateColumn {
                get {
                    return this.columnupdate_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn is_activeColumn {
                get {
                    return this.columnis_active;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn company_uuidColumn {
                get {
                    return this.columncompany_uuid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn c_nameColumn {
                get {
                    return this.columnc_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn e_nameColumn {
                get {
                    return this.columne_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn parent_site_uuidColumn {
                get {
                    return this.columnparent_site_uuid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SITERow this[int index] {
                get {
                    return ((SITERow)(this.Rows[index]));
                }
            }
            
            public event SITERowChangeEventHandler SITERowChanging;
            
            public event SITERowChangeEventHandler SITERowChanged;
            
            public event SITERowChangeEventHandler SITERowDeleting;
            
            public event SITERowChangeEventHandler SITERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSITERow(SITERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SITERow AddSITERow(string uuid, System.DateTime create_date, System.DateTime update_date, string is_active, COMPANYRow parentCOMPANYRowBySITE_FK1, string id, string c_name, string e_name, SITERow parentSITERowBySITE_FK2) {
                SITERow rowSITERow = ((SITERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        uuid,
                        create_date,
                        update_date,
                        is_active,
                        null,
                        id,
                        c_name,
                        e_name,
                        null};
                if ((parentCOMPANYRowBySITE_FK1 != null)) {
                    columnValuesArray[4] = parentCOMPANYRowBySITE_FK1[0];
                }
                if ((parentSITERowBySITE_FK2 != null)) {
                    columnValuesArray[8] = parentSITERowBySITE_FK2[0];
                }
                rowSITERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSITERow);
                return rowSITERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SITERow FindByuuid(string uuid) {
                return ((SITERow)(this.Rows.Find(new object[] {
                            uuid})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SITEDataTable cln = ((SITEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SITEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnuuid = base.Columns["uuid"];
                this.columncreate_date = base.Columns["create_date"];
                this.columnupdate_date = base.Columns["update_date"];
                this.columnis_active = base.Columns["is_active"];
                this.columncompany_uuid = base.Columns["company_uuid"];
                this.columnid = base.Columns["id"];
                this.columnc_name = base.Columns["c_name"];
                this.columne_name = base.Columns["e_name"];
                this.columnparent_site_uuid = base.Columns["parent_site_uuid"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnuuid = new global::System.Data.DataColumn("uuid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuuid);
                this.columncreate_date = new global::System.Data.DataColumn("create_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreate_date);
                this.columnupdate_date = new global::System.Data.DataColumn("update_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnupdate_date);
                this.columnis_active = new global::System.Data.DataColumn("is_active", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnis_active);
                this.columncompany_uuid = new global::System.Data.DataColumn("company_uuid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncompany_uuid);
                this.columnid = new global::System.Data.DataColumn("id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnc_name = new global::System.Data.DataColumn("c_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnc_name);
                this.columne_name = new global::System.Data.DataColumn("e_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columne_name);
                this.columnparent_site_uuid = new global::System.Data.DataColumn("parent_site_uuid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnparent_site_uuid);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnuuid}, true));
                this.columnuuid.AllowDBNull = false;
                this.columnuuid.Unique = true;
                this.columnuuid.MaxLength = 36;
                this.columnis_active.AllowDBNull = false;
                this.columnis_active.MaxLength = 1;
                this.columncompany_uuid.AllowDBNull = false;
                this.columncompany_uuid.MaxLength = 36;
                this.columnid.AllowDBNull = false;
                this.columnid.MaxLength = 100;
                this.columnc_name.MaxLength = 100;
                this.columne_name.MaxLength = 100;
                this.columnparent_site_uuid.MaxLength = 36;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SITERow NewSITERow() {
                return ((SITERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SITERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SITERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SITERowChanged != null)) {
                    this.SITERowChanged(this, new SITERowChangeEvent(((SITERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SITERowChanging != null)) {
                    this.SITERowChanging(this, new SITERowChangeEvent(((SITERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SITERowDeleted != null)) {
                    this.SITERowDeleted(this, new SITERowChangeEvent(((SITERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SITERowDeleting != null)) {
                    this.SITERowDeleting(this, new SITERowChangeEvent(((SITERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSITERow(SITERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Basic ds = new Basic();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SITEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class attendant_vDataTable : global::System.Data.TypedTableBase<attendant_vRow> {
            
            private global::System.Data.DataColumn columncompany_id;
            
            private global::System.Data.DataColumn columncompany_c_name;
            
            private global::System.Data.DataColumn columncompany_e_name;
            
            private global::System.Data.DataColumn columndepartment_id;
            
            private global::System.Data.DataColumn columndepartment_c_name;
            
            private global::System.Data.DataColumn columndepartment_e_name;
            
            private global::System.Data.DataColumn columnsite_id;
            
            private global::System.Data.DataColumn columnsite_c_name;
            
            private global::System.Data.DataColumn columnsite_e_name;
            
            private global::System.Data.DataColumn columnUUID;
            
            private global::System.Data.DataColumn columnCREATE_DATE;
            
            private global::System.Data.DataColumn columnUPDATE_DATE;
            
            private global::System.Data.DataColumn columnIS_ACTIVE;
            
            private global::System.Data.DataColumn columnCOMPANY_UUID;
            
            private global::System.Data.DataColumn columnACCOUNT;
            
            private global::System.Data.DataColumn columnC_NAME;
            
            private global::System.Data.DataColumn columnE_NAME;
            
            private global::System.Data.DataColumn columnEMAIL;
            
            private global::System.Data.DataColumn columnPASSWORD;
            
            private global::System.Data.DataColumn columnIS_SUPPER;
            
            private global::System.Data.DataColumn columnIS_ADMIN;
            
            private global::System.Data.DataColumn columnCODE_PAGE;
            
            private global::System.Data.DataColumn columnDEPARTMENT_UUID;
            
            private global::System.Data.DataColumn columnPHONE;
            
            private global::System.Data.DataColumn columnSITE_UUID;
            
            private global::System.Data.DataColumn columnGENDER;
            
            private global::System.Data.DataColumn columnBIRTHDAY;
            
            private global::System.Data.DataColumn columnHIRE_DATE;
            
            private global::System.Data.DataColumn columnQUIT_DATE;
            
            private global::System.Data.DataColumn columnIS_MANAGER;
            
            private global::System.Data.DataColumn columnIS_DIRECT;
            
            private global::System.Data.DataColumn columnGRADE;
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnIS_DEFAULT_PASS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public attendant_vDataTable() {
                this.TableName = "attendant_v";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal attendant_vDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected attendant_vDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn company_idColumn {
                get {
                    return this.columncompany_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn company_c_nameColumn {
                get {
                    return this.columncompany_c_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn company_e_nameColumn {
                get {
                    return this.columncompany_e_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn department_idColumn {
                get {
                    return this.columndepartment_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn department_c_nameColumn {
                get {
                    return this.columndepartment_c_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn department_e_nameColumn {
                get {
                    return this.columndepartment_e_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn site_idColumn {
                get {
                    return this.columnsite_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn site_c_nameColumn {
                get {
                    return this.columnsite_c_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn site_e_nameColumn {
                get {
                    return this.columnsite_e_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UUIDColumn {
                get {
                    return this.columnUUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATE_DATEColumn {
                get {
                    return this.columnCREATE_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UPDATE_DATEColumn {
                get {
                    return this.columnUPDATE_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IS_ACTIVEColumn {
                get {
                    return this.columnIS_ACTIVE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANY_UUIDColumn {
                get {
                    return this.columnCOMPANY_UUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ACCOUNTColumn {
                get {
                    return this.columnACCOUNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C_NAMEColumn {
                get {
                    return this.columnC_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn E_NAMEColumn {
                get {
                    return this.columnE_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMAILColumn {
                get {
                    return this.columnEMAIL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PASSWORDColumn {
                get {
                    return this.columnPASSWORD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IS_SUPPERColumn {
                get {
                    return this.columnIS_SUPPER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IS_ADMINColumn {
                get {
                    return this.columnIS_ADMIN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CODE_PAGEColumn {
                get {
                    return this.columnCODE_PAGE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEPARTMENT_UUIDColumn {
                get {
                    return this.columnDEPARTMENT_UUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PHONEColumn {
                get {
                    return this.columnPHONE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SITE_UUIDColumn {
                get {
                    return this.columnSITE_UUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GENDERColumn {
                get {
                    return this.columnGENDER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BIRTHDAYColumn {
                get {
                    return this.columnBIRTHDAY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HIRE_DATEColumn {
                get {
                    return this.columnHIRE_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QUIT_DATEColumn {
                get {
                    return this.columnQUIT_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IS_MANAGERColumn {
                get {
                    return this.columnIS_MANAGER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IS_DIRECTColumn {
                get {
                    return this.columnIS_DIRECT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GRADEColumn {
                get {
                    return this.columnGRADE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IS_DEFAULT_PASSColumn {
                get {
                    return this.columnIS_DEFAULT_PASS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public attendant_vRow this[int index] {
                get {
                    return ((attendant_vRow)(this.Rows[index]));
                }
            }
            
            public event attendant_vRowChangeEventHandler attendant_vRowChanging;
            
            public event attendant_vRowChangeEventHandler attendant_vRowChanged;
            
            public event attendant_vRowChangeEventHandler attendant_vRowDeleting;
            
            public event attendant_vRowChangeEventHandler attendant_vRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addattendant_vRow(attendant_vRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public attendant_vRow Addattendant_vRow(
                        string company_id, 
                        string company_c_name, 
                        string company_e_name, 
                        string department_id, 
                        string department_c_name, 
                        string department_e_name, 
                        string site_id, 
                        string site_c_name, 
                        string site_e_name, 
                        string UUID, 
                        System.DateTime CREATE_DATE, 
                        System.DateTime UPDATE_DATE, 
                        string IS_ACTIVE, 
                        string COMPANY_UUID, 
                        string ACCOUNT, 
                        string C_NAME, 
                        string E_NAME, 
                        string EMAIL, 
                        string PASSWORD, 
                        string IS_SUPPER, 
                        string IS_ADMIN, 
                        string CODE_PAGE, 
                        string DEPARTMENT_UUID, 
                        string PHONE, 
                        string SITE_UUID, 
                        string GENDER, 
                        System.DateTime BIRTHDAY, 
                        System.DateTime HIRE_DATE, 
                        System.DateTime QUIT_DATE, 
                        string IS_MANAGER, 
                        string IS_DIRECT, 
                        string GRADE, 
                        string ID, 
                        string IS_DEFAULT_PASS) {
                attendant_vRow rowattendant_vRow = ((attendant_vRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        company_id,
                        company_c_name,
                        company_e_name,
                        department_id,
                        department_c_name,
                        department_e_name,
                        site_id,
                        site_c_name,
                        site_e_name,
                        UUID,
                        CREATE_DATE,
                        UPDATE_DATE,
                        IS_ACTIVE,
                        COMPANY_UUID,
                        ACCOUNT,
                        C_NAME,
                        E_NAME,
                        EMAIL,
                        PASSWORD,
                        IS_SUPPER,
                        IS_ADMIN,
                        CODE_PAGE,
                        DEPARTMENT_UUID,
                        PHONE,
                        SITE_UUID,
                        GENDER,
                        BIRTHDAY,
                        HIRE_DATE,
                        QUIT_DATE,
                        IS_MANAGER,
                        IS_DIRECT,
                        GRADE,
                        ID,
                        IS_DEFAULT_PASS};
                rowattendant_vRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowattendant_vRow);
                return rowattendant_vRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public attendant_vRow FindByUUID(string UUID) {
                return ((attendant_vRow)(this.Rows.Find(new object[] {
                            UUID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                attendant_vDataTable cln = ((attendant_vDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new attendant_vDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columncompany_id = base.Columns["company_id"];
                this.columncompany_c_name = base.Columns["company_c_name"];
                this.columncompany_e_name = base.Columns["company_e_name"];
                this.columndepartment_id = base.Columns["department_id"];
                this.columndepartment_c_name = base.Columns["department_c_name"];
                this.columndepartment_e_name = base.Columns["department_e_name"];
                this.columnsite_id = base.Columns["site_id"];
                this.columnsite_c_name = base.Columns["site_c_name"];
                this.columnsite_e_name = base.Columns["site_e_name"];
                this.columnUUID = base.Columns["UUID"];
                this.columnCREATE_DATE = base.Columns["CREATE_DATE"];
                this.columnUPDATE_DATE = base.Columns["UPDATE_DATE"];
                this.columnIS_ACTIVE = base.Columns["IS_ACTIVE"];
                this.columnCOMPANY_UUID = base.Columns["COMPANY_UUID"];
                this.columnACCOUNT = base.Columns["ACCOUNT"];
                this.columnC_NAME = base.Columns["C_NAME"];
                this.columnE_NAME = base.Columns["E_NAME"];
                this.columnEMAIL = base.Columns["EMAIL"];
                this.columnPASSWORD = base.Columns["PASSWORD"];
                this.columnIS_SUPPER = base.Columns["IS_SUPPER"];
                this.columnIS_ADMIN = base.Columns["IS_ADMIN"];
                this.columnCODE_PAGE = base.Columns["CODE_PAGE"];
                this.columnDEPARTMENT_UUID = base.Columns["DEPARTMENT_UUID"];
                this.columnPHONE = base.Columns["PHONE"];
                this.columnSITE_UUID = base.Columns["SITE_UUID"];
                this.columnGENDER = base.Columns["GENDER"];
                this.columnBIRTHDAY = base.Columns["BIRTHDAY"];
                this.columnHIRE_DATE = base.Columns["HIRE_DATE"];
                this.columnQUIT_DATE = base.Columns["QUIT_DATE"];
                this.columnIS_MANAGER = base.Columns["IS_MANAGER"];
                this.columnIS_DIRECT = base.Columns["IS_DIRECT"];
                this.columnGRADE = base.Columns["GRADE"];
                this.columnID = base.Columns["ID"];
                this.columnIS_DEFAULT_PASS = base.Columns["IS_DEFAULT_PASS"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columncompany_id = new global::System.Data.DataColumn("company_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncompany_id);
                this.columncompany_c_name = new global::System.Data.DataColumn("company_c_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncompany_c_name);
                this.columncompany_e_name = new global::System.Data.DataColumn("company_e_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncompany_e_name);
                this.columndepartment_id = new global::System.Data.DataColumn("department_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndepartment_id);
                this.columndepartment_c_name = new global::System.Data.DataColumn("department_c_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndepartment_c_name);
                this.columndepartment_e_name = new global::System.Data.DataColumn("department_e_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndepartment_e_name);
                this.columnsite_id = new global::System.Data.DataColumn("site_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsite_id);
                this.columnsite_c_name = new global::System.Data.DataColumn("site_c_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsite_c_name);
                this.columnsite_e_name = new global::System.Data.DataColumn("site_e_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsite_e_name);
                this.columnUUID = new global::System.Data.DataColumn("UUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUUID);
                this.columnCREATE_DATE = new global::System.Data.DataColumn("CREATE_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATE_DATE);
                this.columnUPDATE_DATE = new global::System.Data.DataColumn("UPDATE_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUPDATE_DATE);
                this.columnIS_ACTIVE = new global::System.Data.DataColumn("IS_ACTIVE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIS_ACTIVE);
                this.columnCOMPANY_UUID = new global::System.Data.DataColumn("COMPANY_UUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANY_UUID);
                this.columnACCOUNT = new global::System.Data.DataColumn("ACCOUNT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCOUNT);
                this.columnC_NAME = new global::System.Data.DataColumn("C_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC_NAME);
                this.columnE_NAME = new global::System.Data.DataColumn("E_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnE_NAME);
                this.columnEMAIL = new global::System.Data.DataColumn("EMAIL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMAIL);
                this.columnPASSWORD = new global::System.Data.DataColumn("PASSWORD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPASSWORD);
                this.columnIS_SUPPER = new global::System.Data.DataColumn("IS_SUPPER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIS_SUPPER);
                this.columnIS_ADMIN = new global::System.Data.DataColumn("IS_ADMIN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIS_ADMIN);
                this.columnCODE_PAGE = new global::System.Data.DataColumn("CODE_PAGE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODE_PAGE);
                this.columnDEPARTMENT_UUID = new global::System.Data.DataColumn("DEPARTMENT_UUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEPARTMENT_UUID);
                this.columnPHONE = new global::System.Data.DataColumn("PHONE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPHONE);
                this.columnSITE_UUID = new global::System.Data.DataColumn("SITE_UUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSITE_UUID);
                this.columnGENDER = new global::System.Data.DataColumn("GENDER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGENDER);
                this.columnBIRTHDAY = new global::System.Data.DataColumn("BIRTHDAY", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBIRTHDAY);
                this.columnHIRE_DATE = new global::System.Data.DataColumn("HIRE_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHIRE_DATE);
                this.columnQUIT_DATE = new global::System.Data.DataColumn("QUIT_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQUIT_DATE);
                this.columnIS_MANAGER = new global::System.Data.DataColumn("IS_MANAGER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIS_MANAGER);
                this.columnIS_DIRECT = new global::System.Data.DataColumn("IS_DIRECT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIS_DIRECT);
                this.columnGRADE = new global::System.Data.DataColumn("GRADE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGRADE);
                this.columnID = new global::System.Data.DataColumn("ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnIS_DEFAULT_PASS = new global::System.Data.DataColumn("IS_DEFAULT_PASS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIS_DEFAULT_PASS);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnUUID}, true));
                this.columncompany_id.AllowDBNull = false;
                this.columncompany_id.MaxLength = 100;
                this.columncompany_c_name.MaxLength = 100;
                this.columncompany_e_name.MaxLength = 100;
                this.columndepartment_id.MaxLength = 100;
                this.columndepartment_c_name.MaxLength = 100;
                this.columndepartment_e_name.MaxLength = 100;
                this.columnsite_id.MaxLength = 100;
                this.columnsite_c_name.MaxLength = 100;
                this.columnsite_e_name.MaxLength = 100;
                this.columnUUID.AllowDBNull = false;
                this.columnUUID.Unique = true;
                this.columnUUID.MaxLength = 36;
                this.columnIS_ACTIVE.AllowDBNull = false;
                this.columnIS_ACTIVE.MaxLength = 1;
                this.columnCOMPANY_UUID.AllowDBNull = false;
                this.columnCOMPANY_UUID.MaxLength = 36;
                this.columnACCOUNT.AllowDBNull = false;
                this.columnACCOUNT.MaxLength = 50;
                this.columnC_NAME.MaxLength = 100;
                this.columnE_NAME.MaxLength = 100;
                this.columnEMAIL.AllowDBNull = false;
                this.columnEMAIL.MaxLength = 300;
                this.columnPASSWORD.MaxLength = 50;
                this.columnIS_SUPPER.AllowDBNull = false;
                this.columnIS_SUPPER.MaxLength = 1;
                this.columnIS_ADMIN.AllowDBNull = false;
                this.columnIS_ADMIN.MaxLength = 1;
                this.columnCODE_PAGE.AllowDBNull = false;
                this.columnCODE_PAGE.MaxLength = 10;
                this.columnDEPARTMENT_UUID.MaxLength = 36;
                this.columnPHONE.MaxLength = 50;
                this.columnSITE_UUID.MaxLength = 36;
                this.columnGENDER.MaxLength = 1;
                this.columnIS_MANAGER.MaxLength = 1;
                this.columnIS_DIRECT.MaxLength = 1;
                this.columnGRADE.MaxLength = 10;
                this.columnID.MaxLength = 100;
                this.columnIS_DEFAULT_PASS.MaxLength = 1;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public attendant_vRow Newattendant_vRow() {
                return ((attendant_vRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new attendant_vRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(attendant_vRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.attendant_vRowChanged != null)) {
                    this.attendant_vRowChanged(this, new attendant_vRowChangeEvent(((attendant_vRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.attendant_vRowChanging != null)) {
                    this.attendant_vRowChanging(this, new attendant_vRowChangeEvent(((attendant_vRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.attendant_vRowDeleted != null)) {
                    this.attendant_vRowDeleted(this, new attendant_vRowChangeEvent(((attendant_vRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.attendant_vRowDeleting != null)) {
                    this.attendant_vRowDeleting(this, new attendant_vRowChangeEvent(((attendant_vRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeattendant_vRow(attendant_vRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Basic ds = new Basic();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "attendant_vDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class sitemap_vDataTable : global::System.Data.TypedTableBase<sitemap_vRow> {
            
            private global::System.Data.DataColumn columnUUID;
            
            private global::System.Data.DataColumn columnIS_ACTIVE;
            
            private global::System.Data.DataColumn columnCREATE_DATE;
            
            private global::System.Data.DataColumn columnCREATE_USER;
            
            private global::System.Data.DataColumn columnUPDATE_DATE;
            
            private global::System.Data.DataColumn columnUPDATE_USER;
            
            private global::System.Data.DataColumn columnSITEMAP_UUID;
            
            private global::System.Data.DataColumn columnAPPPAGE_UUID;
            
            private global::System.Data.DataColumn columnROOT_UUID;
            
            private global::System.Data.DataColumn columnHASCHILD;
            
            private global::System.Data.DataColumn columnAPPLICATION_HEAD_UUID;
            
            private global::System.Data.DataColumn columnname;
            
            private global::System.Data.DataColumn columndescription;
            
            private global::System.Data.DataColumn columnurl;
            
            private global::System.Data.DataColumn columnp_mode;
            
            private global::System.Data.DataColumn columnparameter_class;
            
            private global::System.Data.DataColumn columnapppage_is_active;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sitemap_vDataTable() {
                this.TableName = "sitemap_v";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sitemap_vDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected sitemap_vDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UUIDColumn {
                get {
                    return this.columnUUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IS_ACTIVEColumn {
                get {
                    return this.columnIS_ACTIVE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATE_DATEColumn {
                get {
                    return this.columnCREATE_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATE_USERColumn {
                get {
                    return this.columnCREATE_USER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UPDATE_DATEColumn {
                get {
                    return this.columnUPDATE_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UPDATE_USERColumn {
                get {
                    return this.columnUPDATE_USER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SITEMAP_UUIDColumn {
                get {
                    return this.columnSITEMAP_UUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn APPPAGE_UUIDColumn {
                get {
                    return this.columnAPPPAGE_UUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ROOT_UUIDColumn {
                get {
                    return this.columnROOT_UUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HASCHILDColumn {
                get {
                    return this.columnHASCHILD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn APPLICATION_HEAD_UUIDColumn {
                get {
                    return this.columnAPPLICATION_HEAD_UUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn descriptionColumn {
                get {
                    return this.columndescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn urlColumn {
                get {
                    return this.columnurl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn p_modeColumn {
                get {
                    return this.columnp_mode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn parameter_classColumn {
                get {
                    return this.columnparameter_class;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn apppage_is_activeColumn {
                get {
                    return this.columnapppage_is_active;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sitemap_vRow this[int index] {
                get {
                    return ((sitemap_vRow)(this.Rows[index]));
                }
            }
            
            public event sitemap_vRowChangeEventHandler sitemap_vRowChanging;
            
            public event sitemap_vRowChangeEventHandler sitemap_vRowChanged;
            
            public event sitemap_vRowChangeEventHandler sitemap_vRowDeleting;
            
            public event sitemap_vRowChangeEventHandler sitemap_vRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addsitemap_vRow(sitemap_vRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sitemap_vRow Addsitemap_vRow(
                        string UUID, 
                        string IS_ACTIVE, 
                        System.DateTime CREATE_DATE, 
                        string CREATE_USER, 
                        System.DateTime UPDATE_DATE, 
                        string UPDATE_USER, 
                        string SITEMAP_UUID, 
                        string APPPAGE_UUID, 
                        string ROOT_UUID, 
                        string HASCHILD, 
                        string APPLICATION_HEAD_UUID, 
                        string name, 
                        string description, 
                        string url, 
                        string p_mode, 
                        string parameter_class, 
                        string apppage_is_active) {
                sitemap_vRow rowsitemap_vRow = ((sitemap_vRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        UUID,
                        IS_ACTIVE,
                        CREATE_DATE,
                        CREATE_USER,
                        UPDATE_DATE,
                        UPDATE_USER,
                        SITEMAP_UUID,
                        APPPAGE_UUID,
                        ROOT_UUID,
                        HASCHILD,
                        APPLICATION_HEAD_UUID,
                        name,
                        description,
                        url,
                        p_mode,
                        parameter_class,
                        apppage_is_active};
                rowsitemap_vRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowsitemap_vRow);
                return rowsitemap_vRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sitemap_vRow FindByUUID(string UUID) {
                return ((sitemap_vRow)(this.Rows.Find(new object[] {
                            UUID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                sitemap_vDataTable cln = ((sitemap_vDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new sitemap_vDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnUUID = base.Columns["UUID"];
                this.columnIS_ACTIVE = base.Columns["IS_ACTIVE"];
                this.columnCREATE_DATE = base.Columns["CREATE_DATE"];
                this.columnCREATE_USER = base.Columns["CREATE_USER"];
                this.columnUPDATE_DATE = base.Columns["UPDATE_DATE"];
                this.columnUPDATE_USER = base.Columns["UPDATE_USER"];
                this.columnSITEMAP_UUID = base.Columns["SITEMAP_UUID"];
                this.columnAPPPAGE_UUID = base.Columns["APPPAGE_UUID"];
                this.columnROOT_UUID = base.Columns["ROOT_UUID"];
                this.columnHASCHILD = base.Columns["HASCHILD"];
                this.columnAPPLICATION_HEAD_UUID = base.Columns["APPLICATION_HEAD_UUID"];
                this.columnname = base.Columns["name"];
                this.columndescription = base.Columns["description"];
                this.columnurl = base.Columns["url"];
                this.columnp_mode = base.Columns["p_mode"];
                this.columnparameter_class = base.Columns["parameter_class"];
                this.columnapppage_is_active = base.Columns["apppage_is_active"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnUUID = new global::System.Data.DataColumn("UUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUUID);
                this.columnIS_ACTIVE = new global::System.Data.DataColumn("IS_ACTIVE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIS_ACTIVE);
                this.columnCREATE_DATE = new global::System.Data.DataColumn("CREATE_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATE_DATE);
                this.columnCREATE_USER = new global::System.Data.DataColumn("CREATE_USER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATE_USER);
                this.columnUPDATE_DATE = new global::System.Data.DataColumn("UPDATE_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUPDATE_DATE);
                this.columnUPDATE_USER = new global::System.Data.DataColumn("UPDATE_USER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUPDATE_USER);
                this.columnSITEMAP_UUID = new global::System.Data.DataColumn("SITEMAP_UUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSITEMAP_UUID);
                this.columnAPPPAGE_UUID = new global::System.Data.DataColumn("APPPAGE_UUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAPPPAGE_UUID);
                this.columnROOT_UUID = new global::System.Data.DataColumn("ROOT_UUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnROOT_UUID);
                this.columnHASCHILD = new global::System.Data.DataColumn("HASCHILD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHASCHILD);
                this.columnAPPLICATION_HEAD_UUID = new global::System.Data.DataColumn("APPLICATION_HEAD_UUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAPPLICATION_HEAD_UUID);
                this.columnname = new global::System.Data.DataColumn("name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columndescription = new global::System.Data.DataColumn("description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndescription);
                this.columnurl = new global::System.Data.DataColumn("url", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnurl);
                this.columnp_mode = new global::System.Data.DataColumn("p_mode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnp_mode);
                this.columnparameter_class = new global::System.Data.DataColumn("parameter_class", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnparameter_class);
                this.columnapppage_is_active = new global::System.Data.DataColumn("apppage_is_active", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnapppage_is_active);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnUUID}, true));
                this.columnUUID.AllowDBNull = false;
                this.columnUUID.Unique = true;
                this.columnUUID.MaxLength = 36;
                this.columnIS_ACTIVE.AllowDBNull = false;
                this.columnIS_ACTIVE.MaxLength = 1;
                this.columnCREATE_DATE.AllowDBNull = false;
                this.columnCREATE_USER.AllowDBNull = false;
                this.columnCREATE_USER.MaxLength = 36;
                this.columnUPDATE_USER.MaxLength = 36;
                this.columnSITEMAP_UUID.MaxLength = 36;
                this.columnAPPPAGE_UUID.AllowDBNull = false;
                this.columnAPPPAGE_UUID.MaxLength = 36;
                this.columnROOT_UUID.AllowDBNull = false;
                this.columnROOT_UUID.MaxLength = 36;
                this.columnHASCHILD.AllowDBNull = false;
                this.columnHASCHILD.MaxLength = 1;
                this.columnAPPLICATION_HEAD_UUID.MaxLength = 36;
                this.columnname.AllowDBNull = false;
                this.columnname.MaxLength = 200;
                this.columndescription.MaxLength = 500;
                this.columnurl.AllowDBNull = false;
                this.columnurl.MaxLength = 200;
                this.columnp_mode.MaxLength = 100;
                this.columnparameter_class.MaxLength = 200;
                this.columnapppage_is_active.AllowDBNull = false;
                this.columnapppage_is_active.MaxLength = 1;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sitemap_vRow Newsitemap_vRow() {
                return ((sitemap_vRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new sitemap_vRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(sitemap_vRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.sitemap_vRowChanged != null)) {
                    this.sitemap_vRowChanged(this, new sitemap_vRowChangeEvent(((sitemap_vRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.sitemap_vRowChanging != null)) {
                    this.sitemap_vRowChanging(this, new sitemap_vRowChangeEvent(((sitemap_vRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.sitemap_vRowDeleted != null)) {
                    this.sitemap_vRowDeleted(this, new sitemap_vRowChangeEvent(((sitemap_vRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.sitemap_vRowDeleting != null)) {
                    this.sitemap_vRowDeleting(this, new sitemap_vRowChangeEvent(((sitemap_vRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removesitemap_vRow(sitemap_vRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Basic ds = new Basic();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "sitemap_vDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class group_head_vDataTable : global::System.Data.TypedTableBase<group_head_vRow> {
            
            private global::System.Data.DataColumn columnuuid;
            
            private global::System.Data.DataColumn columncreate_date;
            
            private global::System.Data.DataColumn columnupdate_date;
            
            private global::System.Data.DataColumn columnis_group_active;
            
            private global::System.Data.DataColumn columnname_zh_tw;
            
            private global::System.Data.DataColumn columnname_zh_cn;
            
            private global::System.Data.DataColumn columnname_en_us;
            
            private global::System.Data.DataColumn columncompany_uuid;
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columncreate_user;
            
            private global::System.Data.DataColumn columnupdate_user;
            
            private global::System.Data.DataColumn columnapplication_head_uuid;
            
            private global::System.Data.DataColumn columnapplication_id;
            
            private global::System.Data.DataColumn columnapplication_name;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public group_head_vDataTable() {
                this.TableName = "group_head_v";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal group_head_vDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected group_head_vDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn uuidColumn {
                get {
                    return this.columnuuid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn create_dateColumn {
                get {
                    return this.columncreate_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn update_dateColumn {
                get {
                    return this.columnupdate_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn is_group_activeColumn {
                get {
                    return this.columnis_group_active;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn name_zh_twColumn {
                get {
                    return this.columnname_zh_tw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn name_zh_cnColumn {
                get {
                    return this.columnname_zh_cn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn name_en_usColumn {
                get {
                    return this.columnname_en_us;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn company_uuidColumn {
                get {
                    return this.columncompany_uuid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn create_userColumn {
                get {
                    return this.columncreate_user;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn update_userColumn {
                get {
                    return this.columnupdate_user;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn application_head_uuidColumn {
                get {
                    return this.columnapplication_head_uuid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn application_idColumn {
                get {
                    return this.columnapplication_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn application_nameColumn {
                get {
                    return this.columnapplication_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public group_head_vRow this[int index] {
                get {
                    return ((group_head_vRow)(this.Rows[index]));
                }
            }
            
            public event group_head_vRowChangeEventHandler group_head_vRowChanging;
            
            public event group_head_vRowChangeEventHandler group_head_vRowChanged;
            
            public event group_head_vRowChangeEventHandler group_head_vRowDeleting;
            
            public event group_head_vRowChangeEventHandler group_head_vRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addgroup_head_vRow(group_head_vRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public group_head_vRow Addgroup_head_vRow(string uuid, System.DateTime create_date, System.DateTime update_date, string is_group_active, string name_zh_tw, string name_zh_cn, string name_en_us, COMPANYRow parentCOMPANYRowByCOMPANY_group_head_v, string id, string create_user, string update_user, APPLICATION_HEADRow parentAPPLICATION_HEADRowByAPPLICATION_HEAD_group_head_v, string application_id, string application_name) {
                group_head_vRow rowgroup_head_vRow = ((group_head_vRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        uuid,
                        create_date,
                        update_date,
                        is_group_active,
                        name_zh_tw,
                        name_zh_cn,
                        name_en_us,
                        null,
                        id,
                        create_user,
                        update_user,
                        null,
                        application_id,
                        application_name};
                if ((parentCOMPANYRowByCOMPANY_group_head_v != null)) {
                    columnValuesArray[7] = parentCOMPANYRowByCOMPANY_group_head_v[0];
                }
                if ((parentAPPLICATION_HEADRowByAPPLICATION_HEAD_group_head_v != null)) {
                    columnValuesArray[11] = parentAPPLICATION_HEADRowByAPPLICATION_HEAD_group_head_v[0];
                }
                rowgroup_head_vRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowgroup_head_vRow);
                return rowgroup_head_vRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public group_head_vRow FindByuuid(string uuid) {
                return ((group_head_vRow)(this.Rows.Find(new object[] {
                            uuid})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                group_head_vDataTable cln = ((group_head_vDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new group_head_vDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnuuid = base.Columns["uuid"];
                this.columncreate_date = base.Columns["create_date"];
                this.columnupdate_date = base.Columns["update_date"];
                this.columnis_group_active = base.Columns["is_group_active"];
                this.columnname_zh_tw = base.Columns["name_zh_tw"];
                this.columnname_zh_cn = base.Columns["name_zh_cn"];
                this.columnname_en_us = base.Columns["name_en_us"];
                this.columncompany_uuid = base.Columns["company_uuid"];
                this.columnid = base.Columns["id"];
                this.columncreate_user = base.Columns["create_user"];
                this.columnupdate_user = base.Columns["update_user"];
                this.columnapplication_head_uuid = base.Columns["application_head_uuid"];
                this.columnapplication_id = base.Columns["application_id"];
                this.columnapplication_name = base.Columns["application_name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnuuid = new global::System.Data.DataColumn("uuid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuuid);
                this.columncreate_date = new global::System.Data.DataColumn("create_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreate_date);
                this.columnupdate_date = new global::System.Data.DataColumn("update_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnupdate_date);
                this.columnis_group_active = new global::System.Data.DataColumn("is_group_active", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnis_group_active);
                this.columnname_zh_tw = new global::System.Data.DataColumn("name_zh_tw", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname_zh_tw);
                this.columnname_zh_cn = new global::System.Data.DataColumn("name_zh_cn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname_zh_cn);
                this.columnname_en_us = new global::System.Data.DataColumn("name_en_us", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname_en_us);
                this.columncompany_uuid = new global::System.Data.DataColumn("company_uuid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncompany_uuid);
                this.columnid = new global::System.Data.DataColumn("id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columncreate_user = new global::System.Data.DataColumn("create_user", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreate_user);
                this.columnupdate_user = new global::System.Data.DataColumn("update_user", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnupdate_user);
                this.columnapplication_head_uuid = new global::System.Data.DataColumn("application_head_uuid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnapplication_head_uuid);
                this.columnapplication_id = new global::System.Data.DataColumn("application_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnapplication_id);
                this.columnapplication_name = new global::System.Data.DataColumn("application_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnapplication_name);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnuuid}, true));
                this.columnuuid.AllowDBNull = false;
                this.columnuuid.Unique = true;
                this.columnuuid.MaxLength = 36;
                this.columncreate_date.AllowDBNull = false;
                this.columnis_group_active.AllowDBNull = false;
                this.columnis_group_active.MaxLength = 1;
                this.columnname_zh_tw.AllowDBNull = false;
                this.columnname_zh_tw.MaxLength = 200;
                this.columnname_zh_cn.AllowDBNull = false;
                this.columnname_zh_cn.MaxLength = 200;
                this.columnname_en_us.AllowDBNull = false;
                this.columnname_en_us.MaxLength = 200;
                this.columncompany_uuid.AllowDBNull = false;
                this.columncompany_uuid.MaxLength = 36;
                this.columnid.AllowDBNull = false;
                this.columnid.MaxLength = 100;
                this.columncreate_user.AllowDBNull = false;
                this.columncreate_user.MaxLength = 36;
                this.columnupdate_user.MaxLength = 36;
                this.columnapplication_head_uuid.AllowDBNull = false;
                this.columnapplication_head_uuid.MaxLength = 36;
                this.columnapplication_id.AllowDBNull = false;
                this.columnapplication_id.MaxLength = 100;
                this.columnapplication_name.AllowDBNull = false;
                this.columnapplication_name.MaxLength = 200;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public group_head_vRow Newgroup_head_vRow() {
                return ((group_head_vRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new group_head_vRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(group_head_vRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.group_head_vRowChanged != null)) {
                    this.group_head_vRowChanged(this, new group_head_vRowChangeEvent(((group_head_vRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.group_head_vRowChanging != null)) {
                    this.group_head_vRowChanging(this, new group_head_vRowChangeEvent(((group_head_vRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.group_head_vRowDeleted != null)) {
                    this.group_head_vRowDeleted(this, new group_head_vRowChangeEvent(((group_head_vRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.group_head_vRowDeleting != null)) {
                    this.group_head_vRowDeleting(this, new group_head_vRowChangeEvent(((group_head_vRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removegroup_head_vRow(group_head_vRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Basic ds = new Basic();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "group_head_vDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class group_attendant_vDataTable : global::System.Data.TypedTableBase<group_attendant_vRow> {
            
            private global::System.Data.DataColumn columngroup_name_zh_tw;
            
            private global::System.Data.DataColumn columngroup_name_zh_cn;
            
            private global::System.Data.DataColumn columngroup_name_en_us;
            
            private global::System.Data.DataColumn columnis_group_active;
            
            private global::System.Data.DataColumn columncompany_uuid;
            
            private global::System.Data.DataColumn columncompany_id;
            
            private global::System.Data.DataColumn columncompany_c_name;
            
            private global::System.Data.DataColumn columncompany_e_name;
            
            private global::System.Data.DataColumn columngroup_id;
            
            private global::System.Data.DataColumn columnapplication_head_uuid;
            
            private global::System.Data.DataColumn columnattendant_c_name;
            
            private global::System.Data.DataColumn columnattendant_E_name;
            
            private global::System.Data.DataColumn columnaccount;
            
            private global::System.Data.DataColumn columnemail;
            
            private global::System.Data.DataColumn columnis_attendant_active;
            
            private global::System.Data.DataColumn columnUUID;
            
            private global::System.Data.DataColumn columnCREATE_DATE;
            
            private global::System.Data.DataColumn columnUPDATE_DATE;
            
            private global::System.Data.DataColumn columnIS_ACTIVE;
            
            private global::System.Data.DataColumn columngroup_head_uuid;
            
            private global::System.Data.DataColumn columnattendant_uuid;
            
            private global::System.Data.DataColumn columnDEPARTMENT_UUID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public group_attendant_vDataTable() {
                this.TableName = "group_attendant_v";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal group_attendant_vDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected group_attendant_vDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn group_name_zh_twColumn {
                get {
                    return this.columngroup_name_zh_tw;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn group_name_zh_cnColumn {
                get {
                    return this.columngroup_name_zh_cn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn group_name_en_usColumn {
                get {
                    return this.columngroup_name_en_us;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn is_group_activeColumn {
                get {
                    return this.columnis_group_active;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn company_uuidColumn {
                get {
                    return this.columncompany_uuid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn company_idColumn {
                get {
                    return this.columncompany_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn company_c_nameColumn {
                get {
                    return this.columncompany_c_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn company_e_nameColumn {
                get {
                    return this.columncompany_e_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn group_idColumn {
                get {
                    return this.columngroup_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn application_head_uuidColumn {
                get {
                    return this.columnapplication_head_uuid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn attendant_c_nameColumn {
                get {
                    return this.columnattendant_c_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn attendant_E_nameColumn {
                get {
                    return this.columnattendant_E_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn accountColumn {
                get {
                    return this.columnaccount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn emailColumn {
                get {
                    return this.columnemail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn is_attendant_activeColumn {
                get {
                    return this.columnis_attendant_active;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UUIDColumn {
                get {
                    return this.columnUUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATE_DATEColumn {
                get {
                    return this.columnCREATE_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UPDATE_DATEColumn {
                get {
                    return this.columnUPDATE_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IS_ACTIVEColumn {
                get {
                    return this.columnIS_ACTIVE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn group_head_uuidColumn {
                get {
                    return this.columngroup_head_uuid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn attendant_uuidColumn {
                get {
                    return this.columnattendant_uuid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEPARTMENT_UUIDColumn {
                get {
                    return this.columnDEPARTMENT_UUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public group_attendant_vRow this[int index] {
                get {
                    return ((group_attendant_vRow)(this.Rows[index]));
                }
            }
            
            public event group_attendant_vRowChangeEventHandler group_attendant_vRowChanging;
            
            public event group_attendant_vRowChangeEventHandler group_attendant_vRowChanged;
            
            public event group_attendant_vRowChangeEventHandler group_attendant_vRowDeleting;
            
            public event group_attendant_vRowChangeEventHandler group_attendant_vRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addgroup_attendant_vRow(group_attendant_vRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public group_attendant_vRow Addgroup_attendant_vRow(
                        string group_name_zh_tw, 
                        string group_name_zh_cn, 
                        string group_name_en_us, 
                        string is_group_active, 
                        COMPANYRow parentCOMPANYRowByCOMPANY_group_attendant_v, 
                        string company_id, 
                        string company_c_name, 
                        string company_e_name, 
                        string group_id, 
                        string application_head_uuid, 
                        string attendant_c_name, 
                        string attendant_E_name, 
                        string account, 
                        string email, 
                        string is_attendant_active, 
                        string UUID, 
                        System.DateTime CREATE_DATE, 
                        System.DateTime UPDATE_DATE, 
                        string IS_ACTIVE, 
                        GROUP_HEADRow parentGROUP_HEADRowByGROUP_HEAD_group_attendant_v, 
                        ATTENDANTRow parentATTENDANTRowByATTENDANT_group_attendant_v, 
                        string DEPARTMENT_UUID) {
                group_attendant_vRow rowgroup_attendant_vRow = ((group_attendant_vRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        group_name_zh_tw,
                        group_name_zh_cn,
                        group_name_en_us,
                        is_group_active,
                        null,
                        company_id,
                        company_c_name,
                        company_e_name,
                        group_id,
                        application_head_uuid,
                        attendant_c_name,
                        attendant_E_name,
                        account,
                        email,
                        is_attendant_active,
                        UUID,
                        CREATE_DATE,
                        UPDATE_DATE,
                        IS_ACTIVE,
                        null,
                        null,
                        DEPARTMENT_UUID};
                if ((parentCOMPANYRowByCOMPANY_group_attendant_v != null)) {
                    columnValuesArray[4] = parentCOMPANYRowByCOMPANY_group_attendant_v[0];
                }
                if ((parentGROUP_HEADRowByGROUP_HEAD_group_attendant_v != null)) {
                    columnValuesArray[19] = parentGROUP_HEADRowByGROUP_HEAD_group_attendant_v[0];
                }
                if ((parentATTENDANTRowByATTENDANT_group_attendant_v != null)) {
                    columnValuesArray[20] = parentATTENDANTRowByATTENDANT_group_attendant_v[0];
                }
                rowgroup_attendant_vRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowgroup_attendant_vRow);
                return rowgroup_attendant_vRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public group_attendant_vRow FindByUUID(string UUID) {
                return ((group_attendant_vRow)(this.Rows.Find(new object[] {
                            UUID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                group_attendant_vDataTable cln = ((group_attendant_vDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new group_attendant_vDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columngroup_name_zh_tw = base.Columns["group_name_zh_tw"];
                this.columngroup_name_zh_cn = base.Columns["group_name_zh_cn"];
                this.columngroup_name_en_us = base.Columns["group_name_en_us"];
                this.columnis_group_active = base.Columns["is_group_active"];
                this.columncompany_uuid = base.Columns["company_uuid"];
                this.columncompany_id = base.Columns["company_id"];
                this.columncompany_c_name = base.Columns["company_c_name"];
                this.columncompany_e_name = base.Columns["company_e_name"];
                this.columngroup_id = base.Columns["group_id"];
                this.columnapplication_head_uuid = base.Columns["application_head_uuid"];
                this.columnattendant_c_name = base.Columns["attendant_c_name"];
                this.columnattendant_E_name = base.Columns["attendant_E_name"];
                this.columnaccount = base.Columns["account"];
                this.columnemail = base.Columns["email"];
                this.columnis_attendant_active = base.Columns["is_attendant_active"];
                this.columnUUID = base.Columns["UUID"];
                this.columnCREATE_DATE = base.Columns["CREATE_DATE"];
                this.columnUPDATE_DATE = base.Columns["UPDATE_DATE"];
                this.columnIS_ACTIVE = base.Columns["IS_ACTIVE"];
                this.columngroup_head_uuid = base.Columns["group_head_uuid"];
                this.columnattendant_uuid = base.Columns["attendant_uuid"];
                this.columnDEPARTMENT_UUID = base.Columns["DEPARTMENT_UUID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columngroup_name_zh_tw = new global::System.Data.DataColumn("group_name_zh_tw", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngroup_name_zh_tw);
                this.columngroup_name_zh_cn = new global::System.Data.DataColumn("group_name_zh_cn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngroup_name_zh_cn);
                this.columngroup_name_en_us = new global::System.Data.DataColumn("group_name_en_us", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngroup_name_en_us);
                this.columnis_group_active = new global::System.Data.DataColumn("is_group_active", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnis_group_active);
                this.columncompany_uuid = new global::System.Data.DataColumn("company_uuid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncompany_uuid);
                this.columncompany_id = new global::System.Data.DataColumn("company_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncompany_id);
                this.columncompany_c_name = new global::System.Data.DataColumn("company_c_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncompany_c_name);
                this.columncompany_e_name = new global::System.Data.DataColumn("company_e_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncompany_e_name);
                this.columngroup_id = new global::System.Data.DataColumn("group_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngroup_id);
                this.columnapplication_head_uuid = new global::System.Data.DataColumn("application_head_uuid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnapplication_head_uuid);
                this.columnattendant_c_name = new global::System.Data.DataColumn("attendant_c_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnattendant_c_name);
                this.columnattendant_E_name = new global::System.Data.DataColumn("attendant_E_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnattendant_E_name);
                this.columnaccount = new global::System.Data.DataColumn("account", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaccount);
                this.columnemail = new global::System.Data.DataColumn("email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemail);
                this.columnis_attendant_active = new global::System.Data.DataColumn("is_attendant_active", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnis_attendant_active);
                this.columnUUID = new global::System.Data.DataColumn("UUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUUID);
                this.columnCREATE_DATE = new global::System.Data.DataColumn("CREATE_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATE_DATE);
                this.columnUPDATE_DATE = new global::System.Data.DataColumn("UPDATE_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUPDATE_DATE);
                this.columnIS_ACTIVE = new global::System.Data.DataColumn("IS_ACTIVE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIS_ACTIVE);
                this.columngroup_head_uuid = new global::System.Data.DataColumn("group_head_uuid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngroup_head_uuid);
                this.columnattendant_uuid = new global::System.Data.DataColumn("attendant_uuid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnattendant_uuid);
                this.columnDEPARTMENT_UUID = new global::System.Data.DataColumn("DEPARTMENT_UUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEPARTMENT_UUID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnUUID}, true));
                this.columngroup_name_zh_tw.AllowDBNull = false;
                this.columngroup_name_zh_tw.MaxLength = 200;
                this.columngroup_name_zh_cn.AllowDBNull = false;
                this.columngroup_name_zh_cn.MaxLength = 200;
                this.columngroup_name_en_us.AllowDBNull = false;
                this.columngroup_name_en_us.MaxLength = 200;
                this.columnis_group_active.AllowDBNull = false;
                this.columnis_group_active.MaxLength = 1;
                this.columncompany_uuid.AllowDBNull = false;
                this.columncompany_uuid.MaxLength = 36;
                this.columncompany_id.AllowDBNull = false;
                this.columncompany_id.MaxLength = 100;
                this.columncompany_c_name.MaxLength = 100;
                this.columncompany_e_name.MaxLength = 100;
                this.columngroup_id.AllowDBNull = false;
                this.columngroup_id.MaxLength = 100;
                this.columnapplication_head_uuid.AllowDBNull = false;
                this.columnapplication_head_uuid.MaxLength = 36;
                this.columnattendant_c_name.MaxLength = 100;
                this.columnattendant_E_name.MaxLength = 100;
                this.columnaccount.AllowDBNull = false;
                this.columnaccount.MaxLength = 50;
                this.columnemail.AllowDBNull = false;
                this.columnemail.MaxLength = 300;
                this.columnis_attendant_active.AllowDBNull = false;
                this.columnis_attendant_active.MaxLength = 1;
                this.columnUUID.AllowDBNull = false;
                this.columnUUID.Unique = true;
                this.columnUUID.MaxLength = 36;
                this.columnCREATE_DATE.AllowDBNull = false;
                this.columnIS_ACTIVE.AllowDBNull = false;
                this.columnIS_ACTIVE.MaxLength = 1;
                this.columngroup_head_uuid.AllowDBNull = false;
                this.columngroup_head_uuid.MaxLength = 36;
                this.columnattendant_uuid.AllowDBNull = false;
                this.columnattendant_uuid.MaxLength = 36;
                this.columnDEPARTMENT_UUID.MaxLength = 36;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public group_attendant_vRow Newgroup_attendant_vRow() {
                return ((group_attendant_vRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new group_attendant_vRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(group_attendant_vRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.group_attendant_vRowChanged != null)) {
                    this.group_attendant_vRowChanged(this, new group_attendant_vRowChangeEvent(((group_attendant_vRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.group_attendant_vRowChanging != null)) {
                    this.group_attendant_vRowChanging(this, new group_attendant_vRowChangeEvent(((group_attendant_vRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.group_attendant_vRowDeleted != null)) {
                    this.group_attendant_vRowDeleted(this, new group_attendant_vRowChangeEvent(((group_attendant_vRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.group_attendant_vRowDeleting != null)) {
                    this.group_attendant_vRowDeleting(this, new group_attendant_vRowChangeEvent(((group_attendant_vRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removegroup_attendant_vRow(group_attendant_vRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Basic ds = new Basic();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "group_attendant_vDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class appmenu_apppage_vDataTable : global::System.Data.TypedTableBase<appmenu_apppage_vRow> {
            
            private global::System.Data.DataColumn columnUUID;
            
            private global::System.Data.DataColumn columnIS_ACTIVE;
            
            private global::System.Data.DataColumn columnCREATE_DATE;
            
            private global::System.Data.DataColumn columnCREATE_USER;
            
            private global::System.Data.DataColumn columnUPDATE_DATE;
            
            private global::System.Data.DataColumn columnUPDATE_USER;
            
            private global::System.Data.DataColumn columnNAME_ZH_TW;
            
            private global::System.Data.DataColumn columnNAME_ZH_CN;
            
            private global::System.Data.DataColumn columnNAME_EN_US;
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnAPPMENU_UUID;
            
            private global::System.Data.DataColumn columnHASCHILD;
            
            private global::System.Data.DataColumn columnAPPLICATION_HEAD_UUID;
            
            private global::System.Data.DataColumn columnORD;
            
            private global::System.Data.DataColumn columnPARAMETER_CLASS;
            
            private global::System.Data.DataColumn columnIMAGE;
            
            private global::System.Data.DataColumn columnSITEMAP_UUID;
            
            private global::System.Data.DataColumn columnACTION_MODE;
            
            private global::System.Data.DataColumn columnIS_DEFAULT_PAGE;
            
            private global::System.Data.DataColumn columnIS_ADMIN;
            
            private global::System.Data.DataColumn columnurl;
            
            private global::System.Data.DataColumn columndescription;
            
            private global::System.Data.DataColumn columnfunc_name;
            
            private global::System.Data.DataColumn columnfunc_parameter_class;
            
            private global::System.Data.DataColumn columnp_mode;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public appmenu_apppage_vDataTable() {
                this.TableName = "appmenu_apppage_v";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal appmenu_apppage_vDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected appmenu_apppage_vDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UUIDColumn {
                get {
                    return this.columnUUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IS_ACTIVEColumn {
                get {
                    return this.columnIS_ACTIVE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATE_DATEColumn {
                get {
                    return this.columnCREATE_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATE_USERColumn {
                get {
                    return this.columnCREATE_USER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UPDATE_DATEColumn {
                get {
                    return this.columnUPDATE_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UPDATE_USERColumn {
                get {
                    return this.columnUPDATE_USER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NAME_ZH_TWColumn {
                get {
                    return this.columnNAME_ZH_TW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NAME_ZH_CNColumn {
                get {
                    return this.columnNAME_ZH_CN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NAME_EN_USColumn {
                get {
                    return this.columnNAME_EN_US;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn APPMENU_UUIDColumn {
                get {
                    return this.columnAPPMENU_UUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HASCHILDColumn {
                get {
                    return this.columnHASCHILD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn APPLICATION_HEAD_UUIDColumn {
                get {
                    return this.columnAPPLICATION_HEAD_UUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ORDColumn {
                get {
                    return this.columnORD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PARAMETER_CLASSColumn {
                get {
                    return this.columnPARAMETER_CLASS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IMAGEColumn {
                get {
                    return this.columnIMAGE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SITEMAP_UUIDColumn {
                get {
                    return this.columnSITEMAP_UUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ACTION_MODEColumn {
                get {
                    return this.columnACTION_MODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IS_DEFAULT_PAGEColumn {
                get {
                    return this.columnIS_DEFAULT_PAGE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IS_ADMINColumn {
                get {
                    return this.columnIS_ADMIN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn urlColumn {
                get {
                    return this.columnurl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn descriptionColumn {
                get {
                    return this.columndescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn func_nameColumn {
                get {
                    return this.columnfunc_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn func_parameter_classColumn {
                get {
                    return this.columnfunc_parameter_class;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn p_modeColumn {
                get {
                    return this.columnp_mode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public appmenu_apppage_vRow this[int index] {
                get {
                    return ((appmenu_apppage_vRow)(this.Rows[index]));
                }
            }
            
            public event appmenu_apppage_vRowChangeEventHandler appmenu_apppage_vRowChanging;
            
            public event appmenu_apppage_vRowChangeEventHandler appmenu_apppage_vRowChanged;
            
            public event appmenu_apppage_vRowChangeEventHandler appmenu_apppage_vRowDeleting;
            
            public event appmenu_apppage_vRowChangeEventHandler appmenu_apppage_vRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addappmenu_apppage_vRow(appmenu_apppage_vRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public appmenu_apppage_vRow Addappmenu_apppage_vRow(
                        string UUID, 
                        string IS_ACTIVE, 
                        System.DateTime CREATE_DATE, 
                        string CREATE_USER, 
                        System.DateTime UPDATE_DATE, 
                        string UPDATE_USER, 
                        string NAME_ZH_TW, 
                        string NAME_ZH_CN, 
                        string NAME_EN_US, 
                        string ID, 
                        APPMENURow parentAPPMENURowByAPPMENU_appmenu_apppage_v, 
                        string HASCHILD, 
                        APPLICATION_HEADRow parentAPPLICATION_HEADRowByAPPLICATION_HEAD_appmenu_apppage_v, 
                        decimal ORD, 
                        string PARAMETER_CLASS, 
                        string IMAGE, 
                        SITEMAPRow parentSITEMAPRowBySITEMAP_appmenu_apppage_v, 
                        string ACTION_MODE, 
                        string IS_DEFAULT_PAGE, 
                        string IS_ADMIN, 
                        string url, 
                        string description, 
                        string func_name, 
                        string func_parameter_class, 
                        string p_mode) {
                appmenu_apppage_vRow rowappmenu_apppage_vRow = ((appmenu_apppage_vRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        UUID,
                        IS_ACTIVE,
                        CREATE_DATE,
                        CREATE_USER,
                        UPDATE_DATE,
                        UPDATE_USER,
                        NAME_ZH_TW,
                        NAME_ZH_CN,
                        NAME_EN_US,
                        ID,
                        null,
                        HASCHILD,
                        null,
                        ORD,
                        PARAMETER_CLASS,
                        IMAGE,
                        null,
                        ACTION_MODE,
                        IS_DEFAULT_PAGE,
                        IS_ADMIN,
                        url,
                        description,
                        func_name,
                        func_parameter_class,
                        p_mode};
                if ((parentAPPMENURowByAPPMENU_appmenu_apppage_v != null)) {
                    columnValuesArray[10] = parentAPPMENURowByAPPMENU_appmenu_apppage_v[0];
                }
                if ((parentAPPLICATION_HEADRowByAPPLICATION_HEAD_appmenu_apppage_v != null)) {
                    columnValuesArray[12] = parentAPPLICATION_HEADRowByAPPLICATION_HEAD_appmenu_apppage_v[0];
                }
                if ((parentSITEMAPRowBySITEMAP_appmenu_apppage_v != null)) {
                    columnValuesArray[16] = parentSITEMAPRowBySITEMAP_appmenu_apppage_v[0];
                }
                rowappmenu_apppage_vRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowappmenu_apppage_vRow);
                return rowappmenu_apppage_vRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public appmenu_apppage_vRow FindByUUID(string UUID) {
                return ((appmenu_apppage_vRow)(this.Rows.Find(new object[] {
                            UUID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                appmenu_apppage_vDataTable cln = ((appmenu_apppage_vDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new appmenu_apppage_vDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnUUID = base.Columns["UUID"];
                this.columnIS_ACTIVE = base.Columns["IS_ACTIVE"];
                this.columnCREATE_DATE = base.Columns["CREATE_DATE"];
                this.columnCREATE_USER = base.Columns["CREATE_USER"];
                this.columnUPDATE_DATE = base.Columns["UPDATE_DATE"];
                this.columnUPDATE_USER = base.Columns["UPDATE_USER"];
                this.columnNAME_ZH_TW = base.Columns["NAME_ZH_TW"];
                this.columnNAME_ZH_CN = base.Columns["NAME_ZH_CN"];
                this.columnNAME_EN_US = base.Columns["NAME_EN_US"];
                this.columnID = base.Columns["ID"];
                this.columnAPPMENU_UUID = base.Columns["APPMENU_UUID"];
                this.columnHASCHILD = base.Columns["HASCHILD"];
                this.columnAPPLICATION_HEAD_UUID = base.Columns["APPLICATION_HEAD_UUID"];
                this.columnORD = base.Columns["ORD"];
                this.columnPARAMETER_CLASS = base.Columns["PARAMETER_CLASS"];
                this.columnIMAGE = base.Columns["IMAGE"];
                this.columnSITEMAP_UUID = base.Columns["SITEMAP_UUID"];
                this.columnACTION_MODE = base.Columns["ACTION_MODE"];
                this.columnIS_DEFAULT_PAGE = base.Columns["IS_DEFAULT_PAGE"];
                this.columnIS_ADMIN = base.Columns["IS_ADMIN"];
                this.columnurl = base.Columns["url"];
                this.columndescription = base.Columns["description"];
                this.columnfunc_name = base.Columns["func_name"];
                this.columnfunc_parameter_class = base.Columns["func_parameter_class"];
                this.columnp_mode = base.Columns["p_mode"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnUUID = new global::System.Data.DataColumn("UUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUUID);
                this.columnIS_ACTIVE = new global::System.Data.DataColumn("IS_ACTIVE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIS_ACTIVE);
                this.columnCREATE_DATE = new global::System.Data.DataColumn("CREATE_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATE_DATE);
                this.columnCREATE_USER = new global::System.Data.DataColumn("CREATE_USER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATE_USER);
                this.columnUPDATE_DATE = new global::System.Data.DataColumn("UPDATE_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUPDATE_DATE);
                this.columnUPDATE_USER = new global::System.Data.DataColumn("UPDATE_USER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUPDATE_USER);
                this.columnNAME_ZH_TW = new global::System.Data.DataColumn("NAME_ZH_TW", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME_ZH_TW);
                this.columnNAME_ZH_CN = new global::System.Data.DataColumn("NAME_ZH_CN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME_ZH_CN);
                this.columnNAME_EN_US = new global::System.Data.DataColumn("NAME_EN_US", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME_EN_US);
                this.columnID = new global::System.Data.DataColumn("ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnAPPMENU_UUID = new global::System.Data.DataColumn("APPMENU_UUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAPPMENU_UUID);
                this.columnHASCHILD = new global::System.Data.DataColumn("HASCHILD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHASCHILD);
                this.columnAPPLICATION_HEAD_UUID = new global::System.Data.DataColumn("APPLICATION_HEAD_UUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAPPLICATION_HEAD_UUID);
                this.columnORD = new global::System.Data.DataColumn("ORD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnORD);
                this.columnPARAMETER_CLASS = new global::System.Data.DataColumn("PARAMETER_CLASS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPARAMETER_CLASS);
                this.columnIMAGE = new global::System.Data.DataColumn("IMAGE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIMAGE);
                this.columnSITEMAP_UUID = new global::System.Data.DataColumn("SITEMAP_UUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSITEMAP_UUID);
                this.columnACTION_MODE = new global::System.Data.DataColumn("ACTION_MODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACTION_MODE);
                this.columnIS_DEFAULT_PAGE = new global::System.Data.DataColumn("IS_DEFAULT_PAGE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIS_DEFAULT_PAGE);
                this.columnIS_ADMIN = new global::System.Data.DataColumn("IS_ADMIN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIS_ADMIN);
                this.columnurl = new global::System.Data.DataColumn("url", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnurl);
                this.columndescription = new global::System.Data.DataColumn("description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndescription);
                this.columnfunc_name = new global::System.Data.DataColumn("func_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfunc_name);
                this.columnfunc_parameter_class = new global::System.Data.DataColumn("func_parameter_class", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfunc_parameter_class);
                this.columnp_mode = new global::System.Data.DataColumn("p_mode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnp_mode);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnUUID}, true));
                this.columnUUID.AllowDBNull = false;
                this.columnUUID.Unique = true;
                this.columnUUID.MaxLength = 36;
                this.columnIS_ACTIVE.AllowDBNull = false;
                this.columnIS_ACTIVE.MaxLength = 1;
                this.columnCREATE_DATE.AllowDBNull = false;
                this.columnCREATE_USER.AllowDBNull = false;
                this.columnCREATE_USER.MaxLength = 36;
                this.columnUPDATE_USER.MaxLength = 36;
                this.columnNAME_ZH_TW.AllowDBNull = false;
                this.columnNAME_ZH_TW.MaxLength = 200;
                this.columnNAME_ZH_CN.AllowDBNull = false;
                this.columnNAME_ZH_CN.MaxLength = 200;
                this.columnNAME_EN_US.AllowDBNull = false;
                this.columnNAME_EN_US.MaxLength = 200;
                this.columnID.AllowDBNull = false;
                this.columnID.MaxLength = 100;
                this.columnAPPMENU_UUID.MaxLength = 36;
                this.columnHASCHILD.AllowDBNull = false;
                this.columnHASCHILD.MaxLength = 1;
                this.columnAPPLICATION_HEAD_UUID.AllowDBNull = false;
                this.columnAPPLICATION_HEAD_UUID.MaxLength = 36;
                this.columnORD.AllowDBNull = false;
                this.columnPARAMETER_CLASS.MaxLength = 200;
                this.columnIMAGE.MaxLength = 100;
                this.columnSITEMAP_UUID.MaxLength = 36;
                this.columnACTION_MODE.MaxLength = 50;
                this.columnIS_DEFAULT_PAGE.MaxLength = 1;
                this.columnIS_ADMIN.MaxLength = 1;
                this.columnurl.MaxLength = 8000;
                this.columndescription.MaxLength = 500;
                this.columnfunc_name.MaxLength = 200;
                this.columnfunc_parameter_class.MaxLength = 200;
                this.columnp_mode.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public appmenu_apppage_vRow Newappmenu_apppage_vRow() {
                return ((appmenu_apppage_vRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new appmenu_apppage_vRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(appmenu_apppage_vRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.appmenu_apppage_vRowChanged != null)) {
                    this.appmenu_apppage_vRowChanged(this, new appmenu_apppage_vRowChangeEvent(((appmenu_apppage_vRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.appmenu_apppage_vRowChanging != null)) {
                    this.appmenu_apppage_vRowChanging(this, new appmenu_apppage_vRowChangeEvent(((appmenu_apppage_vRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.appmenu_apppage_vRowDeleted != null)) {
                    this.appmenu_apppage_vRowDeleted(this, new appmenu_apppage_vRowChangeEvent(((appmenu_apppage_vRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.appmenu_apppage_vRowDeleting != null)) {
                    this.appmenu_apppage_vRowDeleting(this, new appmenu_apppage_vRowChangeEvent(((appmenu_apppage_vRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeappmenu_apppage_vRow(appmenu_apppage_vRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Basic ds = new Basic();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "appmenu_apppage_vDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class group_appmenu_vDataTable : global::System.Data.TypedTableBase<group_appmenu_vRow> {
            
            private global::System.Data.DataColumn columnUUID;
            
            private global::System.Data.DataColumn columnIS_ACTIVE;
            
            private global::System.Data.DataColumn columnCREATE_DATE;
            
            private global::System.Data.DataColumn columnCREATE_USER;
            
            private global::System.Data.DataColumn columnUPDATE_DATE;
            
            private global::System.Data.DataColumn columnUPDATE_USER;
            
            private global::System.Data.DataColumn columnAPPMENU_UUID;
            
            private global::System.Data.DataColumn columnGROUP_HEAD_UUID;
            
            private global::System.Data.DataColumn columnIS_DEFAULT_PAGE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public group_appmenu_vDataTable() {
                this.TableName = "group_appmenu_v";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal group_appmenu_vDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected group_appmenu_vDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UUIDColumn {
                get {
                    return this.columnUUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IS_ACTIVEColumn {
                get {
                    return this.columnIS_ACTIVE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATE_DATEColumn {
                get {
                    return this.columnCREATE_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATE_USERColumn {
                get {
                    return this.columnCREATE_USER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UPDATE_DATEColumn {
                get {
                    return this.columnUPDATE_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UPDATE_USERColumn {
                get {
                    return this.columnUPDATE_USER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn APPMENU_UUIDColumn {
                get {
                    return this.columnAPPMENU_UUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GROUP_HEAD_UUIDColumn {
                get {
                    return this.columnGROUP_HEAD_UUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IS_DEFAULT_PAGEColumn {
                get {
                    return this.columnIS_DEFAULT_PAGE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public group_appmenu_vRow this[int index] {
                get {
                    return ((group_appmenu_vRow)(this.Rows[index]));
                }
            }
            
            public event group_appmenu_vRowChangeEventHandler group_appmenu_vRowChanging;
            
            public event group_appmenu_vRowChangeEventHandler group_appmenu_vRowChanged;
            
            public event group_appmenu_vRowChangeEventHandler group_appmenu_vRowDeleting;
            
            public event group_appmenu_vRowChangeEventHandler group_appmenu_vRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addgroup_appmenu_vRow(group_appmenu_vRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public group_appmenu_vRow Addgroup_appmenu_vRow(string UUID, string IS_ACTIVE, System.DateTime CREATE_DATE, string CREATE_USER, System.DateTime UPDATE_DATE, string UPDATE_USER, APPMENURow parentAPPMENURowByAPPMENU_group_appmenu_v, GROUP_HEADRow parentGROUP_HEADRowByGROUP_HEAD_group_appmenu_v, string IS_DEFAULT_PAGE) {
                group_appmenu_vRow rowgroup_appmenu_vRow = ((group_appmenu_vRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        UUID,
                        IS_ACTIVE,
                        CREATE_DATE,
                        CREATE_USER,
                        UPDATE_DATE,
                        UPDATE_USER,
                        null,
                        null,
                        IS_DEFAULT_PAGE};
                if ((parentAPPMENURowByAPPMENU_group_appmenu_v != null)) {
                    columnValuesArray[6] = parentAPPMENURowByAPPMENU_group_appmenu_v[0];
                }
                if ((parentGROUP_HEADRowByGROUP_HEAD_group_appmenu_v != null)) {
                    columnValuesArray[7] = parentGROUP_HEADRowByGROUP_HEAD_group_appmenu_v[0];
                }
                rowgroup_appmenu_vRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowgroup_appmenu_vRow);
                return rowgroup_appmenu_vRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public group_appmenu_vRow FindByUUID(string UUID) {
                return ((group_appmenu_vRow)(this.Rows.Find(new object[] {
                            UUID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                group_appmenu_vDataTable cln = ((group_appmenu_vDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new group_appmenu_vDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnUUID = base.Columns["UUID"];
                this.columnIS_ACTIVE = base.Columns["IS_ACTIVE"];
                this.columnCREATE_DATE = base.Columns["CREATE_DATE"];
                this.columnCREATE_USER = base.Columns["CREATE_USER"];
                this.columnUPDATE_DATE = base.Columns["UPDATE_DATE"];
                this.columnUPDATE_USER = base.Columns["UPDATE_USER"];
                this.columnAPPMENU_UUID = base.Columns["APPMENU_UUID"];
                this.columnGROUP_HEAD_UUID = base.Columns["GROUP_HEAD_UUID"];
                this.columnIS_DEFAULT_PAGE = base.Columns["IS_DEFAULT_PAGE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnUUID = new global::System.Data.DataColumn("UUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUUID);
                this.columnIS_ACTIVE = new global::System.Data.DataColumn("IS_ACTIVE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIS_ACTIVE);
                this.columnCREATE_DATE = new global::System.Data.DataColumn("CREATE_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATE_DATE);
                this.columnCREATE_USER = new global::System.Data.DataColumn("CREATE_USER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATE_USER);
                this.columnUPDATE_DATE = new global::System.Data.DataColumn("UPDATE_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUPDATE_DATE);
                this.columnUPDATE_USER = new global::System.Data.DataColumn("UPDATE_USER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUPDATE_USER);
                this.columnAPPMENU_UUID = new global::System.Data.DataColumn("APPMENU_UUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAPPMENU_UUID);
                this.columnGROUP_HEAD_UUID = new global::System.Data.DataColumn("GROUP_HEAD_UUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGROUP_HEAD_UUID);
                this.columnIS_DEFAULT_PAGE = new global::System.Data.DataColumn("IS_DEFAULT_PAGE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIS_DEFAULT_PAGE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnUUID}, true));
                this.columnUUID.AllowDBNull = false;
                this.columnUUID.Unique = true;
                this.columnUUID.MaxLength = 36;
                this.columnIS_ACTIVE.AllowDBNull = false;
                this.columnIS_ACTIVE.MaxLength = 1;
                this.columnCREATE_DATE.AllowDBNull = false;
                this.columnCREATE_USER.AllowDBNull = false;
                this.columnCREATE_USER.MaxLength = 36;
                this.columnUPDATE_USER.MaxLength = 36;
                this.columnAPPMENU_UUID.AllowDBNull = false;
                this.columnAPPMENU_UUID.MaxLength = 36;
                this.columnGROUP_HEAD_UUID.AllowDBNull = false;
                this.columnGROUP_HEAD_UUID.MaxLength = 36;
                this.columnIS_DEFAULT_PAGE.AllowDBNull = false;
                this.columnIS_DEFAULT_PAGE.MaxLength = 1;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public group_appmenu_vRow Newgroup_appmenu_vRow() {
                return ((group_appmenu_vRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new group_appmenu_vRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(group_appmenu_vRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.group_appmenu_vRowChanged != null)) {
                    this.group_appmenu_vRowChanged(this, new group_appmenu_vRowChangeEvent(((group_appmenu_vRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.group_appmenu_vRowChanging != null)) {
                    this.group_appmenu_vRowChanging(this, new group_appmenu_vRowChangeEvent(((group_appmenu_vRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.group_appmenu_vRowDeleted != null)) {
                    this.group_appmenu_vRowDeleted(this, new group_appmenu_vRowChangeEvent(((group_appmenu_vRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.group_appmenu_vRowDeleting != null)) {
                    this.group_appmenu_vRowDeleting(this, new group_appmenu_vRowChangeEvent(((group_appmenu_vRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removegroup_appmenu_vRow(group_appmenu_vRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Basic ds = new Basic();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "group_appmenu_vDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class authority_menu_vDataTable : global::System.Data.TypedTableBase<authority_menu_vRow> {
            
            private global::System.Data.DataColumn columnis_user_default_page;
            
            private global::System.Data.DataColumn columnUUID;
            
            private global::System.Data.DataColumn columnIS_ACTIVE;
            
            private global::System.Data.DataColumn columnCREATE_DATE;
            
            private global::System.Data.DataColumn columnCREATE_USER;
            
            private global::System.Data.DataColumn columnUPDATE_DATE;
            
            private global::System.Data.DataColumn columnUPDATE_USER;
            
            private global::System.Data.DataColumn columnNAME_ZH_TW;
            
            private global::System.Data.DataColumn columnNAME_ZH_CN;
            
            private global::System.Data.DataColumn columnNAME_EN_US;
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnAPPMENU_UUID;
            
            private global::System.Data.DataColumn columnHASCHILD;
            
            private global::System.Data.DataColumn columnAPPLICATION_HEAD_UUID;
            
            private global::System.Data.DataColumn columnORD;
            
            private global::System.Data.DataColumn columnPARAMETER_CLASS;
            
            private global::System.Data.DataColumn columnIMAGE;
            
            private global::System.Data.DataColumn columnSITEMAP_UUID;
            
            private global::System.Data.DataColumn columnACTION_MODE;
            
            private global::System.Data.DataColumn columnIS_DEFAULT_PAGE;
            
            private global::System.Data.DataColumn columnIS_ADMIN;
            
            private global::System.Data.DataColumn columnATTENDANT_UUID;
            
            private global::System.Data.DataColumn columnAPPLICATION_NAME;
            
            private global::System.Data.DataColumn columnurl;
            
            private global::System.Data.DataColumn columnfunc_parameter_class;
            
            private global::System.Data.DataColumn columnp_mode;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public authority_menu_vDataTable() {
                this.TableName = "authority_menu_v";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal authority_menu_vDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected authority_menu_vDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn is_user_default_pageColumn {
                get {
                    return this.columnis_user_default_page;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UUIDColumn {
                get {
                    return this.columnUUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IS_ACTIVEColumn {
                get {
                    return this.columnIS_ACTIVE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATE_DATEColumn {
                get {
                    return this.columnCREATE_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATE_USERColumn {
                get {
                    return this.columnCREATE_USER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UPDATE_DATEColumn {
                get {
                    return this.columnUPDATE_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UPDATE_USERColumn {
                get {
                    return this.columnUPDATE_USER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NAME_ZH_TWColumn {
                get {
                    return this.columnNAME_ZH_TW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NAME_ZH_CNColumn {
                get {
                    return this.columnNAME_ZH_CN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NAME_EN_USColumn {
                get {
                    return this.columnNAME_EN_US;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn APPMENU_UUIDColumn {
                get {
                    return this.columnAPPMENU_UUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HASCHILDColumn {
                get {
                    return this.columnHASCHILD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn APPLICATION_HEAD_UUIDColumn {
                get {
                    return this.columnAPPLICATION_HEAD_UUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ORDColumn {
                get {
                    return this.columnORD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PARAMETER_CLASSColumn {
                get {
                    return this.columnPARAMETER_CLASS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IMAGEColumn {
                get {
                    return this.columnIMAGE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SITEMAP_UUIDColumn {
                get {
                    return this.columnSITEMAP_UUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ACTION_MODEColumn {
                get {
                    return this.columnACTION_MODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IS_DEFAULT_PAGEColumn {
                get {
                    return this.columnIS_DEFAULT_PAGE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IS_ADMINColumn {
                get {
                    return this.columnIS_ADMIN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ATTENDANT_UUIDColumn {
                get {
                    return this.columnATTENDANT_UUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn APPLICATION_NAMEColumn {
                get {
                    return this.columnAPPLICATION_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn urlColumn {
                get {
                    return this.columnurl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn func_parameter_classColumn {
                get {
                    return this.columnfunc_parameter_class;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn p_modeColumn {
                get {
                    return this.columnp_mode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public authority_menu_vRow this[int index] {
                get {
                    return ((authority_menu_vRow)(this.Rows[index]));
                }
            }
            
            public event authority_menu_vRowChangeEventHandler authority_menu_vRowChanging;
            
            public event authority_menu_vRowChangeEventHandler authority_menu_vRowChanged;
            
            public event authority_menu_vRowChangeEventHandler authority_menu_vRowDeleting;
            
            public event authority_menu_vRowChangeEventHandler authority_menu_vRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addauthority_menu_vRow(authority_menu_vRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public authority_menu_vRow Addauthority_menu_vRow(
                        string is_user_default_page, 
                        string UUID, 
                        string IS_ACTIVE, 
                        System.DateTime CREATE_DATE, 
                        string CREATE_USER, 
                        System.DateTime UPDATE_DATE, 
                        string UPDATE_USER, 
                        string NAME_ZH_TW, 
                        string NAME_ZH_CN, 
                        string NAME_EN_US, 
                        string ID, 
                        string APPMENU_UUID, 
                        string HASCHILD, 
                        string APPLICATION_HEAD_UUID, 
                        decimal ORD, 
                        string PARAMETER_CLASS, 
                        string IMAGE, 
                        string SITEMAP_UUID, 
                        string ACTION_MODE, 
                        string IS_DEFAULT_PAGE, 
                        string IS_ADMIN, 
                        string ATTENDANT_UUID, 
                        string APPLICATION_NAME, 
                        string url, 
                        string func_parameter_class, 
                        string p_mode) {
                authority_menu_vRow rowauthority_menu_vRow = ((authority_menu_vRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        is_user_default_page,
                        UUID,
                        IS_ACTIVE,
                        CREATE_DATE,
                        CREATE_USER,
                        UPDATE_DATE,
                        UPDATE_USER,
                        NAME_ZH_TW,
                        NAME_ZH_CN,
                        NAME_EN_US,
                        ID,
                        APPMENU_UUID,
                        HASCHILD,
                        APPLICATION_HEAD_UUID,
                        ORD,
                        PARAMETER_CLASS,
                        IMAGE,
                        SITEMAP_UUID,
                        ACTION_MODE,
                        IS_DEFAULT_PAGE,
                        IS_ADMIN,
                        ATTENDANT_UUID,
                        APPLICATION_NAME,
                        url,
                        func_parameter_class,
                        p_mode};
                rowauthority_menu_vRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowauthority_menu_vRow);
                return rowauthority_menu_vRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public authority_menu_vRow FindByUUID(string UUID) {
                return ((authority_menu_vRow)(this.Rows.Find(new object[] {
                            UUID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                authority_menu_vDataTable cln = ((authority_menu_vDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new authority_menu_vDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnis_user_default_page = base.Columns["is_user_default_page"];
                this.columnUUID = base.Columns["UUID"];
                this.columnIS_ACTIVE = base.Columns["IS_ACTIVE"];
                this.columnCREATE_DATE = base.Columns["CREATE_DATE"];
                this.columnCREATE_USER = base.Columns["CREATE_USER"];
                this.columnUPDATE_DATE = base.Columns["UPDATE_DATE"];
                this.columnUPDATE_USER = base.Columns["UPDATE_USER"];
                this.columnNAME_ZH_TW = base.Columns["NAME_ZH_TW"];
                this.columnNAME_ZH_CN = base.Columns["NAME_ZH_CN"];
                this.columnNAME_EN_US = base.Columns["NAME_EN_US"];
                this.columnID = base.Columns["ID"];
                this.columnAPPMENU_UUID = base.Columns["APPMENU_UUID"];
                this.columnHASCHILD = base.Columns["HASCHILD"];
                this.columnAPPLICATION_HEAD_UUID = base.Columns["APPLICATION_HEAD_UUID"];
                this.columnORD = base.Columns["ORD"];
                this.columnPARAMETER_CLASS = base.Columns["PARAMETER_CLASS"];
                this.columnIMAGE = base.Columns["IMAGE"];
                this.columnSITEMAP_UUID = base.Columns["SITEMAP_UUID"];
                this.columnACTION_MODE = base.Columns["ACTION_MODE"];
                this.columnIS_DEFAULT_PAGE = base.Columns["IS_DEFAULT_PAGE"];
                this.columnIS_ADMIN = base.Columns["IS_ADMIN"];
                this.columnATTENDANT_UUID = base.Columns["ATTENDANT_UUID"];
                this.columnAPPLICATION_NAME = base.Columns["APPLICATION_NAME"];
                this.columnurl = base.Columns["url"];
                this.columnfunc_parameter_class = base.Columns["func_parameter_class"];
                this.columnp_mode = base.Columns["p_mode"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnis_user_default_page = new global::System.Data.DataColumn("is_user_default_page", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnis_user_default_page);
                this.columnUUID = new global::System.Data.DataColumn("UUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUUID);
                this.columnIS_ACTIVE = new global::System.Data.DataColumn("IS_ACTIVE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIS_ACTIVE);
                this.columnCREATE_DATE = new global::System.Data.DataColumn("CREATE_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATE_DATE);
                this.columnCREATE_USER = new global::System.Data.DataColumn("CREATE_USER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATE_USER);
                this.columnUPDATE_DATE = new global::System.Data.DataColumn("UPDATE_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUPDATE_DATE);
                this.columnUPDATE_USER = new global::System.Data.DataColumn("UPDATE_USER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUPDATE_USER);
                this.columnNAME_ZH_TW = new global::System.Data.DataColumn("NAME_ZH_TW", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME_ZH_TW);
                this.columnNAME_ZH_CN = new global::System.Data.DataColumn("NAME_ZH_CN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME_ZH_CN);
                this.columnNAME_EN_US = new global::System.Data.DataColumn("NAME_EN_US", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME_EN_US);
                this.columnID = new global::System.Data.DataColumn("ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnAPPMENU_UUID = new global::System.Data.DataColumn("APPMENU_UUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAPPMENU_UUID);
                this.columnHASCHILD = new global::System.Data.DataColumn("HASCHILD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHASCHILD);
                this.columnAPPLICATION_HEAD_UUID = new global::System.Data.DataColumn("APPLICATION_HEAD_UUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAPPLICATION_HEAD_UUID);
                this.columnORD = new global::System.Data.DataColumn("ORD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnORD);
                this.columnPARAMETER_CLASS = new global::System.Data.DataColumn("PARAMETER_CLASS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPARAMETER_CLASS);
                this.columnIMAGE = new global::System.Data.DataColumn("IMAGE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIMAGE);
                this.columnSITEMAP_UUID = new global::System.Data.DataColumn("SITEMAP_UUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSITEMAP_UUID);
                this.columnACTION_MODE = new global::System.Data.DataColumn("ACTION_MODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACTION_MODE);
                this.columnIS_DEFAULT_PAGE = new global::System.Data.DataColumn("IS_DEFAULT_PAGE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIS_DEFAULT_PAGE);
                this.columnIS_ADMIN = new global::System.Data.DataColumn("IS_ADMIN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIS_ADMIN);
                this.columnATTENDANT_UUID = new global::System.Data.DataColumn("ATTENDANT_UUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATTENDANT_UUID);
                this.columnAPPLICATION_NAME = new global::System.Data.DataColumn("APPLICATION_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAPPLICATION_NAME);
                this.columnurl = new global::System.Data.DataColumn("url", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnurl);
                this.columnfunc_parameter_class = new global::System.Data.DataColumn("func_parameter_class", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfunc_parameter_class);
                this.columnp_mode = new global::System.Data.DataColumn("p_mode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnp_mode);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnUUID}, true));
                this.columnis_user_default_page.ReadOnly = true;
                this.columnis_user_default_page.MaxLength = 1;
                this.columnUUID.AllowDBNull = false;
                this.columnUUID.Unique = true;
                this.columnUUID.MaxLength = 36;
                this.columnIS_ACTIVE.AllowDBNull = false;
                this.columnIS_ACTIVE.MaxLength = 1;
                this.columnCREATE_DATE.AllowDBNull = false;
                this.columnCREATE_USER.AllowDBNull = false;
                this.columnCREATE_USER.MaxLength = 36;
                this.columnUPDATE_USER.MaxLength = 36;
                this.columnNAME_ZH_TW.AllowDBNull = false;
                this.columnNAME_ZH_TW.MaxLength = 200;
                this.columnNAME_ZH_CN.AllowDBNull = false;
                this.columnNAME_ZH_CN.MaxLength = 200;
                this.columnNAME_EN_US.AllowDBNull = false;
                this.columnNAME_EN_US.MaxLength = 200;
                this.columnID.AllowDBNull = false;
                this.columnID.MaxLength = 100;
                this.columnAPPMENU_UUID.MaxLength = 36;
                this.columnHASCHILD.AllowDBNull = false;
                this.columnHASCHILD.MaxLength = 1;
                this.columnAPPLICATION_HEAD_UUID.AllowDBNull = false;
                this.columnAPPLICATION_HEAD_UUID.MaxLength = 36;
                this.columnORD.AllowDBNull = false;
                this.columnPARAMETER_CLASS.MaxLength = 200;
                this.columnIMAGE.MaxLength = 100;
                this.columnSITEMAP_UUID.MaxLength = 36;
                this.columnACTION_MODE.MaxLength = 50;
                this.columnIS_DEFAULT_PAGE.MaxLength = 1;
                this.columnIS_ADMIN.MaxLength = 1;
                this.columnATTENDANT_UUID.MaxLength = 36;
                this.columnAPPLICATION_NAME.MaxLength = 200;
                this.columnurl.MaxLength = 200;
                this.columnfunc_parameter_class.MaxLength = 200;
                this.columnp_mode.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public authority_menu_vRow Newauthority_menu_vRow() {
                return ((authority_menu_vRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new authority_menu_vRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(authority_menu_vRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.authority_menu_vRowChanged != null)) {
                    this.authority_menu_vRowChanged(this, new authority_menu_vRowChangeEvent(((authority_menu_vRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.authority_menu_vRowChanging != null)) {
                    this.authority_menu_vRowChanging(this, new authority_menu_vRowChangeEvent(((authority_menu_vRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.authority_menu_vRowDeleted != null)) {
                    this.authority_menu_vRowDeleted(this, new authority_menu_vRowChangeEvent(((authority_menu_vRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.authority_menu_vRowDeleting != null)) {
                    this.authority_menu_vRowDeleting(this, new authority_menu_vRowChangeEvent(((authority_menu_vRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeauthority_menu_vRow(authority_menu_vRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Basic ds = new Basic();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "authority_menu_vDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ERROR_LOGDataTable : global::System.Data.TypedTableBase<ERROR_LOGRow> {
            
            private global::System.Data.DataColumn columnuuid;
            
            private global::System.Data.DataColumn columncreate_date;
            
            private global::System.Data.DataColumn columnupdate_date;
            
            private global::System.Data.DataColumn columnis_active;
            
            private global::System.Data.DataColumn columnerror_code;
            
            private global::System.Data.DataColumn columnerror_time;
            
            private global::System.Data.DataColumn columnerror_message;
            
            private global::System.Data.DataColumn columnapplication_name;
            
            private global::System.Data.DataColumn columnattendant_uuid;
            
            private global::System.Data.DataColumn columnerror_type;
            
            private global::System.Data.DataColumn columnis_read;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ERROR_LOGDataTable() {
                this.TableName = "ERROR_LOG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ERROR_LOGDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ERROR_LOGDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn uuidColumn {
                get {
                    return this.columnuuid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn create_dateColumn {
                get {
                    return this.columncreate_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn update_dateColumn {
                get {
                    return this.columnupdate_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn is_activeColumn {
                get {
                    return this.columnis_active;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn error_codeColumn {
                get {
                    return this.columnerror_code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn error_timeColumn {
                get {
                    return this.columnerror_time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn error_messageColumn {
                get {
                    return this.columnerror_message;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn application_nameColumn {
                get {
                    return this.columnapplication_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn attendant_uuidColumn {
                get {
                    return this.columnattendant_uuid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn error_typeColumn {
                get {
                    return this.columnerror_type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn is_readColumn {
                get {
                    return this.columnis_read;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ERROR_LOGRow this[int index] {
                get {
                    return ((ERROR_LOGRow)(this.Rows[index]));
                }
            }
            
            public event ERROR_LOGRowChangeEventHandler ERROR_LOGRowChanging;
            
            public event ERROR_LOGRowChangeEventHandler ERROR_LOGRowChanged;
            
            public event ERROR_LOGRowChangeEventHandler ERROR_LOGRowDeleting;
            
            public event ERROR_LOGRowChangeEventHandler ERROR_LOGRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddERROR_LOGRow(ERROR_LOGRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ERROR_LOGRow AddERROR_LOGRow(string uuid, System.DateTime create_date, System.DateTime update_date, string is_active, string error_code, string error_time, string error_message, string application_name, ATTENDANTRow parentATTENDANTRowByATTENDANT_ERROR_LOG, string error_type, string is_read) {
                ERROR_LOGRow rowERROR_LOGRow = ((ERROR_LOGRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        uuid,
                        create_date,
                        update_date,
                        is_active,
                        error_code,
                        error_time,
                        error_message,
                        application_name,
                        null,
                        error_type,
                        is_read};
                if ((parentATTENDANTRowByATTENDANT_ERROR_LOG != null)) {
                    columnValuesArray[8] = parentATTENDANTRowByATTENDANT_ERROR_LOG[0];
                }
                rowERROR_LOGRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowERROR_LOGRow);
                return rowERROR_LOGRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ERROR_LOGRow FindByuuid(string uuid) {
                return ((ERROR_LOGRow)(this.Rows.Find(new object[] {
                            uuid})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ERROR_LOGDataTable cln = ((ERROR_LOGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ERROR_LOGDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnuuid = base.Columns["uuid"];
                this.columncreate_date = base.Columns["create_date"];
                this.columnupdate_date = base.Columns["update_date"];
                this.columnis_active = base.Columns["is_active"];
                this.columnerror_code = base.Columns["error_code"];
                this.columnerror_time = base.Columns["error_time"];
                this.columnerror_message = base.Columns["error_message"];
                this.columnapplication_name = base.Columns["application_name"];
                this.columnattendant_uuid = base.Columns["attendant_uuid"];
                this.columnerror_type = base.Columns["error_type"];
                this.columnis_read = base.Columns["is_read"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnuuid = new global::System.Data.DataColumn("uuid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuuid);
                this.columncreate_date = new global::System.Data.DataColumn("create_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreate_date);
                this.columnupdate_date = new global::System.Data.DataColumn("update_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnupdate_date);
                this.columnis_active = new global::System.Data.DataColumn("is_active", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnis_active);
                this.columnerror_code = new global::System.Data.DataColumn("error_code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnerror_code);
                this.columnerror_time = new global::System.Data.DataColumn("error_time", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnerror_time);
                this.columnerror_message = new global::System.Data.DataColumn("error_message", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnerror_message);
                this.columnapplication_name = new global::System.Data.DataColumn("application_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnapplication_name);
                this.columnattendant_uuid = new global::System.Data.DataColumn("attendant_uuid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnattendant_uuid);
                this.columnerror_type = new global::System.Data.DataColumn("error_type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnerror_type);
                this.columnis_read = new global::System.Data.DataColumn("is_read", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnis_read);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnuuid}, true));
                this.columnuuid.AllowDBNull = false;
                this.columnuuid.Unique = true;
                this.columnuuid.MaxLength = 32;
                this.columnis_active.AllowDBNull = false;
                this.columnis_active.MaxLength = 1;
                this.columnerror_code.AllowDBNull = false;
                this.columnerror_code.MaxLength = 32;
                this.columnerror_time.AllowDBNull = false;
                this.columnerror_time.MaxLength = 32;
                this.columnerror_message.AllowDBNull = false;
                this.columnerror_message.MaxLength = 2147483647;
                this.columnapplication_name.MaxLength = 32;
                this.columnattendant_uuid.MaxLength = 32;
                this.columnerror_type.MaxLength = 32;
                this.columnis_read.MaxLength = 1;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ERROR_LOGRow NewERROR_LOGRow() {
                return ((ERROR_LOGRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ERROR_LOGRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ERROR_LOGRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ERROR_LOGRowChanged != null)) {
                    this.ERROR_LOGRowChanged(this, new ERROR_LOGRowChangeEvent(((ERROR_LOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ERROR_LOGRowChanging != null)) {
                    this.ERROR_LOGRowChanging(this, new ERROR_LOGRowChangeEvent(((ERROR_LOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ERROR_LOGRowDeleted != null)) {
                    this.ERROR_LOGRowDeleted(this, new ERROR_LOGRowChangeEvent(((ERROR_LOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ERROR_LOGRowDeleting != null)) {
                    this.ERROR_LOGRowDeleting(this, new ERROR_LOGRowChangeEvent(((ERROR_LOGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveERROR_LOGRow(ERROR_LOGRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Basic ds = new Basic();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ERROR_LOGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class error_log_vDataTable : global::System.Data.TypedTableBase<error_log_vRow> {
            
            private global::System.Data.DataColumn columnuuid;
            
            private global::System.Data.DataColumn columncreate_date;
            
            private global::System.Data.DataColumn columnupdate_date;
            
            private global::System.Data.DataColumn columnis_active;
            
            private global::System.Data.DataColumn columnerror_code;
            
            private global::System.Data.DataColumn columnerror_time;
            
            private global::System.Data.DataColumn columnerror_message;
            
            private global::System.Data.DataColumn columnapplication_name;
            
            private global::System.Data.DataColumn columnattendant_uuid;
            
            private global::System.Data.DataColumn columnerror_type;
            
            private global::System.Data.DataColumn columnis_read;
            
            private global::System.Data.DataColumn columnc_name;
            
            private global::System.Data.DataColumn columne_name;
            
            private global::System.Data.DataColumn columnid;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public error_log_vDataTable() {
                this.TableName = "error_log_v";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal error_log_vDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected error_log_vDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn uuidColumn {
                get {
                    return this.columnuuid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn create_dateColumn {
                get {
                    return this.columncreate_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn update_dateColumn {
                get {
                    return this.columnupdate_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn is_activeColumn {
                get {
                    return this.columnis_active;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn error_codeColumn {
                get {
                    return this.columnerror_code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn error_timeColumn {
                get {
                    return this.columnerror_time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn error_messageColumn {
                get {
                    return this.columnerror_message;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn application_nameColumn {
                get {
                    return this.columnapplication_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn attendant_uuidColumn {
                get {
                    return this.columnattendant_uuid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn error_typeColumn {
                get {
                    return this.columnerror_type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn is_readColumn {
                get {
                    return this.columnis_read;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn c_nameColumn {
                get {
                    return this.columnc_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn e_nameColumn {
                get {
                    return this.columne_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public error_log_vRow this[int index] {
                get {
                    return ((error_log_vRow)(this.Rows[index]));
                }
            }
            
            public event error_log_vRowChangeEventHandler error_log_vRowChanging;
            
            public event error_log_vRowChangeEventHandler error_log_vRowChanged;
            
            public event error_log_vRowChangeEventHandler error_log_vRowDeleting;
            
            public event error_log_vRowChangeEventHandler error_log_vRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Adderror_log_vRow(error_log_vRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public error_log_vRow Adderror_log_vRow(string uuid, System.DateTime create_date, System.DateTime update_date, string is_active, string error_code, string error_time, string error_message, string application_name, ATTENDANTRow parentATTENDANTRowByATTENDANT_error_log_v, string error_type, string is_read, string c_name, string e_name, string id) {
                error_log_vRow rowerror_log_vRow = ((error_log_vRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        uuid,
                        create_date,
                        update_date,
                        is_active,
                        error_code,
                        error_time,
                        error_message,
                        application_name,
                        null,
                        error_type,
                        is_read,
                        c_name,
                        e_name,
                        id};
                if ((parentATTENDANTRowByATTENDANT_error_log_v != null)) {
                    columnValuesArray[8] = parentATTENDANTRowByATTENDANT_error_log_v[0];
                }
                rowerror_log_vRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowerror_log_vRow);
                return rowerror_log_vRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public error_log_vRow FindByuuid(string uuid) {
                return ((error_log_vRow)(this.Rows.Find(new object[] {
                            uuid})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                error_log_vDataTable cln = ((error_log_vDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new error_log_vDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnuuid = base.Columns["uuid"];
                this.columncreate_date = base.Columns["create_date"];
                this.columnupdate_date = base.Columns["update_date"];
                this.columnis_active = base.Columns["is_active"];
                this.columnerror_code = base.Columns["error_code"];
                this.columnerror_time = base.Columns["error_time"];
                this.columnerror_message = base.Columns["error_message"];
                this.columnapplication_name = base.Columns["application_name"];
                this.columnattendant_uuid = base.Columns["attendant_uuid"];
                this.columnerror_type = base.Columns["error_type"];
                this.columnis_read = base.Columns["is_read"];
                this.columnc_name = base.Columns["c_name"];
                this.columne_name = base.Columns["e_name"];
                this.columnid = base.Columns["id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnuuid = new global::System.Data.DataColumn("uuid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuuid);
                this.columncreate_date = new global::System.Data.DataColumn("create_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreate_date);
                this.columnupdate_date = new global::System.Data.DataColumn("update_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnupdate_date);
                this.columnis_active = new global::System.Data.DataColumn("is_active", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnis_active);
                this.columnerror_code = new global::System.Data.DataColumn("error_code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnerror_code);
                this.columnerror_time = new global::System.Data.DataColumn("error_time", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnerror_time);
                this.columnerror_message = new global::System.Data.DataColumn("error_message", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnerror_message);
                this.columnapplication_name = new global::System.Data.DataColumn("application_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnapplication_name);
                this.columnattendant_uuid = new global::System.Data.DataColumn("attendant_uuid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnattendant_uuid);
                this.columnerror_type = new global::System.Data.DataColumn("error_type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnerror_type);
                this.columnis_read = new global::System.Data.DataColumn("is_read", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnis_read);
                this.columnc_name = new global::System.Data.DataColumn("c_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnc_name);
                this.columne_name = new global::System.Data.DataColumn("e_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columne_name);
                this.columnid = new global::System.Data.DataColumn("id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnuuid}, true));
                this.columnuuid.AllowDBNull = false;
                this.columnuuid.Unique = true;
                this.columnuuid.MaxLength = 32;
                this.columnis_active.AllowDBNull = false;
                this.columnis_active.MaxLength = 1;
                this.columnerror_code.AllowDBNull = false;
                this.columnerror_code.MaxLength = 32;
                this.columnerror_time.AllowDBNull = false;
                this.columnerror_time.MaxLength = 32;
                this.columnerror_message.AllowDBNull = false;
                this.columnerror_message.MaxLength = 2147483647;
                this.columnapplication_name.MaxLength = 32;
                this.columnattendant_uuid.MaxLength = 32;
                this.columnerror_type.MaxLength = 32;
                this.columnis_read.MaxLength = 1;
                this.columnc_name.MaxLength = 100;
                this.columne_name.MaxLength = 100;
                this.columnid.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public error_log_vRow Newerror_log_vRow() {
                return ((error_log_vRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new error_log_vRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(error_log_vRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.error_log_vRowChanged != null)) {
                    this.error_log_vRowChanged(this, new error_log_vRowChangeEvent(((error_log_vRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.error_log_vRowChanging != null)) {
                    this.error_log_vRowChanging(this, new error_log_vRowChangeEvent(((error_log_vRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.error_log_vRowDeleted != null)) {
                    this.error_log_vRowDeleted(this, new error_log_vRowChangeEvent(((error_log_vRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.error_log_vRowDeleting != null)) {
                    this.error_log_vRowDeleting(this, new error_log_vRowChangeEvent(((error_log_vRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeerror_log_vRow(error_log_vRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                Basic ds = new Basic();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "error_log_vDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class APPLICATION_HEADRow : global::System.Data.DataRow {
            
            private APPLICATION_HEADDataTable tableAPPLICATION_HEAD;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal APPLICATION_HEADRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAPPLICATION_HEAD = ((APPLICATION_HEADDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string uuid {
                get {
                    return ((string)(this[this.tableAPPLICATION_HEAD.uuidColumn]));
                }
                set {
                    this[this.tableAPPLICATION_HEAD.uuidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime create_date {
                get {
                    return ((global::System.DateTime)(this[this.tableAPPLICATION_HEAD.create_dateColumn]));
                }
                set {
                    this[this.tableAPPLICATION_HEAD.create_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime update_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableAPPLICATION_HEAD.update_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'APPLICATION_HEAD\' 中資料行 \'update_date\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableAPPLICATION_HEAD.update_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string is_active {
                get {
                    return ((string)(this[this.tableAPPLICATION_HEAD.is_activeColumn]));
                }
                set {
                    this[this.tableAPPLICATION_HEAD.is_activeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name {
                get {
                    return ((string)(this[this.tableAPPLICATION_HEAD.nameColumn]));
                }
                set {
                    this[this.tableAPPLICATION_HEAD.nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string description {
                get {
                    try {
                        return ((string)(this[this.tableAPPLICATION_HEAD.descriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'APPLICATION_HEAD\' 中資料行 \'description\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableAPPLICATION_HEAD.descriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string id {
                get {
                    return ((string)(this[this.tableAPPLICATION_HEAD.idColumn]));
                }
                set {
                    this[this.tableAPPLICATION_HEAD.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string create_user {
                get {
                    try {
                        return ((string)(this[this.tableAPPLICATION_HEAD.create_userColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'APPLICATION_HEAD\' 中資料行 \'create_user\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableAPPLICATION_HEAD.create_userColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string update_user {
                get {
                    try {
                        return ((string)(this[this.tableAPPLICATION_HEAD.update_userColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'APPLICATION_HEAD\' 中資料行 \'update_user\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableAPPLICATION_HEAD.update_userColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string web_site {
                get {
                    try {
                        return ((string)(this[this.tableAPPLICATION_HEAD.web_siteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'APPLICATION_HEAD\' 中資料行 \'web_site\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableAPPLICATION_HEAD.web_siteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isupdate_dateNull() {
                return this.IsNull(this.tableAPPLICATION_HEAD.update_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setupdate_dateNull() {
                this[this.tableAPPLICATION_HEAD.update_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdescriptionNull() {
                return this.IsNull(this.tableAPPLICATION_HEAD.descriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdescriptionNull() {
                this[this.tableAPPLICATION_HEAD.descriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscreate_userNull() {
                return this.IsNull(this.tableAPPLICATION_HEAD.create_userColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcreate_userNull() {
                this[this.tableAPPLICATION_HEAD.create_userColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isupdate_userNull() {
                return this.IsNull(this.tableAPPLICATION_HEAD.update_userColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setupdate_userNull() {
                this[this.tableAPPLICATION_HEAD.update_userColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isweb_siteNull() {
                return this.IsNull(this.tableAPPLICATION_HEAD.web_siteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setweb_siteNull() {
                this[this.tableAPPLICATION_HEAD.web_siteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SITEMAPRow[] GetSITEMAPRows() {
                if ((this.Table.ChildRelations["SITEMAP_APPLICATION_HEAD_FK1"] == null)) {
                    return new SITEMAPRow[0];
                }
                else {
                    return ((SITEMAPRow[])(base.GetChildRows(this.Table.ChildRelations["SITEMAP_APPLICATION_HEAD_FK1"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APPMENURow[] GetAPPMENURows() {
                if ((this.Table.ChildRelations["APPMENU_APPLICATION_HEAD_FK1"] == null)) {
                    return new APPMENURow[0];
                }
                else {
                    return ((APPMENURow[])(base.GetChildRows(this.Table.ChildRelations["APPMENU_APPLICATION_HEAD_FK1"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APPPAGERow[] GetAPPPAGERows() {
                if ((this.Table.ChildRelations["APPPAGE_APPLICATION_HEAD_FK1"] == null)) {
                    return new APPPAGERow[0];
                }
                else {
                    return ((APPPAGERow[])(base.GetChildRows(this.Table.ChildRelations["APPPAGE_APPLICATION_HEAD_FK1"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GROUP_HEADRow[] GetGROUP_HEADRows() {
                if ((this.Table.ChildRelations["GROUP_HEAD_APPLICATION_HE_FK1"] == null)) {
                    return new GROUP_HEADRow[0];
                }
                else {
                    return ((GROUP_HEADRow[])(base.GetChildRows(this.Table.ChildRelations["GROUP_HEAD_APPLICATION_HE_FK1"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public group_head_vRow[] Getgroup_head_vRows() {
                if ((this.Table.ChildRelations["APPLICATION_HEAD_group_head_v"] == null)) {
                    return new group_head_vRow[0];
                }
                else {
                    return ((group_head_vRow[])(base.GetChildRows(this.Table.ChildRelations["APPLICATION_HEAD_group_head_v"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public appmenu_apppage_vRow[] Getappmenu_apppage_vRows() {
                if ((this.Table.ChildRelations["APPLICATION_HEAD_appmenu_apppage_v"] == null)) {
                    return new appmenu_apppage_vRow[0];
                }
                else {
                    return ((appmenu_apppage_vRow[])(base.GetChildRows(this.Table.ChildRelations["APPLICATION_HEAD_appmenu_apppage_v"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SITEMAPRow : global::System.Data.DataRow {
            
            private SITEMAPDataTable tableSITEMAP;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SITEMAPRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSITEMAP = ((SITEMAPDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string uuid {
                get {
                    return ((string)(this[this.tableSITEMAP.uuidColumn]));
                }
                set {
                    this[this.tableSITEMAP.uuidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string is_active {
                get {
                    return ((string)(this[this.tableSITEMAP.is_activeColumn]));
                }
                set {
                    this[this.tableSITEMAP.is_activeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime create_date {
                get {
                    return ((global::System.DateTime)(this[this.tableSITEMAP.create_dateColumn]));
                }
                set {
                    this[this.tableSITEMAP.create_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string create_user {
                get {
                    return ((string)(this[this.tableSITEMAP.create_userColumn]));
                }
                set {
                    this[this.tableSITEMAP.create_userColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime update_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSITEMAP.update_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SITEMAP\' 中資料行 \'update_date\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSITEMAP.update_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string update_user {
                get {
                    try {
                        return ((string)(this[this.tableSITEMAP.update_userColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SITEMAP\' 中資料行 \'update_user\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSITEMAP.update_userColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sitemap_uuid {
                get {
                    try {
                        return ((string)(this[this.tableSITEMAP.sitemap_uuidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SITEMAP\' 中資料行 \'sitemap_uuid\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSITEMAP.sitemap_uuidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string apppage_uuid {
                get {
                    return ((string)(this[this.tableSITEMAP.apppage_uuidColumn]));
                }
                set {
                    this[this.tableSITEMAP.apppage_uuidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string root_uuid {
                get {
                    return ((string)(this[this.tableSITEMAP.root_uuidColumn]));
                }
                set {
                    this[this.tableSITEMAP.root_uuidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string haschild {
                get {
                    return ((string)(this[this.tableSITEMAP.haschildColumn]));
                }
                set {
                    this[this.tableSITEMAP.haschildColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string application_head_uuid {
                get {
                    try {
                        return ((string)(this[this.tableSITEMAP.application_head_uuidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SITEMAP\' 中資料行 \'application_head_uuid\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSITEMAP.application_head_uuidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APPLICATION_HEADRow APPLICATION_HEADRow {
                get {
                    return ((APPLICATION_HEADRow)(this.GetParentRow(this.Table.ParentRelations["SITEMAP_APPLICATION_HEAD_FK1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["SITEMAP_APPLICATION_HEAD_FK1"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APPPAGERow APPPAGERow {
                get {
                    return ((APPPAGERow)(this.GetParentRow(this.Table.ParentRelations["SITEMAP_APPPAGE_FK1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["SITEMAP_APPPAGE_FK1"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SITEMAPRow SITEMAPRowParentBySITEMAP_SITEMAP_FK1 {
                get {
                    return ((SITEMAPRow)(this.GetParentRow(this.Table.ParentRelations["SITEMAP_SITEMAP_FK1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["SITEMAP_SITEMAP_FK1"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SITEMAPRow SITEMAPRowParentBySITEMAP_SITEMAP_FK2 {
                get {
                    return ((SITEMAPRow)(this.GetParentRow(this.Table.ParentRelations["SITEMAP_SITEMAP_FK2"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["SITEMAP_SITEMAP_FK2"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isupdate_dateNull() {
                return this.IsNull(this.tableSITEMAP.update_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setupdate_dateNull() {
                this[this.tableSITEMAP.update_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isupdate_userNull() {
                return this.IsNull(this.tableSITEMAP.update_userColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setupdate_userNull() {
                this[this.tableSITEMAP.update_userColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issitemap_uuidNull() {
                return this.IsNull(this.tableSITEMAP.sitemap_uuidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsitemap_uuidNull() {
                this[this.tableSITEMAP.sitemap_uuidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isapplication_head_uuidNull() {
                return this.IsNull(this.tableSITEMAP.application_head_uuidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setapplication_head_uuidNull() {
                this[this.tableSITEMAP.application_head_uuidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SITEMAPRow[] GetSITEMAPRowsBySITEMAP_SITEMAP_FK1() {
                if ((this.Table.ChildRelations["SITEMAP_SITEMAP_FK1"] == null)) {
                    return new SITEMAPRow[0];
                }
                else {
                    return ((SITEMAPRow[])(base.GetChildRows(this.Table.ChildRelations["SITEMAP_SITEMAP_FK1"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SITEMAPRow[] GetSITEMAPRowsBySITEMAP_SITEMAP_FK2() {
                if ((this.Table.ChildRelations["SITEMAP_SITEMAP_FK2"] == null)) {
                    return new SITEMAPRow[0];
                }
                else {
                    return ((SITEMAPRow[])(base.GetChildRows(this.Table.ChildRelations["SITEMAP_SITEMAP_FK2"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APPMENURow[] GetAPPMENURows() {
                if ((this.Table.ChildRelations["APPMENU_SITEMAP_FK1"] == null)) {
                    return new APPMENURow[0];
                }
                else {
                    return ((APPMENURow[])(base.GetChildRows(this.Table.ChildRelations["APPMENU_SITEMAP_FK1"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public appmenu_apppage_vRow[] Getappmenu_apppage_vRows() {
                if ((this.Table.ChildRelations["SITEMAP_appmenu_apppage_v"] == null)) {
                    return new appmenu_apppage_vRow[0];
                }
                else {
                    return ((appmenu_apppage_vRow[])(base.GetChildRows(this.Table.ChildRelations["SITEMAP_appmenu_apppage_v"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class APPMENURow : global::System.Data.DataRow {
            
            private APPMENUDataTable tableAPPMENU;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal APPMENURow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAPPMENU = ((APPMENUDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string uuid {
                get {
                    return ((string)(this[this.tableAPPMENU.uuidColumn]));
                }
                set {
                    this[this.tableAPPMENU.uuidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string is_active {
                get {
                    return ((string)(this[this.tableAPPMENU.is_activeColumn]));
                }
                set {
                    this[this.tableAPPMENU.is_activeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime create_date {
                get {
                    return ((global::System.DateTime)(this[this.tableAPPMENU.create_dateColumn]));
                }
                set {
                    this[this.tableAPPMENU.create_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string create_user {
                get {
                    return ((string)(this[this.tableAPPMENU.create_userColumn]));
                }
                set {
                    this[this.tableAPPMENU.create_userColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime update_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableAPPMENU.update_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'APPMENU\' 中資料行 \'update_date\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableAPPMENU.update_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string update_user {
                get {
                    try {
                        return ((string)(this[this.tableAPPMENU.update_userColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'APPMENU\' 中資料行 \'update_user\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableAPPMENU.update_userColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name_zh_tw {
                get {
                    return ((string)(this[this.tableAPPMENU.name_zh_twColumn]));
                }
                set {
                    this[this.tableAPPMENU.name_zh_twColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name_zh_cn {
                get {
                    return ((string)(this[this.tableAPPMENU.name_zh_cnColumn]));
                }
                set {
                    this[this.tableAPPMENU.name_zh_cnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name_en_us {
                get {
                    return ((string)(this[this.tableAPPMENU.name_en_usColumn]));
                }
                set {
                    this[this.tableAPPMENU.name_en_usColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string id {
                get {
                    return ((string)(this[this.tableAPPMENU.idColumn]));
                }
                set {
                    this[this.tableAPPMENU.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string appmenu_uuid {
                get {
                    try {
                        return ((string)(this[this.tableAPPMENU.appmenu_uuidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'APPMENU\' 中資料行 \'appmenu_uuid\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableAPPMENU.appmenu_uuidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string haschild {
                get {
                    return ((string)(this[this.tableAPPMENU.haschildColumn]));
                }
                set {
                    this[this.tableAPPMENU.haschildColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string application_head_uuid {
                get {
                    return ((string)(this[this.tableAPPMENU.application_head_uuidColumn]));
                }
                set {
                    this[this.tableAPPMENU.application_head_uuidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ord {
                get {
                    return ((decimal)(this[this.tableAPPMENU.ordColumn]));
                }
                set {
                    this[this.tableAPPMENU.ordColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string parameter_class {
                get {
                    try {
                        return ((string)(this[this.tableAPPMENU.parameter_classColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'APPMENU\' 中資料行 \'parameter_class\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableAPPMENU.parameter_classColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string image {
                get {
                    try {
                        return ((string)(this[this.tableAPPMENU.imageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'APPMENU\' 中資料行 \'image\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableAPPMENU.imageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sitemap_uuid {
                get {
                    try {
                        return ((string)(this[this.tableAPPMENU.sitemap_uuidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'APPMENU\' 中資料行 \'sitemap_uuid\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableAPPMENU.sitemap_uuidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string action_mode {
                get {
                    try {
                        return ((string)(this[this.tableAPPMENU.action_modeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'APPMENU\' 中資料行 \'action_mode\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableAPPMENU.action_modeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string is_default_page {
                get {
                    try {
                        return ((string)(this[this.tableAPPMENU.is_default_pageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'APPMENU\' 中資料行 \'is_default_page\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableAPPMENU.is_default_pageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string is_admin {
                get {
                    try {
                        return ((string)(this[this.tableAPPMENU.is_adminColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'APPMENU\' 中資料行 \'is_admin\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableAPPMENU.is_adminColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APPLICATION_HEADRow APPLICATION_HEADRow {
                get {
                    return ((APPLICATION_HEADRow)(this.GetParentRow(this.Table.ParentRelations["APPMENU_APPLICATION_HEAD_FK1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["APPMENU_APPLICATION_HEAD_FK1"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APPMENURow APPMENURowParent {
                get {
                    return ((APPMENURow)(this.GetParentRow(this.Table.ParentRelations["APPMENU_APPMENU_FK1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["APPMENU_APPMENU_FK1"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SITEMAPRow SITEMAPRow {
                get {
                    return ((SITEMAPRow)(this.GetParentRow(this.Table.ParentRelations["APPMENU_SITEMAP_FK1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["APPMENU_SITEMAP_FK1"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isupdate_dateNull() {
                return this.IsNull(this.tableAPPMENU.update_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setupdate_dateNull() {
                this[this.tableAPPMENU.update_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isupdate_userNull() {
                return this.IsNull(this.tableAPPMENU.update_userColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setupdate_userNull() {
                this[this.tableAPPMENU.update_userColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isappmenu_uuidNull() {
                return this.IsNull(this.tableAPPMENU.appmenu_uuidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setappmenu_uuidNull() {
                this[this.tableAPPMENU.appmenu_uuidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isparameter_classNull() {
                return this.IsNull(this.tableAPPMENU.parameter_classColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setparameter_classNull() {
                this[this.tableAPPMENU.parameter_classColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsimageNull() {
                return this.IsNull(this.tableAPPMENU.imageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetimageNull() {
                this[this.tableAPPMENU.imageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issitemap_uuidNull() {
                return this.IsNull(this.tableAPPMENU.sitemap_uuidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsitemap_uuidNull() {
                this[this.tableAPPMENU.sitemap_uuidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isaction_modeNull() {
                return this.IsNull(this.tableAPPMENU.action_modeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setaction_modeNull() {
                this[this.tableAPPMENU.action_modeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isis_default_pageNull() {
                return this.IsNull(this.tableAPPMENU.is_default_pageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setis_default_pageNull() {
                this[this.tableAPPMENU.is_default_pageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isis_adminNull() {
                return this.IsNull(this.tableAPPMENU.is_adminColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setis_adminNull() {
                this[this.tableAPPMENU.is_adminColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APPMENURow[] GetAPPMENURows() {
                if ((this.Table.ChildRelations["APPMENU_APPMENU_FK1"] == null)) {
                    return new APPMENURow[0];
                }
                else {
                    return ((APPMENURow[])(base.GetChildRows(this.Table.ChildRelations["APPMENU_APPMENU_FK1"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GROUP_APPMENURow[] GetGROUP_APPMENURows() {
                if ((this.Table.ChildRelations["GROUP_APPMENU_APPMENU_FK1"] == null)) {
                    return new GROUP_APPMENURow[0];
                }
                else {
                    return ((GROUP_APPMENURow[])(base.GetChildRows(this.Table.ChildRelations["GROUP_APPMENU_APPMENU_FK1"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public appmenu_apppage_vRow[] Getappmenu_apppage_vRows() {
                if ((this.Table.ChildRelations["APPMENU_appmenu_apppage_v"] == null)) {
                    return new appmenu_apppage_vRow[0];
                }
                else {
                    return ((appmenu_apppage_vRow[])(base.GetChildRows(this.Table.ChildRelations["APPMENU_appmenu_apppage_v"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public group_appmenu_vRow[] Getgroup_appmenu_vRows() {
                if ((this.Table.ChildRelations["APPMENU_group_appmenu_v"] == null)) {
                    return new group_appmenu_vRow[0];
                }
                else {
                    return ((group_appmenu_vRow[])(base.GetChildRows(this.Table.ChildRelations["APPMENU_group_appmenu_v"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class APPPAGERow : global::System.Data.DataRow {
            
            private APPPAGEDataTable tableAPPPAGE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal APPPAGERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAPPPAGE = ((APPPAGEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string uuid {
                get {
                    return ((string)(this[this.tableAPPPAGE.uuidColumn]));
                }
                set {
                    this[this.tableAPPPAGE.uuidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string is_active {
                get {
                    return ((string)(this[this.tableAPPPAGE.is_activeColumn]));
                }
                set {
                    this[this.tableAPPPAGE.is_activeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime create_date {
                get {
                    return ((global::System.DateTime)(this[this.tableAPPPAGE.create_dateColumn]));
                }
                set {
                    this[this.tableAPPPAGE.create_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string create_user {
                get {
                    return ((string)(this[this.tableAPPPAGE.create_userColumn]));
                }
                set {
                    this[this.tableAPPPAGE.create_userColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime update_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableAPPPAGE.update_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'APPPAGE\' 中資料行 \'update_date\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableAPPPAGE.update_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string update_user {
                get {
                    try {
                        return ((string)(this[this.tableAPPPAGE.update_userColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'APPPAGE\' 中資料行 \'update_user\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableAPPPAGE.update_userColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string id {
                get {
                    return ((string)(this[this.tableAPPPAGE.idColumn]));
                }
                set {
                    this[this.tableAPPPAGE.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name {
                get {
                    return ((string)(this[this.tableAPPPAGE.nameColumn]));
                }
                set {
                    this[this.tableAPPPAGE.nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string description {
                get {
                    try {
                        return ((string)(this[this.tableAPPPAGE.descriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'APPPAGE\' 中資料行 \'description\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableAPPPAGE.descriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string url {
                get {
                    return ((string)(this[this.tableAPPPAGE.urlColumn]));
                }
                set {
                    this[this.tableAPPPAGE.urlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string parameter_class {
                get {
                    try {
                        return ((string)(this[this.tableAPPPAGE.parameter_classColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'APPPAGE\' 中資料行 \'parameter_class\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableAPPPAGE.parameter_classColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string application_head_uuid {
                get {
                    return ((string)(this[this.tableAPPPAGE.application_head_uuidColumn]));
                }
                set {
                    this[this.tableAPPPAGE.application_head_uuidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string p_mode {
                get {
                    try {
                        return ((string)(this[this.tableAPPPAGE.p_modeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'APPPAGE\' 中資料行 \'p_mode\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableAPPPAGE.p_modeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APPLICATION_HEADRow APPLICATION_HEADRow {
                get {
                    return ((APPLICATION_HEADRow)(this.GetParentRow(this.Table.ParentRelations["APPPAGE_APPLICATION_HEAD_FK1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["APPPAGE_APPLICATION_HEAD_FK1"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isupdate_dateNull() {
                return this.IsNull(this.tableAPPPAGE.update_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setupdate_dateNull() {
                this[this.tableAPPPAGE.update_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isupdate_userNull() {
                return this.IsNull(this.tableAPPPAGE.update_userColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setupdate_userNull() {
                this[this.tableAPPPAGE.update_userColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdescriptionNull() {
                return this.IsNull(this.tableAPPPAGE.descriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdescriptionNull() {
                this[this.tableAPPPAGE.descriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isparameter_classNull() {
                return this.IsNull(this.tableAPPPAGE.parameter_classColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setparameter_classNull() {
                this[this.tableAPPPAGE.parameter_classColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isp_modeNull() {
                return this.IsNull(this.tableAPPPAGE.p_modeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setp_modeNull() {
                this[this.tableAPPPAGE.p_modeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SITEMAPRow[] GetSITEMAPRows() {
                if ((this.Table.ChildRelations["SITEMAP_APPPAGE_FK1"] == null)) {
                    return new SITEMAPRow[0];
                }
                else {
                    return ((SITEMAPRow[])(base.GetChildRows(this.Table.ChildRelations["SITEMAP_APPPAGE_FK1"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ATTENDANTRow : global::System.Data.DataRow {
            
            private ATTENDANTDataTable tableATTENDANT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ATTENDANTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableATTENDANT = ((ATTENDANTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string uuid {
                get {
                    return ((string)(this[this.tableATTENDANT.uuidColumn]));
                }
                set {
                    this[this.tableATTENDANT.uuidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime create_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableATTENDANT.create_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'ATTENDANT\' 中資料行 \'create_date\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableATTENDANT.create_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime update_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableATTENDANT.update_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'ATTENDANT\' 中資料行 \'update_date\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableATTENDANT.update_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string is_active {
                get {
                    return ((string)(this[this.tableATTENDANT.is_activeColumn]));
                }
                set {
                    this[this.tableATTENDANT.is_activeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string company_uuid {
                get {
                    return ((string)(this[this.tableATTENDANT.company_uuidColumn]));
                }
                set {
                    this[this.tableATTENDANT.company_uuidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string account {
                get {
                    return ((string)(this[this.tableATTENDANT.accountColumn]));
                }
                set {
                    this[this.tableATTENDANT.accountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string c_name {
                get {
                    try {
                        return ((string)(this[this.tableATTENDANT.c_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'ATTENDANT\' 中資料行 \'c_name\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableATTENDANT.c_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string e_name {
                get {
                    try {
                        return ((string)(this[this.tableATTENDANT.e_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'ATTENDANT\' 中資料行 \'e_name\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableATTENDANT.e_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string email {
                get {
                    return ((string)(this[this.tableATTENDANT.emailColumn]));
                }
                set {
                    this[this.tableATTENDANT.emailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string password {
                get {
                    try {
                        return ((string)(this[this.tableATTENDANT.passwordColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'ATTENDANT\' 中資料行 \'password\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableATTENDANT.passwordColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string is_supper {
                get {
                    return ((string)(this[this.tableATTENDANT.is_supperColumn]));
                }
                set {
                    this[this.tableATTENDANT.is_supperColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string is_admin {
                get {
                    return ((string)(this[this.tableATTENDANT.is_adminColumn]));
                }
                set {
                    this[this.tableATTENDANT.is_adminColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string code_page {
                get {
                    return ((string)(this[this.tableATTENDANT.code_pageColumn]));
                }
                set {
                    this[this.tableATTENDANT.code_pageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string department_uuid {
                get {
                    try {
                        return ((string)(this[this.tableATTENDANT.department_uuidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'ATTENDANT\' 中資料行 \'department_uuid\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableATTENDANT.department_uuidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string phone {
                get {
                    try {
                        return ((string)(this[this.tableATTENDANT.phoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'ATTENDANT\' 中資料行 \'phone\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableATTENDANT.phoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string site_uuid {
                get {
                    try {
                        return ((string)(this[this.tableATTENDANT.site_uuidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'ATTENDANT\' 中資料行 \'site_uuid\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableATTENDANT.site_uuidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string gender {
                get {
                    try {
                        return ((string)(this[this.tableATTENDANT.genderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'ATTENDANT\' 中資料行 \'gender\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableATTENDANT.genderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime birthday {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableATTENDANT.birthdayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'ATTENDANT\' 中資料行 \'birthday\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableATTENDANT.birthdayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime hire_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableATTENDANT.hire_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'ATTENDANT\' 中資料行 \'hire_date\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableATTENDANT.hire_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime quit_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableATTENDANT.quit_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'ATTENDANT\' 中資料行 \'quit_date\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableATTENDANT.quit_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string is_manager {
                get {
                    try {
                        return ((string)(this[this.tableATTENDANT.is_managerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'ATTENDANT\' 中資料行 \'is_manager\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableATTENDANT.is_managerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string is_direct {
                get {
                    try {
                        return ((string)(this[this.tableATTENDANT.is_directColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'ATTENDANT\' 中資料行 \'is_direct\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableATTENDANT.is_directColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string grade {
                get {
                    try {
                        return ((string)(this[this.tableATTENDANT.gradeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'ATTENDANT\' 中資料行 \'grade\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableATTENDANT.gradeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string id {
                get {
                    try {
                        return ((string)(this[this.tableATTENDANT.idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'ATTENDANT\' 中資料行 \'id\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableATTENDANT.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string src_uuid {
                get {
                    try {
                        return ((string)(this[this.tableATTENDANT.src_uuidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'ATTENDANT\' 中資料行 \'src_uuid\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableATTENDANT.src_uuidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string is_default_pass {
                get {
                    try {
                        return ((string)(this[this.tableATTENDANT.is_default_passColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'ATTENDANT\' 中資料行 \'is_default_pass\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableATTENDANT.is_default_passColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public COMPANYRow COMPANYRow {
                get {
                    return ((COMPANYRow)(this.GetParentRow(this.Table.ParentRelations["ATTENDANT_FK1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["ATTENDANT_FK1"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DEPARTMENTRow DEPARTMENTRow {
                get {
                    return ((DEPARTMENTRow)(this.GetParentRow(this.Table.ParentRelations["ATTENDANT_FK2"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["ATTENDANT_FK2"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SITERow SITERow {
                get {
                    return ((SITERow)(this.GetParentRow(this.Table.ParentRelations["ATTENDANT_FK3"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["ATTENDANT_FK3"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscreate_dateNull() {
                return this.IsNull(this.tableATTENDANT.create_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcreate_dateNull() {
                this[this.tableATTENDANT.create_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isupdate_dateNull() {
                return this.IsNull(this.tableATTENDANT.update_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setupdate_dateNull() {
                this[this.tableATTENDANT.update_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isc_nameNull() {
                return this.IsNull(this.tableATTENDANT.c_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setc_nameNull() {
                this[this.tableATTENDANT.c_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ise_nameNull() {
                return this.IsNull(this.tableATTENDANT.e_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Sete_nameNull() {
                this[this.tableATTENDANT.e_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspasswordNull() {
                return this.IsNull(this.tableATTENDANT.passwordColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpasswordNull() {
                this[this.tableATTENDANT.passwordColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdepartment_uuidNull() {
                return this.IsNull(this.tableATTENDANT.department_uuidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdepartment_uuidNull() {
                this[this.tableATTENDANT.department_uuidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsphoneNull() {
                return this.IsNull(this.tableATTENDANT.phoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetphoneNull() {
                this[this.tableATTENDANT.phoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issite_uuidNull() {
                return this.IsNull(this.tableATTENDANT.site_uuidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsite_uuidNull() {
                this[this.tableATTENDANT.site_uuidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgenderNull() {
                return this.IsNull(this.tableATTENDANT.genderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgenderNull() {
                this[this.tableATTENDANT.genderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsbirthdayNull() {
                return this.IsNull(this.tableATTENDANT.birthdayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetbirthdayNull() {
                this[this.tableATTENDANT.birthdayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ishire_dateNull() {
                return this.IsNull(this.tableATTENDANT.hire_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Sethire_dateNull() {
                this[this.tableATTENDANT.hire_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isquit_dateNull() {
                return this.IsNull(this.tableATTENDANT.quit_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setquit_dateNull() {
                this[this.tableATTENDANT.quit_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isis_managerNull() {
                return this.IsNull(this.tableATTENDANT.is_managerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setis_managerNull() {
                this[this.tableATTENDANT.is_managerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isis_directNull() {
                return this.IsNull(this.tableATTENDANT.is_directColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setis_directNull() {
                this[this.tableATTENDANT.is_directColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgradeNull() {
                return this.IsNull(this.tableATTENDANT.gradeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgradeNull() {
                this[this.tableATTENDANT.gradeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidNull() {
                return this.IsNull(this.tableATTENDANT.idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidNull() {
                this[this.tableATTENDANT.idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issrc_uuidNull() {
                return this.IsNull(this.tableATTENDANT.src_uuidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsrc_uuidNull() {
                this[this.tableATTENDANT.src_uuidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isis_default_passNull() {
                return this.IsNull(this.tableATTENDANT.is_default_passColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setis_default_passNull() {
                this[this.tableATTENDANT.is_default_passColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DEPARTMENTRow[] GetDEPARTMENTRows() {
                if ((this.Table.ChildRelations["DEPARTMENT_FK3"] == null)) {
                    return new DEPARTMENTRow[0];
                }
                else {
                    return ((DEPARTMENTRow[])(base.GetChildRows(this.Table.ChildRelations["DEPARTMENT_FK3"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GROUP_ATTENDANTRow[] GetGROUP_ATTENDANTRows() {
                if ((this.Table.ChildRelations["GROUP_ATTENDANT_ATTENDANT_FK1"] == null)) {
                    return new GROUP_ATTENDANTRow[0];
                }
                else {
                    return ((GROUP_ATTENDANTRow[])(base.GetChildRows(this.Table.ChildRelations["GROUP_ATTENDANT_ATTENDANT_FK1"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public group_attendant_vRow[] Getgroup_attendant_vRows() {
                if ((this.Table.ChildRelations["ATTENDANT_group_attendant_v"] == null)) {
                    return new group_attendant_vRow[0];
                }
                else {
                    return ((group_attendant_vRow[])(base.GetChildRows(this.Table.ChildRelations["ATTENDANT_group_attendant_v"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public error_log_vRow[] Geterror_log_vRows() {
                if ((this.Table.ChildRelations["ATTENDANT_error_log_v"] == null)) {
                    return new error_log_vRow[0];
                }
                else {
                    return ((error_log_vRow[])(base.GetChildRows(this.Table.ChildRelations["ATTENDANT_error_log_v"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ERROR_LOGRow[] GetERROR_LOGRows() {
                if ((this.Table.ChildRelations["ATTENDANT_ERROR_LOG"] == null)) {
                    return new ERROR_LOGRow[0];
                }
                else {
                    return ((ERROR_LOGRow[])(base.GetChildRows(this.Table.ChildRelations["ATTENDANT_ERROR_LOG"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class COMPANYRow : global::System.Data.DataRow {
            
            private COMPANYDataTable tableCOMPANY;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal COMPANYRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCOMPANY = ((COMPANYDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string uuid {
                get {
                    return ((string)(this[this.tableCOMPANY.uuidColumn]));
                }
                set {
                    this[this.tableCOMPANY.uuidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime create_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCOMPANY.create_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'COMPANY\' 中資料行 \'create_date\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCOMPANY.create_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime update_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCOMPANY.update_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'COMPANY\' 中資料行 \'update_date\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCOMPANY.update_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string is_active {
                get {
                    return ((string)(this[this.tableCOMPANY.is_activeColumn]));
                }
                set {
                    this[this.tableCOMPANY.is_activeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string _class {
                get {
                    return ((string)(this[this.tableCOMPANY.classColumn]));
                }
                set {
                    this[this.tableCOMPANY.classColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string id {
                get {
                    return ((string)(this[this.tableCOMPANY.idColumn]));
                }
                set {
                    this[this.tableCOMPANY.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string c_name {
                get {
                    try {
                        return ((string)(this[this.tableCOMPANY.c_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'COMPANY\' 中資料行 \'c_name\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCOMPANY.c_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string e_name {
                get {
                    try {
                        return ((string)(this[this.tableCOMPANY.e_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'COMPANY\' 中資料行 \'e_name\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCOMPANY.e_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string voucher_point_uuid {
                get {
                    try {
                        return ((string)(this[this.tableCOMPANY.voucher_point_uuidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'COMPANY\' 中資料行 \'voucher_point_uuid\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCOMPANY.voucher_point_uuidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal week_shift {
                get {
                    try {
                        return ((decimal)(this[this.tableCOMPANY.week_shiftColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'COMPANY\' 中資料行 \'week_shift\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCOMPANY.week_shiftColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ou_sync_type {
                get {
                    try {
                        return ((string)(this[this.tableCOMPANY.ou_sync_typeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'COMPANY\' 中資料行 \'ou_sync_type\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCOMPANY.ou_sync_typeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name_zh_cn {
                get {
                    try {
                        return ((string)(this[this.tableCOMPANY.name_zh_cnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'COMPANY\' 中資料行 \'name_zh_cn\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCOMPANY.name_zh_cnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string concurrent_user {
                get {
                    try {
                        return ((string)(this[this.tableCOMPANY.concurrent_userColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'COMPANY\' 中資料行 \'concurrent_user\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCOMPANY.concurrent_userColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime expired_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCOMPANY.expired_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'COMPANY\' 中資料行 \'expired_date\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCOMPANY.expired_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sales_attendant_uuid {
                get {
                    try {
                        return ((string)(this[this.tableCOMPANY.sales_attendant_uuidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'COMPANY\' 中資料行 \'sales_attendant_uuid\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCOMPANY.sales_attendant_uuidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscreate_dateNull() {
                return this.IsNull(this.tableCOMPANY.create_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcreate_dateNull() {
                this[this.tableCOMPANY.create_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isupdate_dateNull() {
                return this.IsNull(this.tableCOMPANY.update_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setupdate_dateNull() {
                this[this.tableCOMPANY.update_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isc_nameNull() {
                return this.IsNull(this.tableCOMPANY.c_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setc_nameNull() {
                this[this.tableCOMPANY.c_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ise_nameNull() {
                return this.IsNull(this.tableCOMPANY.e_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Sete_nameNull() {
                this[this.tableCOMPANY.e_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isvoucher_point_uuidNull() {
                return this.IsNull(this.tableCOMPANY.voucher_point_uuidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setvoucher_point_uuidNull() {
                this[this.tableCOMPANY.voucher_point_uuidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isweek_shiftNull() {
                return this.IsNull(this.tableCOMPANY.week_shiftColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setweek_shiftNull() {
                this[this.tableCOMPANY.week_shiftColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isou_sync_typeNull() {
                return this.IsNull(this.tableCOMPANY.ou_sync_typeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setou_sync_typeNull() {
                this[this.tableCOMPANY.ou_sync_typeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isname_zh_cnNull() {
                return this.IsNull(this.tableCOMPANY.name_zh_cnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setname_zh_cnNull() {
                this[this.tableCOMPANY.name_zh_cnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isconcurrent_userNull() {
                return this.IsNull(this.tableCOMPANY.concurrent_userColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setconcurrent_userNull() {
                this[this.tableCOMPANY.concurrent_userColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isexpired_dateNull() {
                return this.IsNull(this.tableCOMPANY.expired_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setexpired_dateNull() {
                this[this.tableCOMPANY.expired_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issales_attendant_uuidNull() {
                return this.IsNull(this.tableCOMPANY.sales_attendant_uuidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsales_attendant_uuidNull() {
                this[this.tableCOMPANY.sales_attendant_uuidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ATTENDANTRow[] GetATTENDANTRows() {
                if ((this.Table.ChildRelations["ATTENDANT_FK1"] == null)) {
                    return new ATTENDANTRow[0];
                }
                else {
                    return ((ATTENDANTRow[])(base.GetChildRows(this.Table.ChildRelations["ATTENDANT_FK1"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DEPARTMENTRow[] GetDEPARTMENTRows() {
                if ((this.Table.ChildRelations["DEPARTMENT_FK1"] == null)) {
                    return new DEPARTMENTRow[0];
                }
                else {
                    return ((DEPARTMENTRow[])(base.GetChildRows(this.Table.ChildRelations["DEPARTMENT_FK1"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GROUP_HEADRow[] GetGROUP_HEADRows() {
                if ((this.Table.ChildRelations["GROUP_HEAD_COMPANY_FK1"] == null)) {
                    return new GROUP_HEADRow[0];
                }
                else {
                    return ((GROUP_HEADRow[])(base.GetChildRows(this.Table.ChildRelations["GROUP_HEAD_COMPANY_FK1"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SITERow[] GetSITERows() {
                if ((this.Table.ChildRelations["SITE_FK1"] == null)) {
                    return new SITERow[0];
                }
                else {
                    return ((SITERow[])(base.GetChildRows(this.Table.ChildRelations["SITE_FK1"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public group_attendant_vRow[] Getgroup_attendant_vRows() {
                if ((this.Table.ChildRelations["COMPANY_group_attendant_v"] == null)) {
                    return new group_attendant_vRow[0];
                }
                else {
                    return ((group_attendant_vRow[])(base.GetChildRows(this.Table.ChildRelations["COMPANY_group_attendant_v"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public group_head_vRow[] Getgroup_head_vRows() {
                if ((this.Table.ChildRelations["COMPANY_group_head_v"] == null)) {
                    return new group_head_vRow[0];
                }
                else {
                    return ((group_head_vRow[])(base.GetChildRows(this.Table.ChildRelations["COMPANY_group_head_v"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DEPARTMENTRow : global::System.Data.DataRow {
            
            private DEPARTMENTDataTable tableDEPARTMENT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DEPARTMENTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDEPARTMENT = ((DEPARTMENTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string uuid {
                get {
                    return ((string)(this[this.tableDEPARTMENT.uuidColumn]));
                }
                set {
                    this[this.tableDEPARTMENT.uuidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime create_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDEPARTMENT.create_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'DEPARTMENT\' 中資料行 \'create_date\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDEPARTMENT.create_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime update_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDEPARTMENT.update_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'DEPARTMENT\' 中資料行 \'update_date\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDEPARTMENT.update_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string is_active {
                get {
                    return ((string)(this[this.tableDEPARTMENT.is_activeColumn]));
                }
                set {
                    this[this.tableDEPARTMENT.is_activeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string company_uuid {
                get {
                    return ((string)(this[this.tableDEPARTMENT.company_uuidColumn]));
                }
                set {
                    this[this.tableDEPARTMENT.company_uuidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string id {
                get {
                    return ((string)(this[this.tableDEPARTMENT.idColumn]));
                }
                set {
                    this[this.tableDEPARTMENT.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string c_name {
                get {
                    try {
                        return ((string)(this[this.tableDEPARTMENT.c_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'DEPARTMENT\' 中資料行 \'c_name\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDEPARTMENT.c_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string e_name {
                get {
                    try {
                        return ((string)(this[this.tableDEPARTMENT.e_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'DEPARTMENT\' 中資料行 \'e_name\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDEPARTMENT.e_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string parent_department_uuid {
                get {
                    try {
                        return ((string)(this[this.tableDEPARTMENT.parent_department_uuidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'DEPARTMENT\' 中資料行 \'parent_department_uuid\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDEPARTMENT.parent_department_uuidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string manager_uuid {
                get {
                    try {
                        return ((string)(this[this.tableDEPARTMENT.manager_uuidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'DEPARTMENT\' 中資料行 \'manager_uuid\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDEPARTMENT.manager_uuidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string parent_department_id {
                get {
                    try {
                        return ((string)(this[this.tableDEPARTMENT.parent_department_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'DEPARTMENT\' 中資料行 \'parent_department_id\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDEPARTMENT.parent_department_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string manager_id {
                get {
                    try {
                        return ((string)(this[this.tableDEPARTMENT.manager_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'DEPARTMENT\' 中資料行 \'manager_id\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDEPARTMENT.manager_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string parent_department_uuid_list {
                get {
                    try {
                        return ((string)(this[this.tableDEPARTMENT.parent_department_uuid_listColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'DEPARTMENT\' 中資料行 \'parent_department_uuid_list\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDEPARTMENT.parent_department_uuid_listColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string s_name {
                get {
                    try {
                        return ((string)(this[this.tableDEPARTMENT.s_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'DEPARTMENT\' 中資料行 \'s_name\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDEPARTMENT.s_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string cost_center {
                get {
                    try {
                        return ((string)(this[this.tableDEPARTMENT.cost_centerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'DEPARTMENT\' 中資料行 \'cost_center\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDEPARTMENT.cost_centerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string src_uuid {
                get {
                    try {
                        return ((string)(this[this.tableDEPARTMENT.src_uuidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'DEPARTMENT\' 中資料行 \'src_uuid\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDEPARTMENT.src_uuidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string full_department_name {
                get {
                    try {
                        return ((string)(this[this.tableDEPARTMENT.full_department_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'DEPARTMENT\' 中資料行 \'full_department_name\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDEPARTMENT.full_department_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public COMPANYRow COMPANYRow {
                get {
                    return ((COMPANYRow)(this.GetParentRow(this.Table.ParentRelations["DEPARTMENT_FK1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["DEPARTMENT_FK1"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DEPARTMENTRow DEPARTMENTRowParent {
                get {
                    return ((DEPARTMENTRow)(this.GetParentRow(this.Table.ParentRelations["DEPARTMENT_FK2"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["DEPARTMENT_FK2"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ATTENDANTRow ATTENDANTRow {
                get {
                    return ((ATTENDANTRow)(this.GetParentRow(this.Table.ParentRelations["DEPARTMENT_FK3"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["DEPARTMENT_FK3"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscreate_dateNull() {
                return this.IsNull(this.tableDEPARTMENT.create_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcreate_dateNull() {
                this[this.tableDEPARTMENT.create_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isupdate_dateNull() {
                return this.IsNull(this.tableDEPARTMENT.update_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setupdate_dateNull() {
                this[this.tableDEPARTMENT.update_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isc_nameNull() {
                return this.IsNull(this.tableDEPARTMENT.c_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setc_nameNull() {
                this[this.tableDEPARTMENT.c_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ise_nameNull() {
                return this.IsNull(this.tableDEPARTMENT.e_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Sete_nameNull() {
                this[this.tableDEPARTMENT.e_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isparent_department_uuidNull() {
                return this.IsNull(this.tableDEPARTMENT.parent_department_uuidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setparent_department_uuidNull() {
                this[this.tableDEPARTMENT.parent_department_uuidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismanager_uuidNull() {
                return this.IsNull(this.tableDEPARTMENT.manager_uuidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmanager_uuidNull() {
                this[this.tableDEPARTMENT.manager_uuidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isparent_department_idNull() {
                return this.IsNull(this.tableDEPARTMENT.parent_department_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setparent_department_idNull() {
                this[this.tableDEPARTMENT.parent_department_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismanager_idNull() {
                return this.IsNull(this.tableDEPARTMENT.manager_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmanager_idNull() {
                this[this.tableDEPARTMENT.manager_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isparent_department_uuid_listNull() {
                return this.IsNull(this.tableDEPARTMENT.parent_department_uuid_listColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setparent_department_uuid_listNull() {
                this[this.tableDEPARTMENT.parent_department_uuid_listColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iss_nameNull() {
                return this.IsNull(this.tableDEPARTMENT.s_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Sets_nameNull() {
                this[this.tableDEPARTMENT.s_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscost_centerNull() {
                return this.IsNull(this.tableDEPARTMENT.cost_centerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcost_centerNull() {
                this[this.tableDEPARTMENT.cost_centerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issrc_uuidNull() {
                return this.IsNull(this.tableDEPARTMENT.src_uuidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsrc_uuidNull() {
                this[this.tableDEPARTMENT.src_uuidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isfull_department_nameNull() {
                return this.IsNull(this.tableDEPARTMENT.full_department_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setfull_department_nameNull() {
                this[this.tableDEPARTMENT.full_department_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ATTENDANTRow[] GetATTENDANTRows() {
                if ((this.Table.ChildRelations["ATTENDANT_FK2"] == null)) {
                    return new ATTENDANTRow[0];
                }
                else {
                    return ((ATTENDANTRow[])(base.GetChildRows(this.Table.ChildRelations["ATTENDANT_FK2"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DEPARTMENTRow[] GetDEPARTMENTRows() {
                if ((this.Table.ChildRelations["DEPARTMENT_FK2"] == null)) {
                    return new DEPARTMENTRow[0];
                }
                else {
                    return ((DEPARTMENTRow[])(base.GetChildRows(this.Table.ChildRelations["DEPARTMENT_FK2"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GROUP_APPMENURow : global::System.Data.DataRow {
            
            private GROUP_APPMENUDataTable tableGROUP_APPMENU;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GROUP_APPMENURow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGROUP_APPMENU = ((GROUP_APPMENUDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string uuid {
                get {
                    return ((string)(this[this.tableGROUP_APPMENU.uuidColumn]));
                }
                set {
                    this[this.tableGROUP_APPMENU.uuidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string is_active {
                get {
                    return ((string)(this[this.tableGROUP_APPMENU.is_activeColumn]));
                }
                set {
                    this[this.tableGROUP_APPMENU.is_activeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime create_date {
                get {
                    return ((global::System.DateTime)(this[this.tableGROUP_APPMENU.create_dateColumn]));
                }
                set {
                    this[this.tableGROUP_APPMENU.create_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string create_user {
                get {
                    return ((string)(this[this.tableGROUP_APPMENU.create_userColumn]));
                }
                set {
                    this[this.tableGROUP_APPMENU.create_userColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime update_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGROUP_APPMENU.update_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'GROUP_APPMENU\' 中資料行 \'update_date\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGROUP_APPMENU.update_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string update_user {
                get {
                    try {
                        return ((string)(this[this.tableGROUP_APPMENU.update_userColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'GROUP_APPMENU\' 中資料行 \'update_user\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGROUP_APPMENU.update_userColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string appmenu_uuid {
                get {
                    return ((string)(this[this.tableGROUP_APPMENU.appmenu_uuidColumn]));
                }
                set {
                    this[this.tableGROUP_APPMENU.appmenu_uuidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string group_head_uuid {
                get {
                    return ((string)(this[this.tableGROUP_APPMENU.group_head_uuidColumn]));
                }
                set {
                    this[this.tableGROUP_APPMENU.group_head_uuidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string is_default_page {
                get {
                    return ((string)(this[this.tableGROUP_APPMENU.is_default_pageColumn]));
                }
                set {
                    this[this.tableGROUP_APPMENU.is_default_pageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APPMENURow APPMENURow {
                get {
                    return ((APPMENURow)(this.GetParentRow(this.Table.ParentRelations["GROUP_APPMENU_APPMENU_FK1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["GROUP_APPMENU_APPMENU_FK1"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GROUP_HEADRow GROUP_HEADRow {
                get {
                    return ((GROUP_HEADRow)(this.GetParentRow(this.Table.ParentRelations["GROUP_APPMENU_GROUP_HEAD_FK1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["GROUP_APPMENU_GROUP_HEAD_FK1"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isupdate_dateNull() {
                return this.IsNull(this.tableGROUP_APPMENU.update_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setupdate_dateNull() {
                this[this.tableGROUP_APPMENU.update_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isupdate_userNull() {
                return this.IsNull(this.tableGROUP_APPMENU.update_userColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setupdate_userNull() {
                this[this.tableGROUP_APPMENU.update_userColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GROUP_ATTENDANTRow : global::System.Data.DataRow {
            
            private GROUP_ATTENDANTDataTable tableGROUP_ATTENDANT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GROUP_ATTENDANTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGROUP_ATTENDANT = ((GROUP_ATTENDANTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string uuid {
                get {
                    return ((string)(this[this.tableGROUP_ATTENDANT.uuidColumn]));
                }
                set {
                    this[this.tableGROUP_ATTENDANT.uuidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string is_active {
                get {
                    return ((string)(this[this.tableGROUP_ATTENDANT.is_activeColumn]));
                }
                set {
                    this[this.tableGROUP_ATTENDANT.is_activeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime create_date {
                get {
                    return ((global::System.DateTime)(this[this.tableGROUP_ATTENDANT.create_dateColumn]));
                }
                set {
                    this[this.tableGROUP_ATTENDANT.create_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string create_user {
                get {
                    return ((string)(this[this.tableGROUP_ATTENDANT.create_userColumn]));
                }
                set {
                    this[this.tableGROUP_ATTENDANT.create_userColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime update_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGROUP_ATTENDANT.update_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'GROUP_ATTENDANT\' 中資料行 \'update_date\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGROUP_ATTENDANT.update_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string update_user {
                get {
                    try {
                        return ((string)(this[this.tableGROUP_ATTENDANT.update_userColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'GROUP_ATTENDANT\' 中資料行 \'update_user\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGROUP_ATTENDANT.update_userColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string group_head_uuid {
                get {
                    return ((string)(this[this.tableGROUP_ATTENDANT.group_head_uuidColumn]));
                }
                set {
                    this[this.tableGROUP_ATTENDANT.group_head_uuidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string attendant_uuid {
                get {
                    return ((string)(this[this.tableGROUP_ATTENDANT.attendant_uuidColumn]));
                }
                set {
                    this[this.tableGROUP_ATTENDANT.attendant_uuidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ATTENDANTRow ATTENDANTRow {
                get {
                    return ((ATTENDANTRow)(this.GetParentRow(this.Table.ParentRelations["GROUP_ATTENDANT_ATTENDANT_FK1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["GROUP_ATTENDANT_ATTENDANT_FK1"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GROUP_HEADRow GROUP_HEADRow {
                get {
                    return ((GROUP_HEADRow)(this.GetParentRow(this.Table.ParentRelations["GROUP_ATTENDANT_GROUP_HEA_FK1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["GROUP_ATTENDANT_GROUP_HEA_FK1"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isupdate_dateNull() {
                return this.IsNull(this.tableGROUP_ATTENDANT.update_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setupdate_dateNull() {
                this[this.tableGROUP_ATTENDANT.update_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isupdate_userNull() {
                return this.IsNull(this.tableGROUP_ATTENDANT.update_userColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setupdate_userNull() {
                this[this.tableGROUP_ATTENDANT.update_userColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GROUP_HEADRow : global::System.Data.DataRow {
            
            private GROUP_HEADDataTable tableGROUP_HEAD;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GROUP_HEADRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGROUP_HEAD = ((GROUP_HEADDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string uuid {
                get {
                    return ((string)(this[this.tableGROUP_HEAD.uuidColumn]));
                }
                set {
                    this[this.tableGROUP_HEAD.uuidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime create_date {
                get {
                    return ((global::System.DateTime)(this[this.tableGROUP_HEAD.create_dateColumn]));
                }
                set {
                    this[this.tableGROUP_HEAD.create_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime update_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGROUP_HEAD.update_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'GROUP_HEAD\' 中資料行 \'update_date\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGROUP_HEAD.update_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string is_active {
                get {
                    return ((string)(this[this.tableGROUP_HEAD.is_activeColumn]));
                }
                set {
                    this[this.tableGROUP_HEAD.is_activeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name_zh_tw {
                get {
                    return ((string)(this[this.tableGROUP_HEAD.name_zh_twColumn]));
                }
                set {
                    this[this.tableGROUP_HEAD.name_zh_twColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name_zh_cn {
                get {
                    return ((string)(this[this.tableGROUP_HEAD.name_zh_cnColumn]));
                }
                set {
                    this[this.tableGROUP_HEAD.name_zh_cnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name_en_us {
                get {
                    return ((string)(this[this.tableGROUP_HEAD.name_en_usColumn]));
                }
                set {
                    this[this.tableGROUP_HEAD.name_en_usColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string company_uuid {
                get {
                    return ((string)(this[this.tableGROUP_HEAD.company_uuidColumn]));
                }
                set {
                    this[this.tableGROUP_HEAD.company_uuidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string id {
                get {
                    return ((string)(this[this.tableGROUP_HEAD.idColumn]));
                }
                set {
                    this[this.tableGROUP_HEAD.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string create_user {
                get {
                    return ((string)(this[this.tableGROUP_HEAD.create_userColumn]));
                }
                set {
                    this[this.tableGROUP_HEAD.create_userColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string update_user {
                get {
                    try {
                        return ((string)(this[this.tableGROUP_HEAD.update_userColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'GROUP_HEAD\' 中資料行 \'update_user\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableGROUP_HEAD.update_userColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string application_head_uuid {
                get {
                    return ((string)(this[this.tableGROUP_HEAD.application_head_uuidColumn]));
                }
                set {
                    this[this.tableGROUP_HEAD.application_head_uuidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APPLICATION_HEADRow APPLICATION_HEADRow {
                get {
                    return ((APPLICATION_HEADRow)(this.GetParentRow(this.Table.ParentRelations["GROUP_HEAD_APPLICATION_HE_FK1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["GROUP_HEAD_APPLICATION_HE_FK1"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public COMPANYRow COMPANYRow {
                get {
                    return ((COMPANYRow)(this.GetParentRow(this.Table.ParentRelations["GROUP_HEAD_COMPANY_FK1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["GROUP_HEAD_COMPANY_FK1"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isupdate_dateNull() {
                return this.IsNull(this.tableGROUP_HEAD.update_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setupdate_dateNull() {
                this[this.tableGROUP_HEAD.update_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isupdate_userNull() {
                return this.IsNull(this.tableGROUP_HEAD.update_userColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setupdate_userNull() {
                this[this.tableGROUP_HEAD.update_userColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GROUP_APPMENURow[] GetGROUP_APPMENURows() {
                if ((this.Table.ChildRelations["GROUP_APPMENU_GROUP_HEAD_FK1"] == null)) {
                    return new GROUP_APPMENURow[0];
                }
                else {
                    return ((GROUP_APPMENURow[])(base.GetChildRows(this.Table.ChildRelations["GROUP_APPMENU_GROUP_HEAD_FK1"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GROUP_ATTENDANTRow[] GetGROUP_ATTENDANTRows() {
                if ((this.Table.ChildRelations["GROUP_ATTENDANT_GROUP_HEA_FK1"] == null)) {
                    return new GROUP_ATTENDANTRow[0];
                }
                else {
                    return ((GROUP_ATTENDANTRow[])(base.GetChildRows(this.Table.ChildRelations["GROUP_ATTENDANT_GROUP_HEA_FK1"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public group_attendant_vRow[] Getgroup_attendant_vRows() {
                if ((this.Table.ChildRelations["GROUP_HEAD_group_attendant_v"] == null)) {
                    return new group_attendant_vRow[0];
                }
                else {
                    return ((group_attendant_vRow[])(base.GetChildRows(this.Table.ChildRelations["GROUP_HEAD_group_attendant_v"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public group_appmenu_vRow[] Getgroup_appmenu_vRows() {
                if ((this.Table.ChildRelations["GROUP_HEAD_group_appmenu_v"] == null)) {
                    return new group_appmenu_vRow[0];
                }
                else {
                    return ((group_appmenu_vRow[])(base.GetChildRows(this.Table.ChildRelations["GROUP_HEAD_group_appmenu_v"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SITERow : global::System.Data.DataRow {
            
            private SITEDataTable tableSITE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SITERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSITE = ((SITEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string uuid {
                get {
                    return ((string)(this[this.tableSITE.uuidColumn]));
                }
                set {
                    this[this.tableSITE.uuidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime create_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSITE.create_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SITE\' 中資料行 \'create_date\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSITE.create_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime update_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSITE.update_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SITE\' 中資料行 \'update_date\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSITE.update_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string is_active {
                get {
                    return ((string)(this[this.tableSITE.is_activeColumn]));
                }
                set {
                    this[this.tableSITE.is_activeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string company_uuid {
                get {
                    return ((string)(this[this.tableSITE.company_uuidColumn]));
                }
                set {
                    this[this.tableSITE.company_uuidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string id {
                get {
                    return ((string)(this[this.tableSITE.idColumn]));
                }
                set {
                    this[this.tableSITE.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string c_name {
                get {
                    try {
                        return ((string)(this[this.tableSITE.c_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SITE\' 中資料行 \'c_name\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSITE.c_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string e_name {
                get {
                    try {
                        return ((string)(this[this.tableSITE.e_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SITE\' 中資料行 \'e_name\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSITE.e_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string parent_site_uuid {
                get {
                    try {
                        return ((string)(this[this.tableSITE.parent_site_uuidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SITE\' 中資料行 \'parent_site_uuid\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSITE.parent_site_uuidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public COMPANYRow COMPANYRow {
                get {
                    return ((COMPANYRow)(this.GetParentRow(this.Table.ParentRelations["SITE_FK1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["SITE_FK1"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SITERow SITERowParent {
                get {
                    return ((SITERow)(this.GetParentRow(this.Table.ParentRelations["SITE_FK2"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["SITE_FK2"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscreate_dateNull() {
                return this.IsNull(this.tableSITE.create_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcreate_dateNull() {
                this[this.tableSITE.create_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isupdate_dateNull() {
                return this.IsNull(this.tableSITE.update_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setupdate_dateNull() {
                this[this.tableSITE.update_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isc_nameNull() {
                return this.IsNull(this.tableSITE.c_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setc_nameNull() {
                this[this.tableSITE.c_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ise_nameNull() {
                return this.IsNull(this.tableSITE.e_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Sete_nameNull() {
                this[this.tableSITE.e_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isparent_site_uuidNull() {
                return this.IsNull(this.tableSITE.parent_site_uuidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setparent_site_uuidNull() {
                this[this.tableSITE.parent_site_uuidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ATTENDANTRow[] GetATTENDANTRows() {
                if ((this.Table.ChildRelations["ATTENDANT_FK3"] == null)) {
                    return new ATTENDANTRow[0];
                }
                else {
                    return ((ATTENDANTRow[])(base.GetChildRows(this.Table.ChildRelations["ATTENDANT_FK3"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SITERow[] GetSITERows() {
                if ((this.Table.ChildRelations["SITE_FK2"] == null)) {
                    return new SITERow[0];
                }
                else {
                    return ((SITERow[])(base.GetChildRows(this.Table.ChildRelations["SITE_FK2"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class attendant_vRow : global::System.Data.DataRow {
            
            private attendant_vDataTable tableattendant_v;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal attendant_vRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableattendant_v = ((attendant_vDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string company_id {
                get {
                    return ((string)(this[this.tableattendant_v.company_idColumn]));
                }
                set {
                    this[this.tableattendant_v.company_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string company_c_name {
                get {
                    try {
                        return ((string)(this[this.tableattendant_v.company_c_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'attendant_v\' 中資料行 \'company_c_name\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableattendant_v.company_c_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string company_e_name {
                get {
                    try {
                        return ((string)(this[this.tableattendant_v.company_e_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'attendant_v\' 中資料行 \'company_e_name\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableattendant_v.company_e_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string department_id {
                get {
                    try {
                        return ((string)(this[this.tableattendant_v.department_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'attendant_v\' 中資料行 \'department_id\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableattendant_v.department_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string department_c_name {
                get {
                    try {
                        return ((string)(this[this.tableattendant_v.department_c_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'attendant_v\' 中資料行 \'department_c_name\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableattendant_v.department_c_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string department_e_name {
                get {
                    try {
                        return ((string)(this[this.tableattendant_v.department_e_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'attendant_v\' 中資料行 \'department_e_name\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableattendant_v.department_e_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string site_id {
                get {
                    try {
                        return ((string)(this[this.tableattendant_v.site_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'attendant_v\' 中資料行 \'site_id\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableattendant_v.site_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string site_c_name {
                get {
                    try {
                        return ((string)(this[this.tableattendant_v.site_c_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'attendant_v\' 中資料行 \'site_c_name\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableattendant_v.site_c_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string site_e_name {
                get {
                    try {
                        return ((string)(this[this.tableattendant_v.site_e_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'attendant_v\' 中資料行 \'site_e_name\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableattendant_v.site_e_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UUID {
                get {
                    return ((string)(this[this.tableattendant_v.UUIDColumn]));
                }
                set {
                    this[this.tableattendant_v.UUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CREATE_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableattendant_v.CREATE_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'attendant_v\' 中資料行 \'CREATE_DATE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableattendant_v.CREATE_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime UPDATE_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableattendant_v.UPDATE_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'attendant_v\' 中資料行 \'UPDATE_DATE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableattendant_v.UPDATE_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IS_ACTIVE {
                get {
                    return ((string)(this[this.tableattendant_v.IS_ACTIVEColumn]));
                }
                set {
                    this[this.tableattendant_v.IS_ACTIVEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COMPANY_UUID {
                get {
                    return ((string)(this[this.tableattendant_v.COMPANY_UUIDColumn]));
                }
                set {
                    this[this.tableattendant_v.COMPANY_UUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ACCOUNT {
                get {
                    return ((string)(this[this.tableattendant_v.ACCOUNTColumn]));
                }
                set {
                    this[this.tableattendant_v.ACCOUNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C_NAME {
                get {
                    try {
                        return ((string)(this[this.tableattendant_v.C_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'attendant_v\' 中資料行 \'C_NAME\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableattendant_v.C_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string E_NAME {
                get {
                    try {
                        return ((string)(this[this.tableattendant_v.E_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'attendant_v\' 中資料行 \'E_NAME\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableattendant_v.E_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMAIL {
                get {
                    return ((string)(this[this.tableattendant_v.EMAILColumn]));
                }
                set {
                    this[this.tableattendant_v.EMAILColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PASSWORD {
                get {
                    try {
                        return ((string)(this[this.tableattendant_v.PASSWORDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'attendant_v\' 中資料行 \'PASSWORD\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableattendant_v.PASSWORDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IS_SUPPER {
                get {
                    return ((string)(this[this.tableattendant_v.IS_SUPPERColumn]));
                }
                set {
                    this[this.tableattendant_v.IS_SUPPERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IS_ADMIN {
                get {
                    return ((string)(this[this.tableattendant_v.IS_ADMINColumn]));
                }
                set {
                    this[this.tableattendant_v.IS_ADMINColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CODE_PAGE {
                get {
                    return ((string)(this[this.tableattendant_v.CODE_PAGEColumn]));
                }
                set {
                    this[this.tableattendant_v.CODE_PAGEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEPARTMENT_UUID {
                get {
                    try {
                        return ((string)(this[this.tableattendant_v.DEPARTMENT_UUIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'attendant_v\' 中資料行 \'DEPARTMENT_UUID\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableattendant_v.DEPARTMENT_UUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PHONE {
                get {
                    try {
                        return ((string)(this[this.tableattendant_v.PHONEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'attendant_v\' 中資料行 \'PHONE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableattendant_v.PHONEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SITE_UUID {
                get {
                    try {
                        return ((string)(this[this.tableattendant_v.SITE_UUIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'attendant_v\' 中資料行 \'SITE_UUID\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableattendant_v.SITE_UUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GENDER {
                get {
                    try {
                        return ((string)(this[this.tableattendant_v.GENDERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'attendant_v\' 中資料行 \'GENDER\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableattendant_v.GENDERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime BIRTHDAY {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableattendant_v.BIRTHDAYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'attendant_v\' 中資料行 \'BIRTHDAY\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableattendant_v.BIRTHDAYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime HIRE_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableattendant_v.HIRE_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'attendant_v\' 中資料行 \'HIRE_DATE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableattendant_v.HIRE_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime QUIT_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableattendant_v.QUIT_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'attendant_v\' 中資料行 \'QUIT_DATE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableattendant_v.QUIT_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IS_MANAGER {
                get {
                    try {
                        return ((string)(this[this.tableattendant_v.IS_MANAGERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'attendant_v\' 中資料行 \'IS_MANAGER\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableattendant_v.IS_MANAGERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IS_DIRECT {
                get {
                    try {
                        return ((string)(this[this.tableattendant_v.IS_DIRECTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'attendant_v\' 中資料行 \'IS_DIRECT\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableattendant_v.IS_DIRECTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GRADE {
                get {
                    try {
                        return ((string)(this[this.tableattendant_v.GRADEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'attendant_v\' 中資料行 \'GRADE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableattendant_v.GRADEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ID {
                get {
                    try {
                        return ((string)(this[this.tableattendant_v.IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'attendant_v\' 中資料行 \'ID\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableattendant_v.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IS_DEFAULT_PASS {
                get {
                    try {
                        return ((string)(this[this.tableattendant_v.IS_DEFAULT_PASSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'attendant_v\' 中資料行 \'IS_DEFAULT_PASS\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableattendant_v.IS_DEFAULT_PASSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscompany_c_nameNull() {
                return this.IsNull(this.tableattendant_v.company_c_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcompany_c_nameNull() {
                this[this.tableattendant_v.company_c_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscompany_e_nameNull() {
                return this.IsNull(this.tableattendant_v.company_e_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcompany_e_nameNull() {
                this[this.tableattendant_v.company_e_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdepartment_idNull() {
                return this.IsNull(this.tableattendant_v.department_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdepartment_idNull() {
                this[this.tableattendant_v.department_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdepartment_c_nameNull() {
                return this.IsNull(this.tableattendant_v.department_c_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdepartment_c_nameNull() {
                this[this.tableattendant_v.department_c_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdepartment_e_nameNull() {
                return this.IsNull(this.tableattendant_v.department_e_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdepartment_e_nameNull() {
                this[this.tableattendant_v.department_e_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issite_idNull() {
                return this.IsNull(this.tableattendant_v.site_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsite_idNull() {
                this[this.tableattendant_v.site_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issite_c_nameNull() {
                return this.IsNull(this.tableattendant_v.site_c_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsite_c_nameNull() {
                this[this.tableattendant_v.site_c_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issite_e_nameNull() {
                return this.IsNull(this.tableattendant_v.site_e_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsite_e_nameNull() {
                this[this.tableattendant_v.site_e_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCREATE_DATENull() {
                return this.IsNull(this.tableattendant_v.CREATE_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCREATE_DATENull() {
                this[this.tableattendant_v.CREATE_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUPDATE_DATENull() {
                return this.IsNull(this.tableattendant_v.UPDATE_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUPDATE_DATENull() {
                this[this.tableattendant_v.UPDATE_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC_NAMENull() {
                return this.IsNull(this.tableattendant_v.C_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC_NAMENull() {
                this[this.tableattendant_v.C_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsE_NAMENull() {
                return this.IsNull(this.tableattendant_v.E_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetE_NAMENull() {
                this[this.tableattendant_v.E_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPASSWORDNull() {
                return this.IsNull(this.tableattendant_v.PASSWORDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPASSWORDNull() {
                this[this.tableattendant_v.PASSWORDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEPARTMENT_UUIDNull() {
                return this.IsNull(this.tableattendant_v.DEPARTMENT_UUIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEPARTMENT_UUIDNull() {
                this[this.tableattendant_v.DEPARTMENT_UUIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPHONENull() {
                return this.IsNull(this.tableattendant_v.PHONEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPHONENull() {
                this[this.tableattendant_v.PHONEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSITE_UUIDNull() {
                return this.IsNull(this.tableattendant_v.SITE_UUIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSITE_UUIDNull() {
                this[this.tableattendant_v.SITE_UUIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGENDERNull() {
                return this.IsNull(this.tableattendant_v.GENDERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGENDERNull() {
                this[this.tableattendant_v.GENDERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBIRTHDAYNull() {
                return this.IsNull(this.tableattendant_v.BIRTHDAYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBIRTHDAYNull() {
                this[this.tableattendant_v.BIRTHDAYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHIRE_DATENull() {
                return this.IsNull(this.tableattendant_v.HIRE_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHIRE_DATENull() {
                this[this.tableattendant_v.HIRE_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQUIT_DATENull() {
                return this.IsNull(this.tableattendant_v.QUIT_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQUIT_DATENull() {
                this[this.tableattendant_v.QUIT_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIS_MANAGERNull() {
                return this.IsNull(this.tableattendant_v.IS_MANAGERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIS_MANAGERNull() {
                this[this.tableattendant_v.IS_MANAGERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIS_DIRECTNull() {
                return this.IsNull(this.tableattendant_v.IS_DIRECTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIS_DIRECTNull() {
                this[this.tableattendant_v.IS_DIRECTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGRADENull() {
                return this.IsNull(this.tableattendant_v.GRADEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGRADENull() {
                this[this.tableattendant_v.GRADEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDNull() {
                return this.IsNull(this.tableattendant_v.IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDNull() {
                this[this.tableattendant_v.IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIS_DEFAULT_PASSNull() {
                return this.IsNull(this.tableattendant_v.IS_DEFAULT_PASSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIS_DEFAULT_PASSNull() {
                this[this.tableattendant_v.IS_DEFAULT_PASSColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class sitemap_vRow : global::System.Data.DataRow {
            
            private sitemap_vDataTable tablesitemap_v;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal sitemap_vRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablesitemap_v = ((sitemap_vDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UUID {
                get {
                    return ((string)(this[this.tablesitemap_v.UUIDColumn]));
                }
                set {
                    this[this.tablesitemap_v.UUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IS_ACTIVE {
                get {
                    return ((string)(this[this.tablesitemap_v.IS_ACTIVEColumn]));
                }
                set {
                    this[this.tablesitemap_v.IS_ACTIVEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CREATE_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tablesitemap_v.CREATE_DATEColumn]));
                }
                set {
                    this[this.tablesitemap_v.CREATE_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CREATE_USER {
                get {
                    return ((string)(this[this.tablesitemap_v.CREATE_USERColumn]));
                }
                set {
                    this[this.tablesitemap_v.CREATE_USERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime UPDATE_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablesitemap_v.UPDATE_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'sitemap_v\' 中資料行 \'UPDATE_DATE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablesitemap_v.UPDATE_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UPDATE_USER {
                get {
                    try {
                        return ((string)(this[this.tablesitemap_v.UPDATE_USERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'sitemap_v\' 中資料行 \'UPDATE_USER\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablesitemap_v.UPDATE_USERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SITEMAP_UUID {
                get {
                    try {
                        return ((string)(this[this.tablesitemap_v.SITEMAP_UUIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'sitemap_v\' 中資料行 \'SITEMAP_UUID\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablesitemap_v.SITEMAP_UUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string APPPAGE_UUID {
                get {
                    return ((string)(this[this.tablesitemap_v.APPPAGE_UUIDColumn]));
                }
                set {
                    this[this.tablesitemap_v.APPPAGE_UUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ROOT_UUID {
                get {
                    return ((string)(this[this.tablesitemap_v.ROOT_UUIDColumn]));
                }
                set {
                    this[this.tablesitemap_v.ROOT_UUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HASCHILD {
                get {
                    return ((string)(this[this.tablesitemap_v.HASCHILDColumn]));
                }
                set {
                    this[this.tablesitemap_v.HASCHILDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string APPLICATION_HEAD_UUID {
                get {
                    try {
                        return ((string)(this[this.tablesitemap_v.APPLICATION_HEAD_UUIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'sitemap_v\' 中資料行 \'APPLICATION_HEAD_UUID\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablesitemap_v.APPLICATION_HEAD_UUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name {
                get {
                    return ((string)(this[this.tablesitemap_v.nameColumn]));
                }
                set {
                    this[this.tablesitemap_v.nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string description {
                get {
                    try {
                        return ((string)(this[this.tablesitemap_v.descriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'sitemap_v\' 中資料行 \'description\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablesitemap_v.descriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string url {
                get {
                    return ((string)(this[this.tablesitemap_v.urlColumn]));
                }
                set {
                    this[this.tablesitemap_v.urlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string p_mode {
                get {
                    try {
                        return ((string)(this[this.tablesitemap_v.p_modeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'sitemap_v\' 中資料行 \'p_mode\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablesitemap_v.p_modeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string parameter_class {
                get {
                    try {
                        return ((string)(this[this.tablesitemap_v.parameter_classColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'sitemap_v\' 中資料行 \'parameter_class\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablesitemap_v.parameter_classColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string apppage_is_active {
                get {
                    return ((string)(this[this.tablesitemap_v.apppage_is_activeColumn]));
                }
                set {
                    this[this.tablesitemap_v.apppage_is_activeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUPDATE_DATENull() {
                return this.IsNull(this.tablesitemap_v.UPDATE_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUPDATE_DATENull() {
                this[this.tablesitemap_v.UPDATE_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUPDATE_USERNull() {
                return this.IsNull(this.tablesitemap_v.UPDATE_USERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUPDATE_USERNull() {
                this[this.tablesitemap_v.UPDATE_USERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSITEMAP_UUIDNull() {
                return this.IsNull(this.tablesitemap_v.SITEMAP_UUIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSITEMAP_UUIDNull() {
                this[this.tablesitemap_v.SITEMAP_UUIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAPPLICATION_HEAD_UUIDNull() {
                return this.IsNull(this.tablesitemap_v.APPLICATION_HEAD_UUIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAPPLICATION_HEAD_UUIDNull() {
                this[this.tablesitemap_v.APPLICATION_HEAD_UUIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdescriptionNull() {
                return this.IsNull(this.tablesitemap_v.descriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdescriptionNull() {
                this[this.tablesitemap_v.descriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isp_modeNull() {
                return this.IsNull(this.tablesitemap_v.p_modeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setp_modeNull() {
                this[this.tablesitemap_v.p_modeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isparameter_classNull() {
                return this.IsNull(this.tablesitemap_v.parameter_classColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setparameter_classNull() {
                this[this.tablesitemap_v.parameter_classColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class group_head_vRow : global::System.Data.DataRow {
            
            private group_head_vDataTable tablegroup_head_v;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal group_head_vRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablegroup_head_v = ((group_head_vDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string uuid {
                get {
                    return ((string)(this[this.tablegroup_head_v.uuidColumn]));
                }
                set {
                    this[this.tablegroup_head_v.uuidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime create_date {
                get {
                    return ((global::System.DateTime)(this[this.tablegroup_head_v.create_dateColumn]));
                }
                set {
                    this[this.tablegroup_head_v.create_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime update_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablegroup_head_v.update_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'group_head_v\' 中資料行 \'update_date\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablegroup_head_v.update_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string is_group_active {
                get {
                    return ((string)(this[this.tablegroup_head_v.is_group_activeColumn]));
                }
                set {
                    this[this.tablegroup_head_v.is_group_activeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name_zh_tw {
                get {
                    return ((string)(this[this.tablegroup_head_v.name_zh_twColumn]));
                }
                set {
                    this[this.tablegroup_head_v.name_zh_twColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name_zh_cn {
                get {
                    return ((string)(this[this.tablegroup_head_v.name_zh_cnColumn]));
                }
                set {
                    this[this.tablegroup_head_v.name_zh_cnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name_en_us {
                get {
                    return ((string)(this[this.tablegroup_head_v.name_en_usColumn]));
                }
                set {
                    this[this.tablegroup_head_v.name_en_usColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string company_uuid {
                get {
                    return ((string)(this[this.tablegroup_head_v.company_uuidColumn]));
                }
                set {
                    this[this.tablegroup_head_v.company_uuidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string id {
                get {
                    return ((string)(this[this.tablegroup_head_v.idColumn]));
                }
                set {
                    this[this.tablegroup_head_v.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string create_user {
                get {
                    return ((string)(this[this.tablegroup_head_v.create_userColumn]));
                }
                set {
                    this[this.tablegroup_head_v.create_userColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string update_user {
                get {
                    try {
                        return ((string)(this[this.tablegroup_head_v.update_userColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'group_head_v\' 中資料行 \'update_user\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablegroup_head_v.update_userColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string application_head_uuid {
                get {
                    return ((string)(this[this.tablegroup_head_v.application_head_uuidColumn]));
                }
                set {
                    this[this.tablegroup_head_v.application_head_uuidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string application_id {
                get {
                    return ((string)(this[this.tablegroup_head_v.application_idColumn]));
                }
                set {
                    this[this.tablegroup_head_v.application_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string application_name {
                get {
                    return ((string)(this[this.tablegroup_head_v.application_nameColumn]));
                }
                set {
                    this[this.tablegroup_head_v.application_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APPLICATION_HEADRow APPLICATION_HEADRow {
                get {
                    return ((APPLICATION_HEADRow)(this.GetParentRow(this.Table.ParentRelations["APPLICATION_HEAD_group_head_v"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["APPLICATION_HEAD_group_head_v"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public COMPANYRow COMPANYRow {
                get {
                    return ((COMPANYRow)(this.GetParentRow(this.Table.ParentRelations["COMPANY_group_head_v"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["COMPANY_group_head_v"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isupdate_dateNull() {
                return this.IsNull(this.tablegroup_head_v.update_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setupdate_dateNull() {
                this[this.tablegroup_head_v.update_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isupdate_userNull() {
                return this.IsNull(this.tablegroup_head_v.update_userColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setupdate_userNull() {
                this[this.tablegroup_head_v.update_userColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class group_attendant_vRow : global::System.Data.DataRow {
            
            private group_attendant_vDataTable tablegroup_attendant_v;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal group_attendant_vRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablegroup_attendant_v = ((group_attendant_vDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string group_name_zh_tw {
                get {
                    return ((string)(this[this.tablegroup_attendant_v.group_name_zh_twColumn]));
                }
                set {
                    this[this.tablegroup_attendant_v.group_name_zh_twColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string group_name_zh_cn {
                get {
                    return ((string)(this[this.tablegroup_attendant_v.group_name_zh_cnColumn]));
                }
                set {
                    this[this.tablegroup_attendant_v.group_name_zh_cnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string group_name_en_us {
                get {
                    return ((string)(this[this.tablegroup_attendant_v.group_name_en_usColumn]));
                }
                set {
                    this[this.tablegroup_attendant_v.group_name_en_usColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string is_group_active {
                get {
                    return ((string)(this[this.tablegroup_attendant_v.is_group_activeColumn]));
                }
                set {
                    this[this.tablegroup_attendant_v.is_group_activeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string company_uuid {
                get {
                    return ((string)(this[this.tablegroup_attendant_v.company_uuidColumn]));
                }
                set {
                    this[this.tablegroup_attendant_v.company_uuidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string company_id {
                get {
                    return ((string)(this[this.tablegroup_attendant_v.company_idColumn]));
                }
                set {
                    this[this.tablegroup_attendant_v.company_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string company_c_name {
                get {
                    try {
                        return ((string)(this[this.tablegroup_attendant_v.company_c_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'group_attendant_v\' 中資料行 \'company_c_name\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablegroup_attendant_v.company_c_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string company_e_name {
                get {
                    try {
                        return ((string)(this[this.tablegroup_attendant_v.company_e_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'group_attendant_v\' 中資料行 \'company_e_name\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablegroup_attendant_v.company_e_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string group_id {
                get {
                    return ((string)(this[this.tablegroup_attendant_v.group_idColumn]));
                }
                set {
                    this[this.tablegroup_attendant_v.group_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string application_head_uuid {
                get {
                    return ((string)(this[this.tablegroup_attendant_v.application_head_uuidColumn]));
                }
                set {
                    this[this.tablegroup_attendant_v.application_head_uuidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string attendant_c_name {
                get {
                    try {
                        return ((string)(this[this.tablegroup_attendant_v.attendant_c_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'group_attendant_v\' 中資料行 \'attendant_c_name\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablegroup_attendant_v.attendant_c_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string attendant_E_name {
                get {
                    try {
                        return ((string)(this[this.tablegroup_attendant_v.attendant_E_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'group_attendant_v\' 中資料行 \'attendant_E_name\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablegroup_attendant_v.attendant_E_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string account {
                get {
                    return ((string)(this[this.tablegroup_attendant_v.accountColumn]));
                }
                set {
                    this[this.tablegroup_attendant_v.accountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string email {
                get {
                    return ((string)(this[this.tablegroup_attendant_v.emailColumn]));
                }
                set {
                    this[this.tablegroup_attendant_v.emailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string is_attendant_active {
                get {
                    return ((string)(this[this.tablegroup_attendant_v.is_attendant_activeColumn]));
                }
                set {
                    this[this.tablegroup_attendant_v.is_attendant_activeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UUID {
                get {
                    return ((string)(this[this.tablegroup_attendant_v.UUIDColumn]));
                }
                set {
                    this[this.tablegroup_attendant_v.UUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CREATE_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tablegroup_attendant_v.CREATE_DATEColumn]));
                }
                set {
                    this[this.tablegroup_attendant_v.CREATE_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime UPDATE_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablegroup_attendant_v.UPDATE_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'group_attendant_v\' 中資料行 \'UPDATE_DATE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablegroup_attendant_v.UPDATE_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IS_ACTIVE {
                get {
                    return ((string)(this[this.tablegroup_attendant_v.IS_ACTIVEColumn]));
                }
                set {
                    this[this.tablegroup_attendant_v.IS_ACTIVEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string group_head_uuid {
                get {
                    return ((string)(this[this.tablegroup_attendant_v.group_head_uuidColumn]));
                }
                set {
                    this[this.tablegroup_attendant_v.group_head_uuidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string attendant_uuid {
                get {
                    return ((string)(this[this.tablegroup_attendant_v.attendant_uuidColumn]));
                }
                set {
                    this[this.tablegroup_attendant_v.attendant_uuidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEPARTMENT_UUID {
                get {
                    try {
                        return ((string)(this[this.tablegroup_attendant_v.DEPARTMENT_UUIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'group_attendant_v\' 中資料行 \'DEPARTMENT_UUID\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablegroup_attendant_v.DEPARTMENT_UUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public COMPANYRow COMPANYRow {
                get {
                    return ((COMPANYRow)(this.GetParentRow(this.Table.ParentRelations["COMPANY_group_attendant_v"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["COMPANY_group_attendant_v"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ATTENDANTRow ATTENDANTRow {
                get {
                    return ((ATTENDANTRow)(this.GetParentRow(this.Table.ParentRelations["ATTENDANT_group_attendant_v"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["ATTENDANT_group_attendant_v"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GROUP_HEADRow GROUP_HEADRow {
                get {
                    return ((GROUP_HEADRow)(this.GetParentRow(this.Table.ParentRelations["GROUP_HEAD_group_attendant_v"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["GROUP_HEAD_group_attendant_v"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscompany_c_nameNull() {
                return this.IsNull(this.tablegroup_attendant_v.company_c_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcompany_c_nameNull() {
                this[this.tablegroup_attendant_v.company_c_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscompany_e_nameNull() {
                return this.IsNull(this.tablegroup_attendant_v.company_e_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcompany_e_nameNull() {
                this[this.tablegroup_attendant_v.company_e_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isattendant_c_nameNull() {
                return this.IsNull(this.tablegroup_attendant_v.attendant_c_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setattendant_c_nameNull() {
                this[this.tablegroup_attendant_v.attendant_c_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isattendant_E_nameNull() {
                return this.IsNull(this.tablegroup_attendant_v.attendant_E_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setattendant_E_nameNull() {
                this[this.tablegroup_attendant_v.attendant_E_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUPDATE_DATENull() {
                return this.IsNull(this.tablegroup_attendant_v.UPDATE_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUPDATE_DATENull() {
                this[this.tablegroup_attendant_v.UPDATE_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEPARTMENT_UUIDNull() {
                return this.IsNull(this.tablegroup_attendant_v.DEPARTMENT_UUIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEPARTMENT_UUIDNull() {
                this[this.tablegroup_attendant_v.DEPARTMENT_UUIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class appmenu_apppage_vRow : global::System.Data.DataRow {
            
            private appmenu_apppage_vDataTable tableappmenu_apppage_v;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal appmenu_apppage_vRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableappmenu_apppage_v = ((appmenu_apppage_vDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UUID {
                get {
                    return ((string)(this[this.tableappmenu_apppage_v.UUIDColumn]));
                }
                set {
                    this[this.tableappmenu_apppage_v.UUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IS_ACTIVE {
                get {
                    return ((string)(this[this.tableappmenu_apppage_v.IS_ACTIVEColumn]));
                }
                set {
                    this[this.tableappmenu_apppage_v.IS_ACTIVEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CREATE_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableappmenu_apppage_v.CREATE_DATEColumn]));
                }
                set {
                    this[this.tableappmenu_apppage_v.CREATE_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CREATE_USER {
                get {
                    return ((string)(this[this.tableappmenu_apppage_v.CREATE_USERColumn]));
                }
                set {
                    this[this.tableappmenu_apppage_v.CREATE_USERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime UPDATE_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableappmenu_apppage_v.UPDATE_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'appmenu_apppage_v\' 中資料行 \'UPDATE_DATE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableappmenu_apppage_v.UPDATE_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UPDATE_USER {
                get {
                    try {
                        return ((string)(this[this.tableappmenu_apppage_v.UPDATE_USERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'appmenu_apppage_v\' 中資料行 \'UPDATE_USER\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableappmenu_apppage_v.UPDATE_USERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NAME_ZH_TW {
                get {
                    return ((string)(this[this.tableappmenu_apppage_v.NAME_ZH_TWColumn]));
                }
                set {
                    this[this.tableappmenu_apppage_v.NAME_ZH_TWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NAME_ZH_CN {
                get {
                    return ((string)(this[this.tableappmenu_apppage_v.NAME_ZH_CNColumn]));
                }
                set {
                    this[this.tableappmenu_apppage_v.NAME_ZH_CNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NAME_EN_US {
                get {
                    return ((string)(this[this.tableappmenu_apppage_v.NAME_EN_USColumn]));
                }
                set {
                    this[this.tableappmenu_apppage_v.NAME_EN_USColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ID {
                get {
                    return ((string)(this[this.tableappmenu_apppage_v.IDColumn]));
                }
                set {
                    this[this.tableappmenu_apppage_v.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string APPMENU_UUID {
                get {
                    try {
                        return ((string)(this[this.tableappmenu_apppage_v.APPMENU_UUIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'appmenu_apppage_v\' 中資料行 \'APPMENU_UUID\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableappmenu_apppage_v.APPMENU_UUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HASCHILD {
                get {
                    return ((string)(this[this.tableappmenu_apppage_v.HASCHILDColumn]));
                }
                set {
                    this[this.tableappmenu_apppage_v.HASCHILDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string APPLICATION_HEAD_UUID {
                get {
                    return ((string)(this[this.tableappmenu_apppage_v.APPLICATION_HEAD_UUIDColumn]));
                }
                set {
                    this[this.tableappmenu_apppage_v.APPLICATION_HEAD_UUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ORD {
                get {
                    return ((decimal)(this[this.tableappmenu_apppage_v.ORDColumn]));
                }
                set {
                    this[this.tableappmenu_apppage_v.ORDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PARAMETER_CLASS {
                get {
                    try {
                        return ((string)(this[this.tableappmenu_apppage_v.PARAMETER_CLASSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'appmenu_apppage_v\' 中資料行 \'PARAMETER_CLASS\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableappmenu_apppage_v.PARAMETER_CLASSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IMAGE {
                get {
                    try {
                        return ((string)(this[this.tableappmenu_apppage_v.IMAGEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'appmenu_apppage_v\' 中資料行 \'IMAGE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableappmenu_apppage_v.IMAGEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SITEMAP_UUID {
                get {
                    try {
                        return ((string)(this[this.tableappmenu_apppage_v.SITEMAP_UUIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'appmenu_apppage_v\' 中資料行 \'SITEMAP_UUID\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableappmenu_apppage_v.SITEMAP_UUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ACTION_MODE {
                get {
                    try {
                        return ((string)(this[this.tableappmenu_apppage_v.ACTION_MODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'appmenu_apppage_v\' 中資料行 \'ACTION_MODE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableappmenu_apppage_v.ACTION_MODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IS_DEFAULT_PAGE {
                get {
                    try {
                        return ((string)(this[this.tableappmenu_apppage_v.IS_DEFAULT_PAGEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'appmenu_apppage_v\' 中資料行 \'IS_DEFAULT_PAGE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableappmenu_apppage_v.IS_DEFAULT_PAGEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IS_ADMIN {
                get {
                    try {
                        return ((string)(this[this.tableappmenu_apppage_v.IS_ADMINColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'appmenu_apppage_v\' 中資料行 \'IS_ADMIN\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableappmenu_apppage_v.IS_ADMINColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string url {
                get {
                    try {
                        return ((string)(this[this.tableappmenu_apppage_v.urlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'appmenu_apppage_v\' 中資料行 \'url\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableappmenu_apppage_v.urlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string description {
                get {
                    try {
                        return ((string)(this[this.tableappmenu_apppage_v.descriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'appmenu_apppage_v\' 中資料行 \'description\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableappmenu_apppage_v.descriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string func_name {
                get {
                    try {
                        return ((string)(this[this.tableappmenu_apppage_v.func_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'appmenu_apppage_v\' 中資料行 \'func_name\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableappmenu_apppage_v.func_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string func_parameter_class {
                get {
                    try {
                        return ((string)(this[this.tableappmenu_apppage_v.func_parameter_classColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'appmenu_apppage_v\' 中資料行 \'func_parameter_class\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableappmenu_apppage_v.func_parameter_classColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string p_mode {
                get {
                    try {
                        return ((string)(this[this.tableappmenu_apppage_v.p_modeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'appmenu_apppage_v\' 中資料行 \'p_mode\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableappmenu_apppage_v.p_modeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APPMENURow APPMENURow {
                get {
                    return ((APPMENURow)(this.GetParentRow(this.Table.ParentRelations["APPMENU_appmenu_apppage_v"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["APPMENU_appmenu_apppage_v"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APPLICATION_HEADRow APPLICATION_HEADRow {
                get {
                    return ((APPLICATION_HEADRow)(this.GetParentRow(this.Table.ParentRelations["APPLICATION_HEAD_appmenu_apppage_v"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["APPLICATION_HEAD_appmenu_apppage_v"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SITEMAPRow SITEMAPRow {
                get {
                    return ((SITEMAPRow)(this.GetParentRow(this.Table.ParentRelations["SITEMAP_appmenu_apppage_v"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["SITEMAP_appmenu_apppage_v"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUPDATE_DATENull() {
                return this.IsNull(this.tableappmenu_apppage_v.UPDATE_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUPDATE_DATENull() {
                this[this.tableappmenu_apppage_v.UPDATE_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUPDATE_USERNull() {
                return this.IsNull(this.tableappmenu_apppage_v.UPDATE_USERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUPDATE_USERNull() {
                this[this.tableappmenu_apppage_v.UPDATE_USERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAPPMENU_UUIDNull() {
                return this.IsNull(this.tableappmenu_apppage_v.APPMENU_UUIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAPPMENU_UUIDNull() {
                this[this.tableappmenu_apppage_v.APPMENU_UUIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPARAMETER_CLASSNull() {
                return this.IsNull(this.tableappmenu_apppage_v.PARAMETER_CLASSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPARAMETER_CLASSNull() {
                this[this.tableappmenu_apppage_v.PARAMETER_CLASSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIMAGENull() {
                return this.IsNull(this.tableappmenu_apppage_v.IMAGEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIMAGENull() {
                this[this.tableappmenu_apppage_v.IMAGEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSITEMAP_UUIDNull() {
                return this.IsNull(this.tableappmenu_apppage_v.SITEMAP_UUIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSITEMAP_UUIDNull() {
                this[this.tableappmenu_apppage_v.SITEMAP_UUIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsACTION_MODENull() {
                return this.IsNull(this.tableappmenu_apppage_v.ACTION_MODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetACTION_MODENull() {
                this[this.tableappmenu_apppage_v.ACTION_MODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIS_DEFAULT_PAGENull() {
                return this.IsNull(this.tableappmenu_apppage_v.IS_DEFAULT_PAGEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIS_DEFAULT_PAGENull() {
                this[this.tableappmenu_apppage_v.IS_DEFAULT_PAGEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIS_ADMINNull() {
                return this.IsNull(this.tableappmenu_apppage_v.IS_ADMINColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIS_ADMINNull() {
                this[this.tableappmenu_apppage_v.IS_ADMINColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsurlNull() {
                return this.IsNull(this.tableappmenu_apppage_v.urlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SeturlNull() {
                this[this.tableappmenu_apppage_v.urlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdescriptionNull() {
                return this.IsNull(this.tableappmenu_apppage_v.descriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdescriptionNull() {
                this[this.tableappmenu_apppage_v.descriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isfunc_nameNull() {
                return this.IsNull(this.tableappmenu_apppage_v.func_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setfunc_nameNull() {
                this[this.tableappmenu_apppage_v.func_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isfunc_parameter_classNull() {
                return this.IsNull(this.tableappmenu_apppage_v.func_parameter_classColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setfunc_parameter_classNull() {
                this[this.tableappmenu_apppage_v.func_parameter_classColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isp_modeNull() {
                return this.IsNull(this.tableappmenu_apppage_v.p_modeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setp_modeNull() {
                this[this.tableappmenu_apppage_v.p_modeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class group_appmenu_vRow : global::System.Data.DataRow {
            
            private group_appmenu_vDataTable tablegroup_appmenu_v;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal group_appmenu_vRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablegroup_appmenu_v = ((group_appmenu_vDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UUID {
                get {
                    return ((string)(this[this.tablegroup_appmenu_v.UUIDColumn]));
                }
                set {
                    this[this.tablegroup_appmenu_v.UUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IS_ACTIVE {
                get {
                    return ((string)(this[this.tablegroup_appmenu_v.IS_ACTIVEColumn]));
                }
                set {
                    this[this.tablegroup_appmenu_v.IS_ACTIVEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CREATE_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tablegroup_appmenu_v.CREATE_DATEColumn]));
                }
                set {
                    this[this.tablegroup_appmenu_v.CREATE_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CREATE_USER {
                get {
                    return ((string)(this[this.tablegroup_appmenu_v.CREATE_USERColumn]));
                }
                set {
                    this[this.tablegroup_appmenu_v.CREATE_USERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime UPDATE_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablegroup_appmenu_v.UPDATE_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'group_appmenu_v\' 中資料行 \'UPDATE_DATE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablegroup_appmenu_v.UPDATE_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UPDATE_USER {
                get {
                    try {
                        return ((string)(this[this.tablegroup_appmenu_v.UPDATE_USERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'group_appmenu_v\' 中資料行 \'UPDATE_USER\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tablegroup_appmenu_v.UPDATE_USERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string APPMENU_UUID {
                get {
                    return ((string)(this[this.tablegroup_appmenu_v.APPMENU_UUIDColumn]));
                }
                set {
                    this[this.tablegroup_appmenu_v.APPMENU_UUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GROUP_HEAD_UUID {
                get {
                    return ((string)(this[this.tablegroup_appmenu_v.GROUP_HEAD_UUIDColumn]));
                }
                set {
                    this[this.tablegroup_appmenu_v.GROUP_HEAD_UUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IS_DEFAULT_PAGE {
                get {
                    return ((string)(this[this.tablegroup_appmenu_v.IS_DEFAULT_PAGEColumn]));
                }
                set {
                    this[this.tablegroup_appmenu_v.IS_DEFAULT_PAGEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APPMENURow APPMENURow {
                get {
                    return ((APPMENURow)(this.GetParentRow(this.Table.ParentRelations["APPMENU_group_appmenu_v"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["APPMENU_group_appmenu_v"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GROUP_HEADRow GROUP_HEADRow {
                get {
                    return ((GROUP_HEADRow)(this.GetParentRow(this.Table.ParentRelations["GROUP_HEAD_group_appmenu_v"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["GROUP_HEAD_group_appmenu_v"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUPDATE_DATENull() {
                return this.IsNull(this.tablegroup_appmenu_v.UPDATE_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUPDATE_DATENull() {
                this[this.tablegroup_appmenu_v.UPDATE_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUPDATE_USERNull() {
                return this.IsNull(this.tablegroup_appmenu_v.UPDATE_USERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUPDATE_USERNull() {
                this[this.tablegroup_appmenu_v.UPDATE_USERColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class authority_menu_vRow : global::System.Data.DataRow {
            
            private authority_menu_vDataTable tableauthority_menu_v;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal authority_menu_vRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableauthority_menu_v = ((authority_menu_vDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string is_user_default_page {
                get {
                    try {
                        return ((string)(this[this.tableauthority_menu_v.is_user_default_pageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'authority_menu_v\' 中資料行 \'is_user_default_page\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableauthority_menu_v.is_user_default_pageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UUID {
                get {
                    return ((string)(this[this.tableauthority_menu_v.UUIDColumn]));
                }
                set {
                    this[this.tableauthority_menu_v.UUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IS_ACTIVE {
                get {
                    return ((string)(this[this.tableauthority_menu_v.IS_ACTIVEColumn]));
                }
                set {
                    this[this.tableauthority_menu_v.IS_ACTIVEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CREATE_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableauthority_menu_v.CREATE_DATEColumn]));
                }
                set {
                    this[this.tableauthority_menu_v.CREATE_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CREATE_USER {
                get {
                    return ((string)(this[this.tableauthority_menu_v.CREATE_USERColumn]));
                }
                set {
                    this[this.tableauthority_menu_v.CREATE_USERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime UPDATE_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableauthority_menu_v.UPDATE_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'authority_menu_v\' 中資料行 \'UPDATE_DATE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableauthority_menu_v.UPDATE_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UPDATE_USER {
                get {
                    try {
                        return ((string)(this[this.tableauthority_menu_v.UPDATE_USERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'authority_menu_v\' 中資料行 \'UPDATE_USER\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableauthority_menu_v.UPDATE_USERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NAME_ZH_TW {
                get {
                    return ((string)(this[this.tableauthority_menu_v.NAME_ZH_TWColumn]));
                }
                set {
                    this[this.tableauthority_menu_v.NAME_ZH_TWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NAME_ZH_CN {
                get {
                    return ((string)(this[this.tableauthority_menu_v.NAME_ZH_CNColumn]));
                }
                set {
                    this[this.tableauthority_menu_v.NAME_ZH_CNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NAME_EN_US {
                get {
                    return ((string)(this[this.tableauthority_menu_v.NAME_EN_USColumn]));
                }
                set {
                    this[this.tableauthority_menu_v.NAME_EN_USColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ID {
                get {
                    return ((string)(this[this.tableauthority_menu_v.IDColumn]));
                }
                set {
                    this[this.tableauthority_menu_v.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string APPMENU_UUID {
                get {
                    try {
                        return ((string)(this[this.tableauthority_menu_v.APPMENU_UUIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'authority_menu_v\' 中資料行 \'APPMENU_UUID\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableauthority_menu_v.APPMENU_UUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HASCHILD {
                get {
                    return ((string)(this[this.tableauthority_menu_v.HASCHILDColumn]));
                }
                set {
                    this[this.tableauthority_menu_v.HASCHILDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string APPLICATION_HEAD_UUID {
                get {
                    return ((string)(this[this.tableauthority_menu_v.APPLICATION_HEAD_UUIDColumn]));
                }
                set {
                    this[this.tableauthority_menu_v.APPLICATION_HEAD_UUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ORD {
                get {
                    return ((decimal)(this[this.tableauthority_menu_v.ORDColumn]));
                }
                set {
                    this[this.tableauthority_menu_v.ORDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PARAMETER_CLASS {
                get {
                    try {
                        return ((string)(this[this.tableauthority_menu_v.PARAMETER_CLASSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'authority_menu_v\' 中資料行 \'PARAMETER_CLASS\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableauthority_menu_v.PARAMETER_CLASSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IMAGE {
                get {
                    try {
                        return ((string)(this[this.tableauthority_menu_v.IMAGEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'authority_menu_v\' 中資料行 \'IMAGE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableauthority_menu_v.IMAGEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SITEMAP_UUID {
                get {
                    try {
                        return ((string)(this[this.tableauthority_menu_v.SITEMAP_UUIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'authority_menu_v\' 中資料行 \'SITEMAP_UUID\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableauthority_menu_v.SITEMAP_UUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ACTION_MODE {
                get {
                    try {
                        return ((string)(this[this.tableauthority_menu_v.ACTION_MODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'authority_menu_v\' 中資料行 \'ACTION_MODE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableauthority_menu_v.ACTION_MODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IS_DEFAULT_PAGE {
                get {
                    try {
                        return ((string)(this[this.tableauthority_menu_v.IS_DEFAULT_PAGEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'authority_menu_v\' 中資料行 \'IS_DEFAULT_PAGE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableauthority_menu_v.IS_DEFAULT_PAGEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IS_ADMIN {
                get {
                    try {
                        return ((string)(this[this.tableauthority_menu_v.IS_ADMINColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'authority_menu_v\' 中資料行 \'IS_ADMIN\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableauthority_menu_v.IS_ADMINColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ATTENDANT_UUID {
                get {
                    try {
                        return ((string)(this[this.tableauthority_menu_v.ATTENDANT_UUIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'authority_menu_v\' 中資料行 \'ATTENDANT_UUID\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableauthority_menu_v.ATTENDANT_UUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string APPLICATION_NAME {
                get {
                    try {
                        return ((string)(this[this.tableauthority_menu_v.APPLICATION_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'authority_menu_v\' 中資料行 \'APPLICATION_NAME\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableauthority_menu_v.APPLICATION_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string url {
                get {
                    try {
                        return ((string)(this[this.tableauthority_menu_v.urlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'authority_menu_v\' 中資料行 \'url\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableauthority_menu_v.urlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string func_parameter_class {
                get {
                    try {
                        return ((string)(this[this.tableauthority_menu_v.func_parameter_classColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'authority_menu_v\' 中資料行 \'func_parameter_class\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableauthority_menu_v.func_parameter_classColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string p_mode {
                get {
                    try {
                        return ((string)(this[this.tableauthority_menu_v.p_modeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'authority_menu_v\' 中資料行 \'p_mode\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableauthority_menu_v.p_modeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isis_user_default_pageNull() {
                return this.IsNull(this.tableauthority_menu_v.is_user_default_pageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setis_user_default_pageNull() {
                this[this.tableauthority_menu_v.is_user_default_pageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUPDATE_DATENull() {
                return this.IsNull(this.tableauthority_menu_v.UPDATE_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUPDATE_DATENull() {
                this[this.tableauthority_menu_v.UPDATE_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUPDATE_USERNull() {
                return this.IsNull(this.tableauthority_menu_v.UPDATE_USERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUPDATE_USERNull() {
                this[this.tableauthority_menu_v.UPDATE_USERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAPPMENU_UUIDNull() {
                return this.IsNull(this.tableauthority_menu_v.APPMENU_UUIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAPPMENU_UUIDNull() {
                this[this.tableauthority_menu_v.APPMENU_UUIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPARAMETER_CLASSNull() {
                return this.IsNull(this.tableauthority_menu_v.PARAMETER_CLASSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPARAMETER_CLASSNull() {
                this[this.tableauthority_menu_v.PARAMETER_CLASSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIMAGENull() {
                return this.IsNull(this.tableauthority_menu_v.IMAGEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIMAGENull() {
                this[this.tableauthority_menu_v.IMAGEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSITEMAP_UUIDNull() {
                return this.IsNull(this.tableauthority_menu_v.SITEMAP_UUIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSITEMAP_UUIDNull() {
                this[this.tableauthority_menu_v.SITEMAP_UUIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsACTION_MODENull() {
                return this.IsNull(this.tableauthority_menu_v.ACTION_MODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetACTION_MODENull() {
                this[this.tableauthority_menu_v.ACTION_MODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIS_DEFAULT_PAGENull() {
                return this.IsNull(this.tableauthority_menu_v.IS_DEFAULT_PAGEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIS_DEFAULT_PAGENull() {
                this[this.tableauthority_menu_v.IS_DEFAULT_PAGEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIS_ADMINNull() {
                return this.IsNull(this.tableauthority_menu_v.IS_ADMINColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIS_ADMINNull() {
                this[this.tableauthority_menu_v.IS_ADMINColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsATTENDANT_UUIDNull() {
                return this.IsNull(this.tableauthority_menu_v.ATTENDANT_UUIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetATTENDANT_UUIDNull() {
                this[this.tableauthority_menu_v.ATTENDANT_UUIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAPPLICATION_NAMENull() {
                return this.IsNull(this.tableauthority_menu_v.APPLICATION_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAPPLICATION_NAMENull() {
                this[this.tableauthority_menu_v.APPLICATION_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsurlNull() {
                return this.IsNull(this.tableauthority_menu_v.urlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SeturlNull() {
                this[this.tableauthority_menu_v.urlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isfunc_parameter_classNull() {
                return this.IsNull(this.tableauthority_menu_v.func_parameter_classColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setfunc_parameter_classNull() {
                this[this.tableauthority_menu_v.func_parameter_classColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isp_modeNull() {
                return this.IsNull(this.tableauthority_menu_v.p_modeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setp_modeNull() {
                this[this.tableauthority_menu_v.p_modeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ERROR_LOGRow : global::System.Data.DataRow {
            
            private ERROR_LOGDataTable tableERROR_LOG;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ERROR_LOGRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableERROR_LOG = ((ERROR_LOGDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string uuid {
                get {
                    return ((string)(this[this.tableERROR_LOG.uuidColumn]));
                }
                set {
                    this[this.tableERROR_LOG.uuidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime create_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableERROR_LOG.create_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'ERROR_LOG\' 中資料行 \'create_date\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableERROR_LOG.create_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime update_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableERROR_LOG.update_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'ERROR_LOG\' 中資料行 \'update_date\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableERROR_LOG.update_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string is_active {
                get {
                    return ((string)(this[this.tableERROR_LOG.is_activeColumn]));
                }
                set {
                    this[this.tableERROR_LOG.is_activeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string error_code {
                get {
                    return ((string)(this[this.tableERROR_LOG.error_codeColumn]));
                }
                set {
                    this[this.tableERROR_LOG.error_codeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string error_time {
                get {
                    return ((string)(this[this.tableERROR_LOG.error_timeColumn]));
                }
                set {
                    this[this.tableERROR_LOG.error_timeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string error_message {
                get {
                    return ((string)(this[this.tableERROR_LOG.error_messageColumn]));
                }
                set {
                    this[this.tableERROR_LOG.error_messageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string application_name {
                get {
                    try {
                        return ((string)(this[this.tableERROR_LOG.application_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'ERROR_LOG\' 中資料行 \'application_name\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableERROR_LOG.application_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string attendant_uuid {
                get {
                    try {
                        return ((string)(this[this.tableERROR_LOG.attendant_uuidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'ERROR_LOG\' 中資料行 \'attendant_uuid\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableERROR_LOG.attendant_uuidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string error_type {
                get {
                    try {
                        return ((string)(this[this.tableERROR_LOG.error_typeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'ERROR_LOG\' 中資料行 \'error_type\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableERROR_LOG.error_typeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string is_read {
                get {
                    try {
                        return ((string)(this[this.tableERROR_LOG.is_readColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'ERROR_LOG\' 中資料行 \'is_read\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableERROR_LOG.is_readColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ATTENDANTRow ATTENDANTRow {
                get {
                    return ((ATTENDANTRow)(this.GetParentRow(this.Table.ParentRelations["ATTENDANT_ERROR_LOG"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["ATTENDANT_ERROR_LOG"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscreate_dateNull() {
                return this.IsNull(this.tableERROR_LOG.create_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcreate_dateNull() {
                this[this.tableERROR_LOG.create_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isupdate_dateNull() {
                return this.IsNull(this.tableERROR_LOG.update_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setupdate_dateNull() {
                this[this.tableERROR_LOG.update_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isapplication_nameNull() {
                return this.IsNull(this.tableERROR_LOG.application_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setapplication_nameNull() {
                this[this.tableERROR_LOG.application_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isattendant_uuidNull() {
                return this.IsNull(this.tableERROR_LOG.attendant_uuidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setattendant_uuidNull() {
                this[this.tableERROR_LOG.attendant_uuidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iserror_typeNull() {
                return this.IsNull(this.tableERROR_LOG.error_typeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Seterror_typeNull() {
                this[this.tableERROR_LOG.error_typeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isis_readNull() {
                return this.IsNull(this.tableERROR_LOG.is_readColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setis_readNull() {
                this[this.tableERROR_LOG.is_readColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class error_log_vRow : global::System.Data.DataRow {
            
            private error_log_vDataTable tableerror_log_v;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal error_log_vRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableerror_log_v = ((error_log_vDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string uuid {
                get {
                    return ((string)(this[this.tableerror_log_v.uuidColumn]));
                }
                set {
                    this[this.tableerror_log_v.uuidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime create_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableerror_log_v.create_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'error_log_v\' 中資料行 \'create_date\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableerror_log_v.create_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime update_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableerror_log_v.update_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'error_log_v\' 中資料行 \'update_date\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableerror_log_v.update_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string is_active {
                get {
                    return ((string)(this[this.tableerror_log_v.is_activeColumn]));
                }
                set {
                    this[this.tableerror_log_v.is_activeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string error_code {
                get {
                    return ((string)(this[this.tableerror_log_v.error_codeColumn]));
                }
                set {
                    this[this.tableerror_log_v.error_codeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string error_time {
                get {
                    return ((string)(this[this.tableerror_log_v.error_timeColumn]));
                }
                set {
                    this[this.tableerror_log_v.error_timeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string error_message {
                get {
                    return ((string)(this[this.tableerror_log_v.error_messageColumn]));
                }
                set {
                    this[this.tableerror_log_v.error_messageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string application_name {
                get {
                    try {
                        return ((string)(this[this.tableerror_log_v.application_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'error_log_v\' 中資料行 \'application_name\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableerror_log_v.application_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string attendant_uuid {
                get {
                    try {
                        return ((string)(this[this.tableerror_log_v.attendant_uuidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'error_log_v\' 中資料行 \'attendant_uuid\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableerror_log_v.attendant_uuidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string error_type {
                get {
                    try {
                        return ((string)(this[this.tableerror_log_v.error_typeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'error_log_v\' 中資料行 \'error_type\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableerror_log_v.error_typeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string is_read {
                get {
                    try {
                        return ((string)(this[this.tableerror_log_v.is_readColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'error_log_v\' 中資料行 \'is_read\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableerror_log_v.is_readColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string c_name {
                get {
                    try {
                        return ((string)(this[this.tableerror_log_v.c_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'error_log_v\' 中資料行 \'c_name\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableerror_log_v.c_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string e_name {
                get {
                    try {
                        return ((string)(this[this.tableerror_log_v.e_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'error_log_v\' 中資料行 \'e_name\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableerror_log_v.e_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string id {
                get {
                    try {
                        return ((string)(this[this.tableerror_log_v.idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'error_log_v\' 中資料行 \'id\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableerror_log_v.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ATTENDANTRow ATTENDANTRow {
                get {
                    return ((ATTENDANTRow)(this.GetParentRow(this.Table.ParentRelations["ATTENDANT_error_log_v"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["ATTENDANT_error_log_v"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscreate_dateNull() {
                return this.IsNull(this.tableerror_log_v.create_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcreate_dateNull() {
                this[this.tableerror_log_v.create_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isupdate_dateNull() {
                return this.IsNull(this.tableerror_log_v.update_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setupdate_dateNull() {
                this[this.tableerror_log_v.update_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isapplication_nameNull() {
                return this.IsNull(this.tableerror_log_v.application_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setapplication_nameNull() {
                this[this.tableerror_log_v.application_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isattendant_uuidNull() {
                return this.IsNull(this.tableerror_log_v.attendant_uuidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setattendant_uuidNull() {
                this[this.tableerror_log_v.attendant_uuidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iserror_typeNull() {
                return this.IsNull(this.tableerror_log_v.error_typeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Seterror_typeNull() {
                this[this.tableerror_log_v.error_typeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isis_readNull() {
                return this.IsNull(this.tableerror_log_v.is_readColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setis_readNull() {
                this[this.tableerror_log_v.is_readColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isc_nameNull() {
                return this.IsNull(this.tableerror_log_v.c_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setc_nameNull() {
                this[this.tableerror_log_v.c_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ise_nameNull() {
                return this.IsNull(this.tableerror_log_v.e_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Sete_nameNull() {
                this[this.tableerror_log_v.e_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsidNull() {
                return this.IsNull(this.tableerror_log_v.idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetidNull() {
                this[this.tableerror_log_v.idColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class APPLICATION_HEADRowChangeEvent : global::System.EventArgs {
            
            private APPLICATION_HEADRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APPLICATION_HEADRowChangeEvent(APPLICATION_HEADRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APPLICATION_HEADRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SITEMAPRowChangeEvent : global::System.EventArgs {
            
            private SITEMAPRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SITEMAPRowChangeEvent(SITEMAPRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SITEMAPRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class APPMENURowChangeEvent : global::System.EventArgs {
            
            private APPMENURow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APPMENURowChangeEvent(APPMENURow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APPMENURow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class APPPAGERowChangeEvent : global::System.EventArgs {
            
            private APPPAGERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APPPAGERowChangeEvent(APPPAGERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public APPPAGERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ATTENDANTRowChangeEvent : global::System.EventArgs {
            
            private ATTENDANTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ATTENDANTRowChangeEvent(ATTENDANTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ATTENDANTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class COMPANYRowChangeEvent : global::System.EventArgs {
            
            private COMPANYRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public COMPANYRowChangeEvent(COMPANYRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public COMPANYRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DEPARTMENTRowChangeEvent : global::System.EventArgs {
            
            private DEPARTMENTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DEPARTMENTRowChangeEvent(DEPARTMENTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DEPARTMENTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GROUP_APPMENURowChangeEvent : global::System.EventArgs {
            
            private GROUP_APPMENURow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GROUP_APPMENURowChangeEvent(GROUP_APPMENURow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GROUP_APPMENURow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GROUP_ATTENDANTRowChangeEvent : global::System.EventArgs {
            
            private GROUP_ATTENDANTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GROUP_ATTENDANTRowChangeEvent(GROUP_ATTENDANTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GROUP_ATTENDANTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GROUP_HEADRowChangeEvent : global::System.EventArgs {
            
            private GROUP_HEADRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GROUP_HEADRowChangeEvent(GROUP_HEADRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GROUP_HEADRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SITERowChangeEvent : global::System.EventArgs {
            
            private SITERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SITERowChangeEvent(SITERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SITERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class attendant_vRowChangeEvent : global::System.EventArgs {
            
            private attendant_vRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public attendant_vRowChangeEvent(attendant_vRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public attendant_vRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class sitemap_vRowChangeEvent : global::System.EventArgs {
            
            private sitemap_vRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sitemap_vRowChangeEvent(sitemap_vRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sitemap_vRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class group_head_vRowChangeEvent : global::System.EventArgs {
            
            private group_head_vRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public group_head_vRowChangeEvent(group_head_vRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public group_head_vRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class group_attendant_vRowChangeEvent : global::System.EventArgs {
            
            private group_attendant_vRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public group_attendant_vRowChangeEvent(group_attendant_vRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public group_attendant_vRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class appmenu_apppage_vRowChangeEvent : global::System.EventArgs {
            
            private appmenu_apppage_vRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public appmenu_apppage_vRowChangeEvent(appmenu_apppage_vRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public appmenu_apppage_vRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class group_appmenu_vRowChangeEvent : global::System.EventArgs {
            
            private group_appmenu_vRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public group_appmenu_vRowChangeEvent(group_appmenu_vRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public group_appmenu_vRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class authority_menu_vRowChangeEvent : global::System.EventArgs {
            
            private authority_menu_vRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public authority_menu_vRowChangeEvent(authority_menu_vRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public authority_menu_vRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ERROR_LOGRowChangeEvent : global::System.EventArgs {
            
            private ERROR_LOGRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ERROR_LOGRowChangeEvent(ERROR_LOGRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ERROR_LOGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class error_log_vRowChangeEvent : global::System.EventArgs {
            
            private error_log_vRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public error_log_vRowChangeEvent(error_log_vRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public error_log_vRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace LKWebTemplate.Controller.Design.BasicTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class APPLICATION_HEADTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public APPLICATION_HEADTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "APPLICATION_HEAD";
            tableMapping.ColumnMappings.Add("uuid", "uuid");
            tableMapping.ColumnMappings.Add("create_date", "create_date");
            tableMapping.ColumnMappings.Add("update_date", "update_date");
            tableMapping.ColumnMappings.Add("is_active", "is_active");
            tableMapping.ColumnMappings.Add("name", "name");
            tableMapping.ColumnMappings.Add("description", "description");
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("create_user", "create_user");
            tableMapping.ColumnMappings.Add("update_user", "update_user");
            tableMapping.ColumnMappings.Add("web_site", "web_site");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[APPLICATION_HEAD] WHERE (([uuid] = @Original_uuid) AND ([create_date] = @Original_create_date) AND ((@IsNull_update_date = 1 AND [update_date] IS NULL) OR ([update_date] = @Original_update_date)) AND ([is_active] = @Original_is_active) AND ([name] = @Original_name) AND ((@IsNull_description = 1 AND [description] IS NULL) OR ([description] = @Original_description)) AND ([id] = @Original_id) AND ((@IsNull_create_user = 1 AND [create_user] IS NULL) OR ([create_user] = @Original_create_user)) AND ((@IsNull_update_user = 1 AND [update_user] IS NULL) OR ([update_user] = @Original_update_user)) AND ((@IsNull_web_site = 1 AND [web_site] IS NULL) OR ([web_site] = @Original_web_site)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_create_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_update_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_update_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_active", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_active", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_description", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "description", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_create_user", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_user", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_create_user", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_user", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_update_user", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_user", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_update_user", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_user", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_web_site", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "web_site", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_web_site", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "web_site", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[APPLICATION_HEAD] ([uuid], [create_date], [update_date], [is_active], [name], [description], [id], [create_user], [update_user], [web_site]) VALUES (@uuid, @create_date, @update_date, @is_active, @name, @description, @id, @create_user, @update_user, @web_site);
SELECT uuid, create_date, update_date, is_active, name, description, id, create_user, update_user, web_site FROM APPLICATION_HEAD WHERE (uuid = @uuid)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@create_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@update_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_active", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_active", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@create_user", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_user", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@update_user", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_user", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@web_site", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "web_site", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[APPLICATION_HEAD] SET [uuid] = @uuid, [create_date] = @create_date, [update_date] = @update_date, [is_active] = @is_active, [name] = @name, [description] = @description, [id] = @id, [create_user] = @create_user, [update_user] = @update_user, [web_site] = @web_site WHERE (([uuid] = @Original_uuid) AND ([create_date] = @Original_create_date) AND ((@IsNull_update_date = 1 AND [update_date] IS NULL) OR ([update_date] = @Original_update_date)) AND ([is_active] = @Original_is_active) AND ([name] = @Original_name) AND ((@IsNull_description = 1 AND [description] IS NULL) OR ([description] = @Original_description)) AND ([id] = @Original_id) AND ((@IsNull_create_user = 1 AND [create_user] IS NULL) OR ([create_user] = @Original_create_user)) AND ((@IsNull_update_user = 1 AND [update_user] IS NULL) OR ([update_user] = @Original_update_user)) AND ((@IsNull_web_site = 1 AND [web_site] IS NULL) OR ([web_site] = @Original_web_site)));
SELECT uuid, create_date, update_date, is_active, name, description, id, create_user, update_user, web_site FROM APPLICATION_HEAD WHERE (uuid = @uuid)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@create_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@update_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_active", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_active", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@create_user", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_user", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@update_user", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_user", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@web_site", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "web_site", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_create_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_update_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_update_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_active", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_active", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_description", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "description", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_create_user", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_user", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_create_user", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_user", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_update_user", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_user", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_update_user", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_user", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_web_site", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "web_site", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_web_site", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "web_site", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::LKWebTemplate.Controller.Properties.Settings.Default.basicConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT uuid, create_date, update_date, is_active, name, description, id, create_u" +
                "ser, update_user, web_site FROM dbo.APPLICATION_HEAD";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Basic.APPLICATION_HEADDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Basic.APPLICATION_HEADDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Basic.APPLICATION_HEADDataTable dataTable = new Basic.APPLICATION_HEADDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Basic.APPLICATION_HEADDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Basic dataSet) {
            return this.Adapter.Update(dataSet, "APPLICATION_HEAD");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_uuid, System.DateTime Original_create_date, global::System.Nullable<global::System.DateTime> Original_update_date, string Original_is_active, string Original_name, string Original_description, string Original_id, string Original_create_user, string Original_update_user, string Original_web_site) {
            if ((Original_uuid == null)) {
                throw new global::System.ArgumentNullException("Original_uuid");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_uuid));
            }
            this.Adapter.DeleteCommand.Parameters[1].Value = ((System.DateTime)(Original_create_date));
            if ((Original_update_date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_update_date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Original_is_active == null)) {
                throw new global::System.ArgumentNullException("Original_is_active");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_is_active));
            }
            if ((Original_name == null)) {
                throw new global::System.ArgumentNullException("Original_name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_name));
            }
            if ((Original_description == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_description));
            }
            if ((Original_id == null)) {
                throw new global::System.ArgumentNullException("Original_id");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_id));
            }
            if ((Original_create_user == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_create_user));
            }
            if ((Original_update_user == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_update_user));
            }
            if ((Original_web_site == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_web_site));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string uuid, System.DateTime create_date, global::System.Nullable<global::System.DateTime> update_date, string is_active, string name, string description, string id, string create_user, string update_user, string web_site) {
            if ((uuid == null)) {
                throw new global::System.ArgumentNullException("uuid");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(uuid));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(create_date));
            if ((update_date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(update_date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((is_active == null)) {
                throw new global::System.ArgumentNullException("is_active");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(is_active));
            }
            if ((name == null)) {
                throw new global::System.ArgumentNullException("name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(name));
            }
            if ((description == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(description));
            }
            if ((id == null)) {
                throw new global::System.ArgumentNullException("id");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(id));
            }
            if ((create_user == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(create_user));
            }
            if ((update_user == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(update_user));
            }
            if ((web_site == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(web_site));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string uuid, 
                    System.DateTime create_date, 
                    global::System.Nullable<global::System.DateTime> update_date, 
                    string is_active, 
                    string name, 
                    string description, 
                    string id, 
                    string create_user, 
                    string update_user, 
                    string web_site, 
                    string Original_uuid, 
                    System.DateTime Original_create_date, 
                    global::System.Nullable<global::System.DateTime> Original_update_date, 
                    string Original_is_active, 
                    string Original_name, 
                    string Original_description, 
                    string Original_id, 
                    string Original_create_user, 
                    string Original_update_user, 
                    string Original_web_site) {
            if ((uuid == null)) {
                throw new global::System.ArgumentNullException("uuid");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(uuid));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(create_date));
            if ((update_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(update_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((is_active == null)) {
                throw new global::System.ArgumentNullException("is_active");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(is_active));
            }
            if ((name == null)) {
                throw new global::System.ArgumentNullException("name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(name));
            }
            if ((description == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(description));
            }
            if ((id == null)) {
                throw new global::System.ArgumentNullException("id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(id));
            }
            if ((create_user == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(create_user));
            }
            if ((update_user == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(update_user));
            }
            if ((web_site == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(web_site));
            }
            if ((Original_uuid == null)) {
                throw new global::System.ArgumentNullException("Original_uuid");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_uuid));
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(Original_create_date));
            if ((Original_update_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(Original_update_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_is_active == null)) {
                throw new global::System.ArgumentNullException("Original_is_active");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_is_active));
            }
            if ((Original_name == null)) {
                throw new global::System.ArgumentNullException("Original_name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_name));
            }
            if ((Original_description == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_description));
            }
            if ((Original_id == null)) {
                throw new global::System.ArgumentNullException("Original_id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_id));
            }
            if ((Original_create_user == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_create_user));
            }
            if ((Original_update_user == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_update_user));
            }
            if ((Original_web_site == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_web_site));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.DateTime create_date, 
                    global::System.Nullable<global::System.DateTime> update_date, 
                    string is_active, 
                    string name, 
                    string description, 
                    string id, 
                    string create_user, 
                    string update_user, 
                    string web_site, 
                    string Original_uuid, 
                    System.DateTime Original_create_date, 
                    global::System.Nullable<global::System.DateTime> Original_update_date, 
                    string Original_is_active, 
                    string Original_name, 
                    string Original_description, 
                    string Original_id, 
                    string Original_create_user, 
                    string Original_update_user, 
                    string Original_web_site) {
            return this.Update(Original_uuid, create_date, update_date, is_active, name, description, id, create_user, update_user, web_site, Original_uuid, Original_create_date, Original_update_date, Original_is_active, Original_name, Original_description, Original_id, Original_create_user, Original_update_user, Original_web_site);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SITEMAPTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SITEMAPTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SITEMAP";
            tableMapping.ColumnMappings.Add("uuid", "uuid");
            tableMapping.ColumnMappings.Add("is_active", "is_active");
            tableMapping.ColumnMappings.Add("create_date", "create_date");
            tableMapping.ColumnMappings.Add("create_user", "create_user");
            tableMapping.ColumnMappings.Add("update_date", "update_date");
            tableMapping.ColumnMappings.Add("update_user", "update_user");
            tableMapping.ColumnMappings.Add("sitemap_uuid", "sitemap_uuid");
            tableMapping.ColumnMappings.Add("apppage_uuid", "apppage_uuid");
            tableMapping.ColumnMappings.Add("root_uuid", "root_uuid");
            tableMapping.ColumnMappings.Add("haschild", "haschild");
            tableMapping.ColumnMappings.Add("application_head_uuid", "application_head_uuid");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[SITEMAP] WHERE (([uuid] = @Original_uuid) AND ([is_active] = @Original_is_active) AND ([create_date] = @Original_create_date) AND ([create_user] = @Original_create_user) AND ((@IsNull_update_date = 1 AND [update_date] IS NULL) OR ([update_date] = @Original_update_date)) AND ((@IsNull_update_user = 1 AND [update_user] IS NULL) OR ([update_user] = @Original_update_user)) AND ((@IsNull_sitemap_uuid = 1 AND [sitemap_uuid] IS NULL) OR ([sitemap_uuid] = @Original_sitemap_uuid)) AND ([apppage_uuid] = @Original_apppage_uuid) AND ([root_uuid] = @Original_root_uuid) AND ([haschild] = @Original_haschild) AND ((@IsNull_application_head_uuid = 1 AND [application_head_uuid] IS NULL) OR ([application_head_uuid] = @Original_application_head_uuid)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_active", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_active", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_create_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_create_user", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_user", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_update_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_update_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_update_user", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_user", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_update_user", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_user", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_sitemap_uuid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sitemap_uuid", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_sitemap_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sitemap_uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_apppage_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "apppage_uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_root_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "root_uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_haschild", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "haschild", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_application_head_uuid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "application_head_uuid", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_application_head_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "application_head_uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[SITEMAP] ([uuid], [is_active], [create_date], [create_user], [update_date], [update_user], [sitemap_uuid], [apppage_uuid], [root_uuid], [haschild], [application_head_uuid]) VALUES (@uuid, @is_active, @create_date, @create_user, @update_date, @update_user, @sitemap_uuid, @apppage_uuid, @root_uuid, @haschild, @application_head_uuid);
SELECT uuid, is_active, create_date, create_user, update_date, update_user, sitemap_uuid, apppage_uuid, root_uuid, haschild, application_head_uuid FROM SITEMAP WHERE (uuid = @uuid)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_active", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_active", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@create_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@create_user", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_user", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@update_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@update_user", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_user", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sitemap_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sitemap_uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@apppage_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "apppage_uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@root_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "root_uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@haschild", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "haschild", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@application_head_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "application_head_uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[SITEMAP] SET [uuid] = @uuid, [is_active] = @is_active, [create_date] = @create_date, [create_user] = @create_user, [update_date] = @update_date, [update_user] = @update_user, [sitemap_uuid] = @sitemap_uuid, [apppage_uuid] = @apppage_uuid, [root_uuid] = @root_uuid, [haschild] = @haschild, [application_head_uuid] = @application_head_uuid WHERE (([uuid] = @Original_uuid) AND ([is_active] = @Original_is_active) AND ([create_date] = @Original_create_date) AND ([create_user] = @Original_create_user) AND ((@IsNull_update_date = 1 AND [update_date] IS NULL) OR ([update_date] = @Original_update_date)) AND ((@IsNull_update_user = 1 AND [update_user] IS NULL) OR ([update_user] = @Original_update_user)) AND ((@IsNull_sitemap_uuid = 1 AND [sitemap_uuid] IS NULL) OR ([sitemap_uuid] = @Original_sitemap_uuid)) AND ([apppage_uuid] = @Original_apppage_uuid) AND ([root_uuid] = @Original_root_uuid) AND ([haschild] = @Original_haschild) AND ((@IsNull_application_head_uuid = 1 AND [application_head_uuid] IS NULL) OR ([application_head_uuid] = @Original_application_head_uuid)));
SELECT uuid, is_active, create_date, create_user, update_date, update_user, sitemap_uuid, apppage_uuid, root_uuid, haschild, application_head_uuid FROM SITEMAP WHERE (uuid = @uuid)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_active", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_active", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@create_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@create_user", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_user", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@update_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@update_user", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_user", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sitemap_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sitemap_uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@apppage_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "apppage_uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@root_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "root_uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@haschild", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "haschild", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@application_head_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "application_head_uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_active", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_active", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_create_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_create_user", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_user", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_update_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_update_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_update_user", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_user", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_update_user", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_user", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_sitemap_uuid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sitemap_uuid", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_sitemap_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sitemap_uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_apppage_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "apppage_uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_root_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "root_uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_haschild", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "haschild", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_application_head_uuid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "application_head_uuid", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_application_head_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "application_head_uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::LKWebTemplate.Controller.Properties.Settings.Default.basicConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT uuid, is_active, create_date, create_user, update_date, update_user, sitem" +
                "ap_uuid, apppage_uuid, root_uuid, haschild, application_head_uuid FROM dbo.SITEM" +
                "AP";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Basic.SITEMAPDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Basic.SITEMAPDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Basic.SITEMAPDataTable dataTable = new Basic.SITEMAPDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Basic.SITEMAPDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Basic dataSet) {
            return this.Adapter.Update(dataSet, "SITEMAP");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_uuid, string Original_is_active, System.DateTime Original_create_date, string Original_create_user, global::System.Nullable<global::System.DateTime> Original_update_date, string Original_update_user, string Original_sitemap_uuid, string Original_apppage_uuid, string Original_root_uuid, string Original_haschild, string Original_application_head_uuid) {
            if ((Original_uuid == null)) {
                throw new global::System.ArgumentNullException("Original_uuid");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_uuid));
            }
            if ((Original_is_active == null)) {
                throw new global::System.ArgumentNullException("Original_is_active");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_is_active));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_create_date));
            if ((Original_create_user == null)) {
                throw new global::System.ArgumentNullException("Original_create_user");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_create_user));
            }
            if ((Original_update_date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_update_date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Original_update_user == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_update_user));
            }
            if ((Original_sitemap_uuid == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_sitemap_uuid));
            }
            if ((Original_apppage_uuid == null)) {
                throw new global::System.ArgumentNullException("Original_apppage_uuid");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_apppage_uuid));
            }
            if ((Original_root_uuid == null)) {
                throw new global::System.ArgumentNullException("Original_root_uuid");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_root_uuid));
            }
            if ((Original_haschild == null)) {
                throw new global::System.ArgumentNullException("Original_haschild");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_haschild));
            }
            if ((Original_application_head_uuid == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_application_head_uuid));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string uuid, string is_active, System.DateTime create_date, string create_user, global::System.Nullable<global::System.DateTime> update_date, string update_user, string sitemap_uuid, string apppage_uuid, string root_uuid, string haschild, string application_head_uuid) {
            if ((uuid == null)) {
                throw new global::System.ArgumentNullException("uuid");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(uuid));
            }
            if ((is_active == null)) {
                throw new global::System.ArgumentNullException("is_active");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(is_active));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(create_date));
            if ((create_user == null)) {
                throw new global::System.ArgumentNullException("create_user");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(create_user));
            }
            if ((update_date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(update_date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((update_user == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(update_user));
            }
            if ((sitemap_uuid == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(sitemap_uuid));
            }
            if ((apppage_uuid == null)) {
                throw new global::System.ArgumentNullException("apppage_uuid");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(apppage_uuid));
            }
            if ((root_uuid == null)) {
                throw new global::System.ArgumentNullException("root_uuid");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(root_uuid));
            }
            if ((haschild == null)) {
                throw new global::System.ArgumentNullException("haschild");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(haschild));
            }
            if ((application_head_uuid == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(application_head_uuid));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string uuid, 
                    string is_active, 
                    System.DateTime create_date, 
                    string create_user, 
                    global::System.Nullable<global::System.DateTime> update_date, 
                    string update_user, 
                    string sitemap_uuid, 
                    string apppage_uuid, 
                    string root_uuid, 
                    string haschild, 
                    string application_head_uuid, 
                    string Original_uuid, 
                    string Original_is_active, 
                    System.DateTime Original_create_date, 
                    string Original_create_user, 
                    global::System.Nullable<global::System.DateTime> Original_update_date, 
                    string Original_update_user, 
                    string Original_sitemap_uuid, 
                    string Original_apppage_uuid, 
                    string Original_root_uuid, 
                    string Original_haschild, 
                    string Original_application_head_uuid) {
            if ((uuid == null)) {
                throw new global::System.ArgumentNullException("uuid");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(uuid));
            }
            if ((is_active == null)) {
                throw new global::System.ArgumentNullException("is_active");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(is_active));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(create_date));
            if ((create_user == null)) {
                throw new global::System.ArgumentNullException("create_user");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(create_user));
            }
            if ((update_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(update_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((update_user == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(update_user));
            }
            if ((sitemap_uuid == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(sitemap_uuid));
            }
            if ((apppage_uuid == null)) {
                throw new global::System.ArgumentNullException("apppage_uuid");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(apppage_uuid));
            }
            if ((root_uuid == null)) {
                throw new global::System.ArgumentNullException("root_uuid");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(root_uuid));
            }
            if ((haschild == null)) {
                throw new global::System.ArgumentNullException("haschild");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(haschild));
            }
            if ((application_head_uuid == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(application_head_uuid));
            }
            if ((Original_uuid == null)) {
                throw new global::System.ArgumentNullException("Original_uuid");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_uuid));
            }
            if ((Original_is_active == null)) {
                throw new global::System.ArgumentNullException("Original_is_active");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_is_active));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(Original_create_date));
            if ((Original_create_user == null)) {
                throw new global::System.ArgumentNullException("Original_create_user");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_create_user));
            }
            if ((Original_update_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((System.DateTime)(Original_update_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_update_user == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_update_user));
            }
            if ((Original_sitemap_uuid == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_sitemap_uuid));
            }
            if ((Original_apppage_uuid == null)) {
                throw new global::System.ArgumentNullException("Original_apppage_uuid");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_apppage_uuid));
            }
            if ((Original_root_uuid == null)) {
                throw new global::System.ArgumentNullException("Original_root_uuid");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_root_uuid));
            }
            if ((Original_haschild == null)) {
                throw new global::System.ArgumentNullException("Original_haschild");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_haschild));
            }
            if ((Original_application_head_uuid == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_application_head_uuid));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string is_active, 
                    System.DateTime create_date, 
                    string create_user, 
                    global::System.Nullable<global::System.DateTime> update_date, 
                    string update_user, 
                    string sitemap_uuid, 
                    string apppage_uuid, 
                    string root_uuid, 
                    string haschild, 
                    string application_head_uuid, 
                    string Original_uuid, 
                    string Original_is_active, 
                    System.DateTime Original_create_date, 
                    string Original_create_user, 
                    global::System.Nullable<global::System.DateTime> Original_update_date, 
                    string Original_update_user, 
                    string Original_sitemap_uuid, 
                    string Original_apppage_uuid, 
                    string Original_root_uuid, 
                    string Original_haschild, 
                    string Original_application_head_uuid) {
            return this.Update(Original_uuid, is_active, create_date, create_user, update_date, update_user, sitemap_uuid, apppage_uuid, root_uuid, haschild, application_head_uuid, Original_uuid, Original_is_active, Original_create_date, Original_create_user, Original_update_date, Original_update_user, Original_sitemap_uuid, Original_apppage_uuid, Original_root_uuid, Original_haschild, Original_application_head_uuid);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class APPMENUTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public APPMENUTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "APPMENU";
            tableMapping.ColumnMappings.Add("uuid", "uuid");
            tableMapping.ColumnMappings.Add("is_active", "is_active");
            tableMapping.ColumnMappings.Add("create_date", "create_date");
            tableMapping.ColumnMappings.Add("create_user", "create_user");
            tableMapping.ColumnMappings.Add("update_date", "update_date");
            tableMapping.ColumnMappings.Add("update_user", "update_user");
            tableMapping.ColumnMappings.Add("name_zh_tw", "name_zh_tw");
            tableMapping.ColumnMappings.Add("name_zh_cn", "name_zh_cn");
            tableMapping.ColumnMappings.Add("name_en_us", "name_en_us");
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("appmenu_uuid", "appmenu_uuid");
            tableMapping.ColumnMappings.Add("haschild", "haschild");
            tableMapping.ColumnMappings.Add("application_head_uuid", "application_head_uuid");
            tableMapping.ColumnMappings.Add("ord", "ord");
            tableMapping.ColumnMappings.Add("parameter_class", "parameter_class");
            tableMapping.ColumnMappings.Add("image", "image");
            tableMapping.ColumnMappings.Add("sitemap_uuid", "sitemap_uuid");
            tableMapping.ColumnMappings.Add("action_mode", "action_mode");
            tableMapping.ColumnMappings.Add("is_default_page", "is_default_page");
            tableMapping.ColumnMappings.Add("is_admin", "is_admin");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[APPMENU] WHERE (([uuid] = @Original_uuid) AND ([is_active] = @Original_is_active) AND ([create_date] = @Original_create_date) AND ([create_user] = @Original_create_user) AND ((@IsNull_update_date = 1 AND [update_date] IS NULL) OR ([update_date] = @Original_update_date)) AND ((@IsNull_update_user = 1 AND [update_user] IS NULL) OR ([update_user] = @Original_update_user)) AND ([name_zh_tw] = @Original_name_zh_tw) AND ([name_zh_cn] = @Original_name_zh_cn) AND ([name_en_us] = @Original_name_en_us) AND ([id] = @Original_id) AND ((@IsNull_appmenu_uuid = 1 AND [appmenu_uuid] IS NULL) OR ([appmenu_uuid] = @Original_appmenu_uuid)) AND ([haschild] = @Original_haschild) AND ([application_head_uuid] = @Original_application_head_uuid) AND ([ord] = @Original_ord) AND ((@IsNull_parameter_class = 1 AND [parameter_class] IS NULL) OR ([parameter_class] = @Original_parameter_class)) AND ((@IsNull_image = 1 AND [image] IS NULL) OR ([image] = @Original_image)) AND ((@IsNull_sitemap_uuid = 1 AND [sitemap_uuid] IS NULL) OR ([sitemap_uuid] = @Original_sitemap_uuid)) AND ((@IsNull_action_mode = 1 AND [action_mode] IS NULL) OR ([action_mode] = @Original_action_mode)) AND ((@IsNull_is_default_page = 1 AND [is_default_page] IS NULL) OR ([is_default_page] = @Original_is_default_page)) AND ((@IsNull_is_admin = 1 AND [is_admin] IS NULL) OR ([is_admin] = @Original_is_admin)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_active", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_active", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_create_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_create_user", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_user", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_update_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_update_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_update_user", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_user", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_update_user", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_user", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_name_zh_tw", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name_zh_tw", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_name_zh_cn", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name_zh_cn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_name_en_us", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name_en_us", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_appmenu_uuid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "appmenu_uuid", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_appmenu_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "appmenu_uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_haschild", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "haschild", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_application_head_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "application_head_uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ord", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ord", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_parameter_class", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "parameter_class", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_parameter_class", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "parameter_class", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_image", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "image", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_image", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "image", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_sitemap_uuid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sitemap_uuid", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_sitemap_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sitemap_uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_action_mode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "action_mode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_action_mode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "action_mode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_is_default_page", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_default_page", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_default_page", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_default_page", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_is_admin", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_admin", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_admin", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_admin", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[APPMENU] ([uuid], [is_active], [create_date], [create_user], [update_date], [update_user], [name_zh_tw], [name_zh_cn], [name_en_us], [id], [appmenu_uuid], [haschild], [application_head_uuid], [ord], [parameter_class], [image], [sitemap_uuid], [action_mode], [is_default_page], [is_admin]) VALUES (@uuid, @is_active, @create_date, @create_user, @update_date, @update_user, @name_zh_tw, @name_zh_cn, @name_en_us, @id, @appmenu_uuid, @haschild, @application_head_uuid, @ord, @parameter_class, @image, @sitemap_uuid, @action_mode, @is_default_page, @is_admin);
SELECT uuid, is_active, create_date, create_user, update_date, update_user, name_zh_tw, name_zh_cn, name_en_us, id, appmenu_uuid, haschild, application_head_uuid, ord, parameter_class, image, sitemap_uuid, action_mode, is_default_page, is_admin FROM APPMENU WHERE (uuid = @uuid)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_active", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_active", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@create_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@create_user", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_user", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@update_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@update_user", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_user", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@name_zh_tw", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name_zh_tw", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@name_zh_cn", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name_zh_cn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@name_en_us", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name_en_us", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@appmenu_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "appmenu_uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@haschild", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "haschild", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@application_head_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "application_head_uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ord", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ord", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@parameter_class", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "parameter_class", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@image", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "image", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sitemap_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sitemap_uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@action_mode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "action_mode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_default_page", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_default_page", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_admin", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_admin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[APPMENU] SET [uuid] = @uuid, [is_active] = @is_active, [create_date" +
                "] = @create_date, [create_user] = @create_user, [update_date] = @update_date, [u" +
                "pdate_user] = @update_user, [name_zh_tw] = @name_zh_tw, [name_zh_cn] = @name_zh_" +
                "cn, [name_en_us] = @name_en_us, [id] = @id, [appmenu_uuid] = @appmenu_uuid, [has" +
                "child] = @haschild, [application_head_uuid] = @application_head_uuid, [ord] = @o" +
                "rd, [parameter_class] = @parameter_class, [image] = @image, [sitemap_uuid] = @si" +
                "temap_uuid, [action_mode] = @action_mode, [is_default_page] = @is_default_page, " +
                "[is_admin] = @is_admin WHERE (([uuid] = @Original_uuid) AND ([is_active] = @Orig" +
                "inal_is_active) AND ([create_date] = @Original_create_date) AND ([create_user] =" +
                " @Original_create_user) AND ((@IsNull_update_date = 1 AND [update_date] IS NULL)" +
                " OR ([update_date] = @Original_update_date)) AND ((@IsNull_update_user = 1 AND [" +
                "update_user] IS NULL) OR ([update_user] = @Original_update_user)) AND ([name_zh_" +
                "tw] = @Original_name_zh_tw) AND ([name_zh_cn] = @Original_name_zh_cn) AND ([name" +
                "_en_us] = @Original_name_en_us) AND ([id] = @Original_id) AND ((@IsNull_appmenu_" +
                "uuid = 1 AND [appmenu_uuid] IS NULL) OR ([appmenu_uuid] = @Original_appmenu_uuid" +
                ")) AND ([haschild] = @Original_haschild) AND ([application_head_uuid] = @Origina" +
                "l_application_head_uuid) AND ([ord] = @Original_ord) AND ((@IsNull_parameter_cla" +
                "ss = 1 AND [parameter_class] IS NULL) OR ([parameter_class] = @Original_paramete" +
                "r_class)) AND ((@IsNull_image = 1 AND [image] IS NULL) OR ([image] = @Original_i" +
                "mage)) AND ((@IsNull_sitemap_uuid = 1 AND [sitemap_uuid] IS NULL) OR ([sitemap_u" +
                "uid] = @Original_sitemap_uuid)) AND ((@IsNull_action_mode = 1 AND [action_mode] " +
                "IS NULL) OR ([action_mode] = @Original_action_mode)) AND ((@IsNull_is_default_pa" +
                "ge = 1 AND [is_default_page] IS NULL) OR ([is_default_page] = @Original_is_defau" +
                "lt_page)) AND ((@IsNull_is_admin = 1 AND [is_admin] IS NULL) OR ([is_admin] = @O" +
                "riginal_is_admin)));\r\nSELECT uuid, is_active, create_date, create_user, update_d" +
                "ate, update_user, name_zh_tw, name_zh_cn, name_en_us, id, appmenu_uuid, haschild" +
                ", application_head_uuid, ord, parameter_class, image, sitemap_uuid, action_mode," +
                " is_default_page, is_admin FROM APPMENU WHERE (uuid = @uuid)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_active", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_active", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@create_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@create_user", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_user", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@update_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@update_user", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_user", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@name_zh_tw", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name_zh_tw", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@name_zh_cn", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name_zh_cn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@name_en_us", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name_en_us", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@appmenu_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "appmenu_uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@haschild", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "haschild", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@application_head_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "application_head_uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ord", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ord", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@parameter_class", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "parameter_class", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@image", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "image", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sitemap_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sitemap_uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@action_mode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "action_mode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_default_page", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_default_page", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_admin", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_admin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_active", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_active", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_create_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_create_user", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_user", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_update_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_update_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_update_user", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_user", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_update_user", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_user", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_name_zh_tw", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name_zh_tw", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_name_zh_cn", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name_zh_cn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_name_en_us", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name_en_us", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_appmenu_uuid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "appmenu_uuid", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_appmenu_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "appmenu_uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_haschild", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "haschild", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_application_head_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "application_head_uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ord", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "ord", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_parameter_class", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "parameter_class", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_parameter_class", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "parameter_class", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_image", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "image", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_image", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "image", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_sitemap_uuid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sitemap_uuid", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_sitemap_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sitemap_uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_action_mode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "action_mode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_action_mode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "action_mode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_is_default_page", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_default_page", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_default_page", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_default_page", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_is_admin", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_admin", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_admin", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_admin", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::LKWebTemplate.Controller.Properties.Settings.Default.basicConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT uuid, is_active, create_date, create_user, update_date, update_user, name_zh_tw, name_zh_cn, name_en_us, id, appmenu_uuid, haschild, application_head_uuid, ord, parameter_class, image, sitemap_uuid, action_mode, is_default_page, is_admin FROM dbo.APPMENU";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Basic.APPMENUDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Basic.APPMENUDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Basic.APPMENUDataTable dataTable = new Basic.APPMENUDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Basic.APPMENUDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Basic dataSet) {
            return this.Adapter.Update(dataSet, "APPMENU");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_uuid, 
                    string Original_is_active, 
                    System.DateTime Original_create_date, 
                    string Original_create_user, 
                    global::System.Nullable<global::System.DateTime> Original_update_date, 
                    string Original_update_user, 
                    string Original_name_zh_tw, 
                    string Original_name_zh_cn, 
                    string Original_name_en_us, 
                    string Original_id, 
                    string Original_appmenu_uuid, 
                    string Original_haschild, 
                    string Original_application_head_uuid, 
                    decimal Original_ord, 
                    string Original_parameter_class, 
                    string Original_image, 
                    string Original_sitemap_uuid, 
                    string Original_action_mode, 
                    string Original_is_default_page, 
                    string Original_is_admin) {
            if ((Original_uuid == null)) {
                throw new global::System.ArgumentNullException("Original_uuid");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_uuid));
            }
            if ((Original_is_active == null)) {
                throw new global::System.ArgumentNullException("Original_is_active");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_is_active));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_create_date));
            if ((Original_create_user == null)) {
                throw new global::System.ArgumentNullException("Original_create_user");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_create_user));
            }
            if ((Original_update_date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_update_date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Original_update_user == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_update_user));
            }
            if ((Original_name_zh_tw == null)) {
                throw new global::System.ArgumentNullException("Original_name_zh_tw");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_name_zh_tw));
            }
            if ((Original_name_zh_cn == null)) {
                throw new global::System.ArgumentNullException("Original_name_zh_cn");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_name_zh_cn));
            }
            if ((Original_name_en_us == null)) {
                throw new global::System.ArgumentNullException("Original_name_en_us");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_name_en_us));
            }
            if ((Original_id == null)) {
                throw new global::System.ArgumentNullException("Original_id");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_id));
            }
            if ((Original_appmenu_uuid == null)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_appmenu_uuid));
            }
            if ((Original_haschild == null)) {
                throw new global::System.ArgumentNullException("Original_haschild");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_haschild));
            }
            if ((Original_application_head_uuid == null)) {
                throw new global::System.ArgumentNullException("Original_application_head_uuid");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_application_head_uuid));
            }
            this.Adapter.DeleteCommand.Parameters[16].Value = ((decimal)(Original_ord));
            if ((Original_parameter_class == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_parameter_class));
            }
            if ((Original_image == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_image));
            }
            if ((Original_sitemap_uuid == null)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_sitemap_uuid));
            }
            if ((Original_action_mode == null)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_action_mode));
            }
            if ((Original_is_default_page == null)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((string)(Original_is_default_page));
            }
            if ((Original_is_admin == null)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((string)(Original_is_admin));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string uuid, 
                    string is_active, 
                    System.DateTime create_date, 
                    string create_user, 
                    global::System.Nullable<global::System.DateTime> update_date, 
                    string update_user, 
                    string name_zh_tw, 
                    string name_zh_cn, 
                    string name_en_us, 
                    string id, 
                    string appmenu_uuid, 
                    string haschild, 
                    string application_head_uuid, 
                    decimal ord, 
                    string parameter_class, 
                    string image, 
                    string sitemap_uuid, 
                    string action_mode, 
                    string is_default_page, 
                    string is_admin) {
            if ((uuid == null)) {
                throw new global::System.ArgumentNullException("uuid");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(uuid));
            }
            if ((is_active == null)) {
                throw new global::System.ArgumentNullException("is_active");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(is_active));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(create_date));
            if ((create_user == null)) {
                throw new global::System.ArgumentNullException("create_user");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(create_user));
            }
            if ((update_date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(update_date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((update_user == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(update_user));
            }
            if ((name_zh_tw == null)) {
                throw new global::System.ArgumentNullException("name_zh_tw");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(name_zh_tw));
            }
            if ((name_zh_cn == null)) {
                throw new global::System.ArgumentNullException("name_zh_cn");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(name_zh_cn));
            }
            if ((name_en_us == null)) {
                throw new global::System.ArgumentNullException("name_en_us");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(name_en_us));
            }
            if ((id == null)) {
                throw new global::System.ArgumentNullException("id");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(id));
            }
            if ((appmenu_uuid == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(appmenu_uuid));
            }
            if ((haschild == null)) {
                throw new global::System.ArgumentNullException("haschild");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(haschild));
            }
            if ((application_head_uuid == null)) {
                throw new global::System.ArgumentNullException("application_head_uuid");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(application_head_uuid));
            }
            this.Adapter.InsertCommand.Parameters[13].Value = ((decimal)(ord));
            if ((parameter_class == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(parameter_class));
            }
            if ((image == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(image));
            }
            if ((sitemap_uuid == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(sitemap_uuid));
            }
            if ((action_mode == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(action_mode));
            }
            if ((is_default_page == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(is_default_page));
            }
            if ((is_admin == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(is_admin));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string uuid, 
                    string is_active, 
                    System.DateTime create_date, 
                    string create_user, 
                    global::System.Nullable<global::System.DateTime> update_date, 
                    string update_user, 
                    string name_zh_tw, 
                    string name_zh_cn, 
                    string name_en_us, 
                    string id, 
                    string appmenu_uuid, 
                    string haschild, 
                    string application_head_uuid, 
                    decimal ord, 
                    string parameter_class, 
                    string image, 
                    string sitemap_uuid, 
                    string action_mode, 
                    string is_default_page, 
                    string is_admin, 
                    string Original_uuid, 
                    string Original_is_active, 
                    System.DateTime Original_create_date, 
                    string Original_create_user, 
                    global::System.Nullable<global::System.DateTime> Original_update_date, 
                    string Original_update_user, 
                    string Original_name_zh_tw, 
                    string Original_name_zh_cn, 
                    string Original_name_en_us, 
                    string Original_id, 
                    string Original_appmenu_uuid, 
                    string Original_haschild, 
                    string Original_application_head_uuid, 
                    decimal Original_ord, 
                    string Original_parameter_class, 
                    string Original_image, 
                    string Original_sitemap_uuid, 
                    string Original_action_mode, 
                    string Original_is_default_page, 
                    string Original_is_admin) {
            if ((uuid == null)) {
                throw new global::System.ArgumentNullException("uuid");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(uuid));
            }
            if ((is_active == null)) {
                throw new global::System.ArgumentNullException("is_active");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(is_active));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(create_date));
            if ((create_user == null)) {
                throw new global::System.ArgumentNullException("create_user");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(create_user));
            }
            if ((update_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(update_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((update_user == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(update_user));
            }
            if ((name_zh_tw == null)) {
                throw new global::System.ArgumentNullException("name_zh_tw");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(name_zh_tw));
            }
            if ((name_zh_cn == null)) {
                throw new global::System.ArgumentNullException("name_zh_cn");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(name_zh_cn));
            }
            if ((name_en_us == null)) {
                throw new global::System.ArgumentNullException("name_en_us");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(name_en_us));
            }
            if ((id == null)) {
                throw new global::System.ArgumentNullException("id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(id));
            }
            if ((appmenu_uuid == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(appmenu_uuid));
            }
            if ((haschild == null)) {
                throw new global::System.ArgumentNullException("haschild");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(haschild));
            }
            if ((application_head_uuid == null)) {
                throw new global::System.ArgumentNullException("application_head_uuid");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(application_head_uuid));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(ord));
            if ((parameter_class == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(parameter_class));
            }
            if ((image == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(image));
            }
            if ((sitemap_uuid == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(sitemap_uuid));
            }
            if ((action_mode == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(action_mode));
            }
            if ((is_default_page == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(is_default_page));
            }
            if ((is_admin == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(is_admin));
            }
            if ((Original_uuid == null)) {
                throw new global::System.ArgumentNullException("Original_uuid");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_uuid));
            }
            if ((Original_is_active == null)) {
                throw new global::System.ArgumentNullException("Original_is_active");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_is_active));
            }
            this.Adapter.UpdateCommand.Parameters[22].Value = ((System.DateTime)(Original_create_date));
            if ((Original_create_user == null)) {
                throw new global::System.ArgumentNullException("Original_create_user");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_create_user));
            }
            if ((Original_update_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((System.DateTime)(Original_update_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Original_update_user == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_update_user));
            }
            if ((Original_name_zh_tw == null)) {
                throw new global::System.ArgumentNullException("Original_name_zh_tw");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_name_zh_tw));
            }
            if ((Original_name_zh_cn == null)) {
                throw new global::System.ArgumentNullException("Original_name_zh_cn");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_name_zh_cn));
            }
            if ((Original_name_en_us == null)) {
                throw new global::System.ArgumentNullException("Original_name_en_us");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_name_en_us));
            }
            if ((Original_id == null)) {
                throw new global::System.ArgumentNullException("Original_id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_id));
            }
            if ((Original_appmenu_uuid == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_appmenu_uuid));
            }
            if ((Original_haschild == null)) {
                throw new global::System.ArgumentNullException("Original_haschild");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_haschild));
            }
            if ((Original_application_head_uuid == null)) {
                throw new global::System.ArgumentNullException("Original_application_head_uuid");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(Original_application_head_uuid));
            }
            this.Adapter.UpdateCommand.Parameters[36].Value = ((decimal)(Original_ord));
            if ((Original_parameter_class == null)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(Original_parameter_class));
            }
            if ((Original_image == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(Original_image));
            }
            if ((Original_sitemap_uuid == null)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(Original_sitemap_uuid));
            }
            if ((Original_action_mode == null)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(Original_action_mode));
            }
            if ((Original_is_default_page == null)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(Original_is_default_page));
            }
            if ((Original_is_admin == null)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(Original_is_admin));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string is_active, 
                    System.DateTime create_date, 
                    string create_user, 
                    global::System.Nullable<global::System.DateTime> update_date, 
                    string update_user, 
                    string name_zh_tw, 
                    string name_zh_cn, 
                    string name_en_us, 
                    string id, 
                    string appmenu_uuid, 
                    string haschild, 
                    string application_head_uuid, 
                    decimal ord, 
                    string parameter_class, 
                    string image, 
                    string sitemap_uuid, 
                    string action_mode, 
                    string is_default_page, 
                    string is_admin, 
                    string Original_uuid, 
                    string Original_is_active, 
                    System.DateTime Original_create_date, 
                    string Original_create_user, 
                    global::System.Nullable<global::System.DateTime> Original_update_date, 
                    string Original_update_user, 
                    string Original_name_zh_tw, 
                    string Original_name_zh_cn, 
                    string Original_name_en_us, 
                    string Original_id, 
                    string Original_appmenu_uuid, 
                    string Original_haschild, 
                    string Original_application_head_uuid, 
                    decimal Original_ord, 
                    string Original_parameter_class, 
                    string Original_image, 
                    string Original_sitemap_uuid, 
                    string Original_action_mode, 
                    string Original_is_default_page, 
                    string Original_is_admin) {
            return this.Update(Original_uuid, is_active, create_date, create_user, update_date, update_user, name_zh_tw, name_zh_cn, name_en_us, id, appmenu_uuid, haschild, application_head_uuid, ord, parameter_class, image, sitemap_uuid, action_mode, is_default_page, is_admin, Original_uuid, Original_is_active, Original_create_date, Original_create_user, Original_update_date, Original_update_user, Original_name_zh_tw, Original_name_zh_cn, Original_name_en_us, Original_id, Original_appmenu_uuid, Original_haschild, Original_application_head_uuid, Original_ord, Original_parameter_class, Original_image, Original_sitemap_uuid, Original_action_mode, Original_is_default_page, Original_is_admin);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class APPPAGETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public APPPAGETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "APPPAGE";
            tableMapping.ColumnMappings.Add("uuid", "uuid");
            tableMapping.ColumnMappings.Add("is_active", "is_active");
            tableMapping.ColumnMappings.Add("create_date", "create_date");
            tableMapping.ColumnMappings.Add("create_user", "create_user");
            tableMapping.ColumnMappings.Add("update_date", "update_date");
            tableMapping.ColumnMappings.Add("update_user", "update_user");
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("name", "name");
            tableMapping.ColumnMappings.Add("description", "description");
            tableMapping.ColumnMappings.Add("url", "url");
            tableMapping.ColumnMappings.Add("parameter_class", "parameter_class");
            tableMapping.ColumnMappings.Add("application_head_uuid", "application_head_uuid");
            tableMapping.ColumnMappings.Add("p_mode", "p_mode");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[APPPAGE] WHERE (([uuid] = @Original_uuid) AND ([is_active] = @Original_is_active) AND ([create_date] = @Original_create_date) AND ([create_user] = @Original_create_user) AND ((@IsNull_update_date = 1 AND [update_date] IS NULL) OR ([update_date] = @Original_update_date)) AND ((@IsNull_update_user = 1 AND [update_user] IS NULL) OR ([update_user] = @Original_update_user)) AND ([id] = @Original_id) AND ([name] = @Original_name) AND ((@IsNull_description = 1 AND [description] IS NULL) OR ([description] = @Original_description)) AND ([url] = @Original_url) AND ((@IsNull_parameter_class = 1 AND [parameter_class] IS NULL) OR ([parameter_class] = @Original_parameter_class)) AND ([application_head_uuid] = @Original_application_head_uuid) AND ((@IsNull_p_mode = 1 AND [p_mode] IS NULL) OR ([p_mode] = @Original_p_mode)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_active", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_active", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_create_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_create_user", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_user", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_update_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_update_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_update_user", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_user", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_update_user", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_user", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_description", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "description", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_url", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "url", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_parameter_class", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "parameter_class", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_parameter_class", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "parameter_class", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_application_head_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "application_head_uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_p_mode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "p_mode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_p_mode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "p_mode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[APPPAGE] ([uuid], [is_active], [create_date], [create_user], [update_date], [update_user], [id], [name], [description], [url], [parameter_class], [application_head_uuid], [p_mode]) VALUES (@uuid, @is_active, @create_date, @create_user, @update_date, @update_user, @id, @name, @description, @url, @parameter_class, @application_head_uuid, @p_mode);
SELECT uuid, is_active, create_date, create_user, update_date, update_user, id, name, description, url, parameter_class, application_head_uuid, p_mode FROM APPPAGE WHERE (uuid = @uuid)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_active", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_active", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@create_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@create_user", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_user", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@update_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@update_user", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_user", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@url", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "url", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@parameter_class", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "parameter_class", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@application_head_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "application_head_uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p_mode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "p_mode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[APPPAGE] SET [uuid] = @uuid, [is_active] = @is_active, [create_date] = @create_date, [create_user] = @create_user, [update_date] = @update_date, [update_user] = @update_user, [id] = @id, [name] = @name, [description] = @description, [url] = @url, [parameter_class] = @parameter_class, [application_head_uuid] = @application_head_uuid, [p_mode] = @p_mode WHERE (([uuid] = @Original_uuid) AND ([is_active] = @Original_is_active) AND ([create_date] = @Original_create_date) AND ([create_user] = @Original_create_user) AND ((@IsNull_update_date = 1 AND [update_date] IS NULL) OR ([update_date] = @Original_update_date)) AND ((@IsNull_update_user = 1 AND [update_user] IS NULL) OR ([update_user] = @Original_update_user)) AND ([id] = @Original_id) AND ([name] = @Original_name) AND ((@IsNull_description = 1 AND [description] IS NULL) OR ([description] = @Original_description)) AND ([url] = @Original_url) AND ((@IsNull_parameter_class = 1 AND [parameter_class] IS NULL) OR ([parameter_class] = @Original_parameter_class)) AND ([application_head_uuid] = @Original_application_head_uuid) AND ((@IsNull_p_mode = 1 AND [p_mode] IS NULL) OR ([p_mode] = @Original_p_mode)));
SELECT uuid, is_active, create_date, create_user, update_date, update_user, id, name, description, url, parameter_class, application_head_uuid, p_mode FROM APPPAGE WHERE (uuid = @uuid)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_active", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_active", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@create_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@create_user", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_user", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@update_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@update_user", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_user", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@url", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "url", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@parameter_class", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "parameter_class", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@application_head_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "application_head_uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@p_mode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "p_mode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_active", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_active", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_create_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_create_user", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_user", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_update_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_update_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_update_user", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_user", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_update_user", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_user", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_description", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "description", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_description", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_url", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "url", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_parameter_class", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "parameter_class", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_parameter_class", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "parameter_class", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_application_head_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "application_head_uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_p_mode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "p_mode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_p_mode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "p_mode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::LKWebTemplate.Controller.Properties.Settings.Default.basicConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT uuid, is_active, create_date, create_user, update_date, update_user, id, n" +
                "ame, description, url, parameter_class, application_head_uuid, p_mode FROM dbo.A" +
                "PPPAGE";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Basic.APPPAGEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Basic.APPPAGEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Basic.APPPAGEDataTable dataTable = new Basic.APPPAGEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Basic.APPPAGEDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Basic dataSet) {
            return this.Adapter.Update(dataSet, "APPPAGE");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_uuid, string Original_is_active, System.DateTime Original_create_date, string Original_create_user, global::System.Nullable<global::System.DateTime> Original_update_date, string Original_update_user, string Original_id, string Original_name, string Original_description, string Original_url, string Original_parameter_class, string Original_application_head_uuid, string Original_p_mode) {
            if ((Original_uuid == null)) {
                throw new global::System.ArgumentNullException("Original_uuid");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_uuid));
            }
            if ((Original_is_active == null)) {
                throw new global::System.ArgumentNullException("Original_is_active");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_is_active));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_create_date));
            if ((Original_create_user == null)) {
                throw new global::System.ArgumentNullException("Original_create_user");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_create_user));
            }
            if ((Original_update_date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_update_date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Original_update_user == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_update_user));
            }
            if ((Original_id == null)) {
                throw new global::System.ArgumentNullException("Original_id");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_id));
            }
            if ((Original_name == null)) {
                throw new global::System.ArgumentNullException("Original_name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_name));
            }
            if ((Original_description == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_description));
            }
            if ((Original_url == null)) {
                throw new global::System.ArgumentNullException("Original_url");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_url));
            }
            if ((Original_parameter_class == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_parameter_class));
            }
            if ((Original_application_head_uuid == null)) {
                throw new global::System.ArgumentNullException("Original_application_head_uuid");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_application_head_uuid));
            }
            if ((Original_p_mode == null)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_p_mode));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string uuid, string is_active, System.DateTime create_date, string create_user, global::System.Nullable<global::System.DateTime> update_date, string update_user, string id, string name, string description, string url, string parameter_class, string application_head_uuid, string p_mode) {
            if ((uuid == null)) {
                throw new global::System.ArgumentNullException("uuid");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(uuid));
            }
            if ((is_active == null)) {
                throw new global::System.ArgumentNullException("is_active");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(is_active));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(create_date));
            if ((create_user == null)) {
                throw new global::System.ArgumentNullException("create_user");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(create_user));
            }
            if ((update_date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(update_date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((update_user == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(update_user));
            }
            if ((id == null)) {
                throw new global::System.ArgumentNullException("id");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(id));
            }
            if ((name == null)) {
                throw new global::System.ArgumentNullException("name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(name));
            }
            if ((description == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(description));
            }
            if ((url == null)) {
                throw new global::System.ArgumentNullException("url");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(url));
            }
            if ((parameter_class == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(parameter_class));
            }
            if ((application_head_uuid == null)) {
                throw new global::System.ArgumentNullException("application_head_uuid");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(application_head_uuid));
            }
            if ((p_mode == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(p_mode));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string uuid, 
                    string is_active, 
                    System.DateTime create_date, 
                    string create_user, 
                    global::System.Nullable<global::System.DateTime> update_date, 
                    string update_user, 
                    string id, 
                    string name, 
                    string description, 
                    string url, 
                    string parameter_class, 
                    string application_head_uuid, 
                    string p_mode, 
                    string Original_uuid, 
                    string Original_is_active, 
                    System.DateTime Original_create_date, 
                    string Original_create_user, 
                    global::System.Nullable<global::System.DateTime> Original_update_date, 
                    string Original_update_user, 
                    string Original_id, 
                    string Original_name, 
                    string Original_description, 
                    string Original_url, 
                    string Original_parameter_class, 
                    string Original_application_head_uuid, 
                    string Original_p_mode) {
            if ((uuid == null)) {
                throw new global::System.ArgumentNullException("uuid");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(uuid));
            }
            if ((is_active == null)) {
                throw new global::System.ArgumentNullException("is_active");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(is_active));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(create_date));
            if ((create_user == null)) {
                throw new global::System.ArgumentNullException("create_user");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(create_user));
            }
            if ((update_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(update_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((update_user == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(update_user));
            }
            if ((id == null)) {
                throw new global::System.ArgumentNullException("id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(id));
            }
            if ((name == null)) {
                throw new global::System.ArgumentNullException("name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(name));
            }
            if ((description == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(description));
            }
            if ((url == null)) {
                throw new global::System.ArgumentNullException("url");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(url));
            }
            if ((parameter_class == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(parameter_class));
            }
            if ((application_head_uuid == null)) {
                throw new global::System.ArgumentNullException("application_head_uuid");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(application_head_uuid));
            }
            if ((p_mode == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(p_mode));
            }
            if ((Original_uuid == null)) {
                throw new global::System.ArgumentNullException("Original_uuid");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_uuid));
            }
            if ((Original_is_active == null)) {
                throw new global::System.ArgumentNullException("Original_is_active");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_is_active));
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((System.DateTime)(Original_create_date));
            if ((Original_create_user == null)) {
                throw new global::System.ArgumentNullException("Original_create_user");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_create_user));
            }
            if ((Original_update_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((System.DateTime)(Original_update_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_update_user == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_update_user));
            }
            if ((Original_id == null)) {
                throw new global::System.ArgumentNullException("Original_id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_id));
            }
            if ((Original_name == null)) {
                throw new global::System.ArgumentNullException("Original_name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_name));
            }
            if ((Original_description == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_description));
            }
            if ((Original_url == null)) {
                throw new global::System.ArgumentNullException("Original_url");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_url));
            }
            if ((Original_parameter_class == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_parameter_class));
            }
            if ((Original_application_head_uuid == null)) {
                throw new global::System.ArgumentNullException("Original_application_head_uuid");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_application_head_uuid));
            }
            if ((Original_p_mode == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_p_mode));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string is_active, 
                    System.DateTime create_date, 
                    string create_user, 
                    global::System.Nullable<global::System.DateTime> update_date, 
                    string update_user, 
                    string id, 
                    string name, 
                    string description, 
                    string url, 
                    string parameter_class, 
                    string application_head_uuid, 
                    string p_mode, 
                    string Original_uuid, 
                    string Original_is_active, 
                    System.DateTime Original_create_date, 
                    string Original_create_user, 
                    global::System.Nullable<global::System.DateTime> Original_update_date, 
                    string Original_update_user, 
                    string Original_id, 
                    string Original_name, 
                    string Original_description, 
                    string Original_url, 
                    string Original_parameter_class, 
                    string Original_application_head_uuid, 
                    string Original_p_mode) {
            return this.Update(Original_uuid, is_active, create_date, create_user, update_date, update_user, id, name, description, url, parameter_class, application_head_uuid, p_mode, Original_uuid, Original_is_active, Original_create_date, Original_create_user, Original_update_date, Original_update_user, Original_id, Original_name, Original_description, Original_url, Original_parameter_class, Original_application_head_uuid, Original_p_mode);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ATTENDANTTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ATTENDANTTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ATTENDANT";
            tableMapping.ColumnMappings.Add("uuid", "uuid");
            tableMapping.ColumnMappings.Add("create_date", "create_date");
            tableMapping.ColumnMappings.Add("update_date", "update_date");
            tableMapping.ColumnMappings.Add("is_active", "is_active");
            tableMapping.ColumnMappings.Add("company_uuid", "company_uuid");
            tableMapping.ColumnMappings.Add("account", "account");
            tableMapping.ColumnMappings.Add("c_name", "c_name");
            tableMapping.ColumnMappings.Add("e_name", "e_name");
            tableMapping.ColumnMappings.Add("email", "email");
            tableMapping.ColumnMappings.Add("password", "password");
            tableMapping.ColumnMappings.Add("is_supper", "is_supper");
            tableMapping.ColumnMappings.Add("is_admin", "is_admin");
            tableMapping.ColumnMappings.Add("code_page", "code_page");
            tableMapping.ColumnMappings.Add("department_uuid", "department_uuid");
            tableMapping.ColumnMappings.Add("phone", "phone");
            tableMapping.ColumnMappings.Add("site_uuid", "site_uuid");
            tableMapping.ColumnMappings.Add("gender", "gender");
            tableMapping.ColumnMappings.Add("birthday", "birthday");
            tableMapping.ColumnMappings.Add("hire_date", "hire_date");
            tableMapping.ColumnMappings.Add("quit_date", "quit_date");
            tableMapping.ColumnMappings.Add("is_manager", "is_manager");
            tableMapping.ColumnMappings.Add("is_direct", "is_direct");
            tableMapping.ColumnMappings.Add("grade", "grade");
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("src_uuid", "src_uuid");
            tableMapping.ColumnMappings.Add("is_default_pass", "is_default_pass");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[ATTENDANT] WHERE (([uuid] = @Original_uuid) AND ((@IsNull_crea" +
                "te_date = 1 AND [create_date] IS NULL) OR ([create_date] = @Original_create_date" +
                ")) AND ((@IsNull_update_date = 1 AND [update_date] IS NULL) OR ([update_date] = " +
                "@Original_update_date)) AND ([is_active] = @Original_is_active) AND ([company_uu" +
                "id] = @Original_company_uuid) AND ([account] = @Original_account) AND ((@IsNull_" +
                "c_name = 1 AND [c_name] IS NULL) OR ([c_name] = @Original_c_name)) AND ((@IsNull" +
                "_e_name = 1 AND [e_name] IS NULL) OR ([e_name] = @Original_e_name)) AND ([email]" +
                " = @Original_email) AND ((@IsNull_password = 1 AND [password] IS NULL) OR ([pass" +
                "word] = @Original_password)) AND ([is_supper] = @Original_is_supper) AND ([is_ad" +
                "min] = @Original_is_admin) AND ([code_page] = @Original_code_page) AND ((@IsNull" +
                "_department_uuid = 1 AND [department_uuid] IS NULL) OR ([department_uuid] = @Ori" +
                "ginal_department_uuid)) AND ((@IsNull_phone = 1 AND [phone] IS NULL) OR ([phone]" +
                " = @Original_phone)) AND ((@IsNull_site_uuid = 1 AND [site_uuid] IS NULL) OR ([s" +
                "ite_uuid] = @Original_site_uuid)) AND ((@IsNull_gender = 1 AND [gender] IS NULL)" +
                " OR ([gender] = @Original_gender)) AND ((@IsNull_birthday = 1 AND [birthday] IS " +
                "NULL) OR ([birthday] = @Original_birthday)) AND ((@IsNull_hire_date = 1 AND [hir" +
                "e_date] IS NULL) OR ([hire_date] = @Original_hire_date)) AND ((@IsNull_quit_date" +
                " = 1 AND [quit_date] IS NULL) OR ([quit_date] = @Original_quit_date)) AND ((@IsN" +
                "ull_is_manager = 1 AND [is_manager] IS NULL) OR ([is_manager] = @Original_is_man" +
                "ager)) AND ((@IsNull_is_direct = 1 AND [is_direct] IS NULL) OR ([is_direct] = @O" +
                "riginal_is_direct)) AND ((@IsNull_grade = 1 AND [grade] IS NULL) OR ([grade] = @" +
                "Original_grade)) AND ((@IsNull_id = 1 AND [id] IS NULL) OR ([id] = @Original_id)" +
                ") AND ((@IsNull_src_uuid = 1 AND [src_uuid] IS NULL) OR ([src_uuid] = @Original_" +
                "src_uuid)) AND ((@IsNull_is_default_pass = 1 AND [is_default_pass] IS NULL) OR (" +
                "[is_default_pass] = @Original_is_default_pass)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_create_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_create_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_update_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_update_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_active", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_active", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_company_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_account", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "account", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_c_name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "c_name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_c_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "c_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_e_name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "e_name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_e_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "e_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "email", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_password", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "password", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_password", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "password", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_supper", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_supper", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_admin", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_admin", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_code_page", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "code_page", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_department_uuid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "department_uuid", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_department_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "department_uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_phone", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "phone", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_phone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "phone", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_site_uuid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "site_uuid", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_site_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "site_uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_gender", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gender", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_gender", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gender", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_birthday", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "birthday", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_birthday", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "birthday", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_hire_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hire_date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_hire_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hire_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_quit_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "quit_date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_quit_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "quit_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_is_manager", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_manager", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_manager", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_manager", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_is_direct", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_direct", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_direct", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_direct", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_grade", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "grade", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_grade", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "grade", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_src_uuid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "src_uuid", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_src_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "src_uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_is_default_pass", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_default_pass", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_default_pass", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_default_pass", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[ATTENDANT] ([uuid], [create_date], [update_date], [is_active], [company_uuid], [account], [c_name], [e_name], [email], [password], [is_supper], [is_admin], [code_page], [department_uuid], [phone], [site_uuid], [gender], [birthday], [hire_date], [quit_date], [is_manager], [is_direct], [grade], [id], [src_uuid], [is_default_pass]) VALUES (@uuid, @create_date, @update_date, @is_active, @company_uuid, @account, @c_name, @e_name, @email, @password, @is_supper, @is_admin, @code_page, @department_uuid, @phone, @site_uuid, @gender, @birthday, @hire_date, @quit_date, @is_manager, @is_direct, @grade, @id, @src_uuid, @is_default_pass);
SELECT uuid, create_date, update_date, is_active, company_uuid, account, c_name, e_name, email, password, is_supper, is_admin, code_page, department_uuid, phone, site_uuid, gender, birthday, hire_date, quit_date, is_manager, is_direct, grade, id, src_uuid, is_default_pass FROM ATTENDANT WHERE (uuid = @uuid)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@create_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@update_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_active", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_active", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@company_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@account", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "account", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@c_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "c_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@e_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "e_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "email", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@password", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "password", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_supper", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_supper", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_admin", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_admin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@code_page", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "code_page", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@department_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "department_uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@phone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "phone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@site_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "site_uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gender", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gender", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@birthday", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "birthday", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hire_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hire_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@quit_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "quit_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_manager", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_manager", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_direct", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_direct", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@grade", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "grade", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@src_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "src_uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_default_pass", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_default_pass", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[ATTENDANT] SET [uuid] = @uuid, [create_date] = @create_date, [updat" +
                "e_date] = @update_date, [is_active] = @is_active, [company_uuid] = @company_uuid" +
                ", [account] = @account, [c_name] = @c_name, [e_name] = @e_name, [email] = @email" +
                ", [password] = @password, [is_supper] = @is_supper, [is_admin] = @is_admin, [cod" +
                "e_page] = @code_page, [department_uuid] = @department_uuid, [phone] = @phone, [s" +
                "ite_uuid] = @site_uuid, [gender] = @gender, [birthday] = @birthday, [hire_date] " +
                "= @hire_date, [quit_date] = @quit_date, [is_manager] = @is_manager, [is_direct] " +
                "= @is_direct, [grade] = @grade, [id] = @id, [src_uuid] = @src_uuid, [is_default_" +
                "pass] = @is_default_pass WHERE (([uuid] = @Original_uuid) AND ((@IsNull_create_d" +
                "ate = 1 AND [create_date] IS NULL) OR ([create_date] = @Original_create_date)) A" +
                "ND ((@IsNull_update_date = 1 AND [update_date] IS NULL) OR ([update_date] = @Ori" +
                "ginal_update_date)) AND ([is_active] = @Original_is_active) AND ([company_uuid] " +
                "= @Original_company_uuid) AND ([account] = @Original_account) AND ((@IsNull_c_na" +
                "me = 1 AND [c_name] IS NULL) OR ([c_name] = @Original_c_name)) AND ((@IsNull_e_n" +
                "ame = 1 AND [e_name] IS NULL) OR ([e_name] = @Original_e_name)) AND ([email] = @" +
                "Original_email) AND ((@IsNull_password = 1 AND [password] IS NULL) OR ([password" +
                "] = @Original_password)) AND ([is_supper] = @Original_is_supper) AND ([is_admin]" +
                " = @Original_is_admin) AND ([code_page] = @Original_code_page) AND ((@IsNull_dep" +
                "artment_uuid = 1 AND [department_uuid] IS NULL) OR ([department_uuid] = @Origina" +
                "l_department_uuid)) AND ((@IsNull_phone = 1 AND [phone] IS NULL) OR ([phone] = @" +
                "Original_phone)) AND ((@IsNull_site_uuid = 1 AND [site_uuid] IS NULL) OR ([site_" +
                "uuid] = @Original_site_uuid)) AND ((@IsNull_gender = 1 AND [gender] IS NULL) OR " +
                "([gender] = @Original_gender)) AND ((@IsNull_birthday = 1 AND [birthday] IS NULL" +
                ") OR ([birthday] = @Original_birthday)) AND ((@IsNull_hire_date = 1 AND [hire_da" +
                "te] IS NULL) OR ([hire_date] = @Original_hire_date)) AND ((@IsNull_quit_date = 1" +
                " AND [quit_date] IS NULL) OR ([quit_date] = @Original_quit_date)) AND ((@IsNull_" +
                "is_manager = 1 AND [is_manager] IS NULL) OR ([is_manager] = @Original_is_manager" +
                ")) AND ((@IsNull_is_direct = 1 AND [is_direct] IS NULL) OR ([is_direct] = @Origi" +
                "nal_is_direct)) AND ((@IsNull_grade = 1 AND [grade] IS NULL) OR ([grade] = @Orig" +
                "inal_grade)) AND ((@IsNull_id = 1 AND [id] IS NULL) OR ([id] = @Original_id)) AN" +
                "D ((@IsNull_src_uuid = 1 AND [src_uuid] IS NULL) OR ([src_uuid] = @Original_src_" +
                "uuid)) AND ((@IsNull_is_default_pass = 1 AND [is_default_pass] IS NULL) OR ([is_" +
                "default_pass] = @Original_is_default_pass)));\r\nSELECT uuid, create_date, update_" +
                "date, is_active, company_uuid, account, c_name, e_name, email, password, is_supp" +
                "er, is_admin, code_page, department_uuid, phone, site_uuid, gender, birthday, hi" +
                "re_date, quit_date, is_manager, is_direct, grade, id, src_uuid, is_default_pass " +
                "FROM ATTENDANT WHERE (uuid = @uuid)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@create_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@update_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_active", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_active", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@company_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@account", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "account", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@c_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "c_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@e_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "e_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "email", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@password", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "password", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_supper", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_supper", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_admin", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_admin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@code_page", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "code_page", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@department_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "department_uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@phone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "phone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@site_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "site_uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gender", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gender", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@birthday", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "birthday", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@hire_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hire_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@quit_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "quit_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_manager", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_manager", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_direct", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_direct", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@grade", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "grade", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@src_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "src_uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_default_pass", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_default_pass", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_create_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_create_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_update_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_update_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_active", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_active", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_company_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_account", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "account", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_c_name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "c_name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_c_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "c_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_e_name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "e_name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_e_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "e_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "email", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_password", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "password", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_password", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "password", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_supper", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_supper", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_admin", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_admin", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_code_page", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "code_page", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_department_uuid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "department_uuid", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_department_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "department_uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_phone", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "phone", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_phone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "phone", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_site_uuid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "site_uuid", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_site_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "site_uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_gender", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gender", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_gender", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gender", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_birthday", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "birthday", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_birthday", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "birthday", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_hire_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hire_date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_hire_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "hire_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_quit_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "quit_date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_quit_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "quit_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_is_manager", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_manager", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_manager", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_manager", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_is_direct", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_direct", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_direct", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_direct", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_grade", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "grade", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_grade", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "grade", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_src_uuid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "src_uuid", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_src_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "src_uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_is_default_pass", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_default_pass", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_default_pass", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_default_pass", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::LKWebTemplate.Controller.Properties.Settings.Default.basicConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT uuid, create_date, update_date, is_active, company_uuid, account, c_name, e_name, email, password, is_supper, is_admin, code_page, department_uuid, phone, site_uuid, gender, birthday, hire_date, quit_date, is_manager, is_direct, grade, id, src_uuid, is_default_pass FROM dbo.ATTENDANT";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Basic.ATTENDANTDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Basic.ATTENDANTDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Basic.ATTENDANTDataTable dataTable = new Basic.ATTENDANTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Basic.ATTENDANTDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Basic dataSet) {
            return this.Adapter.Update(dataSet, "ATTENDANT");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_uuid, 
                    global::System.Nullable<global::System.DateTime> Original_create_date, 
                    global::System.Nullable<global::System.DateTime> Original_update_date, 
                    string Original_is_active, 
                    string Original_company_uuid, 
                    string Original_account, 
                    string Original_c_name, 
                    string Original_e_name, 
                    string Original_email, 
                    string Original_password, 
                    string Original_is_supper, 
                    string Original_is_admin, 
                    string Original_code_page, 
                    string Original_department_uuid, 
                    string Original_phone, 
                    string Original_site_uuid, 
                    string Original_gender, 
                    global::System.Nullable<global::System.DateTime> Original_birthday, 
                    global::System.Nullable<global::System.DateTime> Original_hire_date, 
                    global::System.Nullable<global::System.DateTime> Original_quit_date, 
                    string Original_is_manager, 
                    string Original_is_direct, 
                    string Original_grade, 
                    string Original_id, 
                    string Original_src_uuid, 
                    string Original_is_default_pass) {
            if ((Original_uuid == null)) {
                throw new global::System.ArgumentNullException("Original_uuid");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_uuid));
            }
            if ((Original_create_date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_create_date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_update_date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_update_date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_is_active == null)) {
                throw new global::System.ArgumentNullException("Original_is_active");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_is_active));
            }
            if ((Original_company_uuid == null)) {
                throw new global::System.ArgumentNullException("Original_company_uuid");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_company_uuid));
            }
            if ((Original_account == null)) {
                throw new global::System.ArgumentNullException("Original_account");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_account));
            }
            if ((Original_c_name == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_c_name));
            }
            if ((Original_e_name == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_e_name));
            }
            if ((Original_email == null)) {
                throw new global::System.ArgumentNullException("Original_email");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_email));
            }
            if ((Original_password == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_password));
            }
            if ((Original_is_supper == null)) {
                throw new global::System.ArgumentNullException("Original_is_supper");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_is_supper));
            }
            if ((Original_is_admin == null)) {
                throw new global::System.ArgumentNullException("Original_is_admin");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_is_admin));
            }
            if ((Original_code_page == null)) {
                throw new global::System.ArgumentNullException("Original_code_page");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_code_page));
            }
            if ((Original_department_uuid == null)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_department_uuid));
            }
            if ((Original_phone == null)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((string)(Original_phone));
            }
            if ((Original_site_uuid == null)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((string)(Original_site_uuid));
            }
            if ((Original_gender == null)) {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[25].Value = ((string)(Original_gender));
            }
            if ((Original_birthday.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[27].Value = ((System.DateTime)(Original_birthday.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Original_hire_date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[29].Value = ((System.DateTime)(Original_hire_date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Original_quit_date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[31].Value = ((System.DateTime)(Original_quit_date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((Original_is_manager == null)) {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[33].Value = ((string)(Original_is_manager));
            }
            if ((Original_is_direct == null)) {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[35].Value = ((string)(Original_is_direct));
            }
            if ((Original_grade == null)) {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[37].Value = ((string)(Original_grade));
            }
            if ((Original_id == null)) {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[39].Value = ((string)(Original_id));
            }
            if ((Original_src_uuid == null)) {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[41].Value = ((string)(Original_src_uuid));
            }
            if ((Original_is_default_pass == null)) {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[43].Value = ((string)(Original_is_default_pass));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string uuid, 
                    global::System.Nullable<global::System.DateTime> create_date, 
                    global::System.Nullable<global::System.DateTime> update_date, 
                    string is_active, 
                    string company_uuid, 
                    string account, 
                    string c_name, 
                    string e_name, 
                    string email, 
                    string password, 
                    string is_supper, 
                    string is_admin, 
                    string code_page, 
                    string department_uuid, 
                    string phone, 
                    string site_uuid, 
                    string gender, 
                    global::System.Nullable<global::System.DateTime> birthday, 
                    global::System.Nullable<global::System.DateTime> hire_date, 
                    global::System.Nullable<global::System.DateTime> quit_date, 
                    string is_manager, 
                    string is_direct, 
                    string grade, 
                    string id, 
                    string src_uuid, 
                    string is_default_pass) {
            if ((uuid == null)) {
                throw new global::System.ArgumentNullException("uuid");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(uuid));
            }
            if ((create_date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(create_date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((update_date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(update_date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((is_active == null)) {
                throw new global::System.ArgumentNullException("is_active");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(is_active));
            }
            if ((company_uuid == null)) {
                throw new global::System.ArgumentNullException("company_uuid");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(company_uuid));
            }
            if ((account == null)) {
                throw new global::System.ArgumentNullException("account");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(account));
            }
            if ((c_name == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(c_name));
            }
            if ((e_name == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(e_name));
            }
            if ((email == null)) {
                throw new global::System.ArgumentNullException("email");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(email));
            }
            if ((password == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(password));
            }
            if ((is_supper == null)) {
                throw new global::System.ArgumentNullException("is_supper");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(is_supper));
            }
            if ((is_admin == null)) {
                throw new global::System.ArgumentNullException("is_admin");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(is_admin));
            }
            if ((code_page == null)) {
                throw new global::System.ArgumentNullException("code_page");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(code_page));
            }
            if ((department_uuid == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(department_uuid));
            }
            if ((phone == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(phone));
            }
            if ((site_uuid == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(site_uuid));
            }
            if ((gender == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(gender));
            }
            if ((birthday.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((System.DateTime)(birthday.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((hire_date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((System.DateTime)(hire_date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((quit_date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((System.DateTime)(quit_date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((is_manager == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(is_manager));
            }
            if ((is_direct == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(is_direct));
            }
            if ((grade == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(grade));
            }
            if ((id == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(id));
            }
            if ((src_uuid == null)) {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(src_uuid));
            }
            if ((is_default_pass == null)) {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(is_default_pass));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string uuid, 
                    global::System.Nullable<global::System.DateTime> create_date, 
                    global::System.Nullable<global::System.DateTime> update_date, 
                    string is_active, 
                    string company_uuid, 
                    string account, 
                    string c_name, 
                    string e_name, 
                    string email, 
                    string password, 
                    string is_supper, 
                    string is_admin, 
                    string code_page, 
                    string department_uuid, 
                    string phone, 
                    string site_uuid, 
                    string gender, 
                    global::System.Nullable<global::System.DateTime> birthday, 
                    global::System.Nullable<global::System.DateTime> hire_date, 
                    global::System.Nullable<global::System.DateTime> quit_date, 
                    string is_manager, 
                    string is_direct, 
                    string grade, 
                    string id, 
                    string src_uuid, 
                    string is_default_pass, 
                    string Original_uuid, 
                    global::System.Nullable<global::System.DateTime> Original_create_date, 
                    global::System.Nullable<global::System.DateTime> Original_update_date, 
                    string Original_is_active, 
                    string Original_company_uuid, 
                    string Original_account, 
                    string Original_c_name, 
                    string Original_e_name, 
                    string Original_email, 
                    string Original_password, 
                    string Original_is_supper, 
                    string Original_is_admin, 
                    string Original_code_page, 
                    string Original_department_uuid, 
                    string Original_phone, 
                    string Original_site_uuid, 
                    string Original_gender, 
                    global::System.Nullable<global::System.DateTime> Original_birthday, 
                    global::System.Nullable<global::System.DateTime> Original_hire_date, 
                    global::System.Nullable<global::System.DateTime> Original_quit_date, 
                    string Original_is_manager, 
                    string Original_is_direct, 
                    string Original_grade, 
                    string Original_id, 
                    string Original_src_uuid, 
                    string Original_is_default_pass) {
            if ((uuid == null)) {
                throw new global::System.ArgumentNullException("uuid");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(uuid));
            }
            if ((create_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(create_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((update_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(update_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((is_active == null)) {
                throw new global::System.ArgumentNullException("is_active");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(is_active));
            }
            if ((company_uuid == null)) {
                throw new global::System.ArgumentNullException("company_uuid");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(company_uuid));
            }
            if ((account == null)) {
                throw new global::System.ArgumentNullException("account");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(account));
            }
            if ((c_name == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(c_name));
            }
            if ((e_name == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(e_name));
            }
            if ((email == null)) {
                throw new global::System.ArgumentNullException("email");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(email));
            }
            if ((password == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(password));
            }
            if ((is_supper == null)) {
                throw new global::System.ArgumentNullException("is_supper");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(is_supper));
            }
            if ((is_admin == null)) {
                throw new global::System.ArgumentNullException("is_admin");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(is_admin));
            }
            if ((code_page == null)) {
                throw new global::System.ArgumentNullException("code_page");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(code_page));
            }
            if ((department_uuid == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(department_uuid));
            }
            if ((phone == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(phone));
            }
            if ((site_uuid == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(site_uuid));
            }
            if ((gender == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(gender));
            }
            if ((birthday.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((System.DateTime)(birthday.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((hire_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((System.DateTime)(hire_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((quit_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((System.DateTime)(quit_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((is_manager == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(is_manager));
            }
            if ((is_direct == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(is_direct));
            }
            if ((grade == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(grade));
            }
            if ((id == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(id));
            }
            if ((src_uuid == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(src_uuid));
            }
            if ((is_default_pass == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(is_default_pass));
            }
            if ((Original_uuid == null)) {
                throw new global::System.ArgumentNullException("Original_uuid");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_uuid));
            }
            if ((Original_create_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((System.DateTime)(Original_create_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_update_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((System.DateTime)(Original_update_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_is_active == null)) {
                throw new global::System.ArgumentNullException("Original_is_active");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_is_active));
            }
            if ((Original_company_uuid == null)) {
                throw new global::System.ArgumentNullException("Original_company_uuid");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_company_uuid));
            }
            if ((Original_account == null)) {
                throw new global::System.ArgumentNullException("Original_account");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_account));
            }
            if ((Original_c_name == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(Original_c_name));
            }
            if ((Original_e_name == null)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(Original_e_name));
            }
            if ((Original_email == null)) {
                throw new global::System.ArgumentNullException("Original_email");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(Original_email));
            }
            if ((Original_password == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(Original_password));
            }
            if ((Original_is_supper == null)) {
                throw new global::System.ArgumentNullException("Original_is_supper");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(Original_is_supper));
            }
            if ((Original_is_admin == null)) {
                throw new global::System.ArgumentNullException("Original_is_admin");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(Original_is_admin));
            }
            if ((Original_code_page == null)) {
                throw new global::System.ArgumentNullException("Original_code_page");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(Original_code_page));
            }
            if ((Original_department_uuid == null)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(Original_department_uuid));
            }
            if ((Original_phone == null)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(Original_phone));
            }
            if ((Original_site_uuid == null)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[49].Value = ((string)(Original_site_uuid));
            }
            if ((Original_gender == null)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[51].Value = ((string)(Original_gender));
            }
            if ((Original_birthday.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[53].Value = ((System.DateTime)(Original_birthday.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((Original_hire_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[55].Value = ((System.DateTime)(Original_hire_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((Original_quit_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[57].Value = ((System.DateTime)(Original_quit_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((Original_is_manager == null)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[59].Value = ((string)(Original_is_manager));
            }
            if ((Original_is_direct == null)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[61].Value = ((string)(Original_is_direct));
            }
            if ((Original_grade == null)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[63].Value = ((string)(Original_grade));
            }
            if ((Original_id == null)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[65].Value = ((string)(Original_id));
            }
            if ((Original_src_uuid == null)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[67].Value = ((string)(Original_src_uuid));
            }
            if ((Original_is_default_pass == null)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[69].Value = ((string)(Original_is_default_pass));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<global::System.DateTime> create_date, 
                    global::System.Nullable<global::System.DateTime> update_date, 
                    string is_active, 
                    string company_uuid, 
                    string account, 
                    string c_name, 
                    string e_name, 
                    string email, 
                    string password, 
                    string is_supper, 
                    string is_admin, 
                    string code_page, 
                    string department_uuid, 
                    string phone, 
                    string site_uuid, 
                    string gender, 
                    global::System.Nullable<global::System.DateTime> birthday, 
                    global::System.Nullable<global::System.DateTime> hire_date, 
                    global::System.Nullable<global::System.DateTime> quit_date, 
                    string is_manager, 
                    string is_direct, 
                    string grade, 
                    string id, 
                    string src_uuid, 
                    string is_default_pass, 
                    string Original_uuid, 
                    global::System.Nullable<global::System.DateTime> Original_create_date, 
                    global::System.Nullable<global::System.DateTime> Original_update_date, 
                    string Original_is_active, 
                    string Original_company_uuid, 
                    string Original_account, 
                    string Original_c_name, 
                    string Original_e_name, 
                    string Original_email, 
                    string Original_password, 
                    string Original_is_supper, 
                    string Original_is_admin, 
                    string Original_code_page, 
                    string Original_department_uuid, 
                    string Original_phone, 
                    string Original_site_uuid, 
                    string Original_gender, 
                    global::System.Nullable<global::System.DateTime> Original_birthday, 
                    global::System.Nullable<global::System.DateTime> Original_hire_date, 
                    global::System.Nullable<global::System.DateTime> Original_quit_date, 
                    string Original_is_manager, 
                    string Original_is_direct, 
                    string Original_grade, 
                    string Original_id, 
                    string Original_src_uuid, 
                    string Original_is_default_pass) {
            return this.Update(Original_uuid, create_date, update_date, is_active, company_uuid, account, c_name, e_name, email, password, is_supper, is_admin, code_page, department_uuid, phone, site_uuid, gender, birthday, hire_date, quit_date, is_manager, is_direct, grade, id, src_uuid, is_default_pass, Original_uuid, Original_create_date, Original_update_date, Original_is_active, Original_company_uuid, Original_account, Original_c_name, Original_e_name, Original_email, Original_password, Original_is_supper, Original_is_admin, Original_code_page, Original_department_uuid, Original_phone, Original_site_uuid, Original_gender, Original_birthday, Original_hire_date, Original_quit_date, Original_is_manager, Original_is_direct, Original_grade, Original_id, Original_src_uuid, Original_is_default_pass);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class COMPANYTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public COMPANYTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "COMPANY";
            tableMapping.ColumnMappings.Add("uuid", "uuid");
            tableMapping.ColumnMappings.Add("create_date", "create_date");
            tableMapping.ColumnMappings.Add("update_date", "update_date");
            tableMapping.ColumnMappings.Add("is_active", "is_active");
            tableMapping.ColumnMappings.Add("class", "class");
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("c_name", "c_name");
            tableMapping.ColumnMappings.Add("e_name", "e_name");
            tableMapping.ColumnMappings.Add("voucher_point_uuid", "voucher_point_uuid");
            tableMapping.ColumnMappings.Add("week_shift", "week_shift");
            tableMapping.ColumnMappings.Add("ou_sync_type", "ou_sync_type");
            tableMapping.ColumnMappings.Add("name_zh_cn", "name_zh_cn");
            tableMapping.ColumnMappings.Add("concurrent_user", "concurrent_user");
            tableMapping.ColumnMappings.Add("expired_date", "expired_date");
            tableMapping.ColumnMappings.Add("sales_attendant_uuid", "sales_attendant_uuid");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[COMPANY] WHERE (([uuid] = @Original_uuid) AND ((@IsNull_create_date = 1 AND [create_date] IS NULL) OR ([create_date] = @Original_create_date)) AND ((@IsNull_update_date = 1 AND [update_date] IS NULL) OR ([update_date] = @Original_update_date)) AND ([is_active] = @Original_is_active) AND ([class] = @Original_class) AND ([id] = @Original_id) AND ((@IsNull_c_name = 1 AND [c_name] IS NULL) OR ([c_name] = @Original_c_name)) AND ((@IsNull_e_name = 1 AND [e_name] IS NULL) OR ([e_name] = @Original_e_name)) AND ((@IsNull_voucher_point_uuid = 1 AND [voucher_point_uuid] IS NULL) OR ([voucher_point_uuid] = @Original_voucher_point_uuid)) AND ((@IsNull_week_shift = 1 AND [week_shift] IS NULL) OR ([week_shift] = @Original_week_shift)) AND ((@IsNull_ou_sync_type = 1 AND [ou_sync_type] IS NULL) OR ([ou_sync_type] = @Original_ou_sync_type)) AND ((@IsNull_name_zh_cn = 1 AND [name_zh_cn] IS NULL) OR ([name_zh_cn] = @Original_name_zh_cn)) AND ((@IsNull_concurrent_user = 1 AND [concurrent_user] IS NULL) OR ([concurrent_user] = @Original_concurrent_user)) AND ((@IsNull_expired_date = 1 AND [expired_date] IS NULL) OR ([expired_date] = @Original_expired_date)) AND ((@IsNull_sales_attendant_uuid = 1 AND [sales_attendant_uuid] IS NULL) OR ([sales_attendant_uuid] = @Original_sales_attendant_uuid)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_create_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_create_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_update_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_update_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_active", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_active", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_class", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "class", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_c_name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "c_name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_c_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "c_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_e_name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "e_name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_e_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "e_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_voucher_point_uuid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "voucher_point_uuid", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_voucher_point_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "voucher_point_uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_week_shift", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "week_shift", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_week_shift", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "week_shift", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ou_sync_type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ou_sync_type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ou_sync_type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ou_sync_type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_name_zh_cn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name_zh_cn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_name_zh_cn", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name_zh_cn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_concurrent_user", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "concurrent_user", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_concurrent_user", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "concurrent_user", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_expired_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "expired_date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_expired_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "expired_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_sales_attendant_uuid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sales_attendant_uuid", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_sales_attendant_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sales_attendant_uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[COMPANY] ([uuid], [create_date], [update_date], [is_active], [class], [id], [c_name], [e_name], [voucher_point_uuid], [week_shift], [ou_sync_type], [name_zh_cn], [concurrent_user], [expired_date], [sales_attendant_uuid]) VALUES (@uuid, @create_date, @update_date, @is_active, @class, @id, @c_name, @e_name, @voucher_point_uuid, @week_shift, @ou_sync_type, @name_zh_cn, @concurrent_user, @expired_date, @sales_attendant_uuid);
SELECT uuid, create_date, update_date, is_active, class, id, c_name, e_name, voucher_point_uuid, week_shift, ou_sync_type, name_zh_cn, concurrent_user, expired_date, sales_attendant_uuid FROM COMPANY WHERE (uuid = @uuid)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@create_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@update_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_active", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_active", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@class", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "class", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@c_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "c_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@e_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "e_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@voucher_point_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "voucher_point_uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@week_shift", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "week_shift", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ou_sync_type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ou_sync_type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@name_zh_cn", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name_zh_cn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@concurrent_user", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "concurrent_user", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@expired_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "expired_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sales_attendant_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sales_attendant_uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[COMPANY] SET [uuid] = @uuid, [create_date] = @create_date, [update_" +
                "date] = @update_date, [is_active] = @is_active, [class] = @class, [id] = @id, [c" +
                "_name] = @c_name, [e_name] = @e_name, [voucher_point_uuid] = @voucher_point_uuid" +
                ", [week_shift] = @week_shift, [ou_sync_type] = @ou_sync_type, [name_zh_cn] = @na" +
                "me_zh_cn, [concurrent_user] = @concurrent_user, [expired_date] = @expired_date, " +
                "[sales_attendant_uuid] = @sales_attendant_uuid WHERE (([uuid] = @Original_uuid) " +
                "AND ((@IsNull_create_date = 1 AND [create_date] IS NULL) OR ([create_date] = @Or" +
                "iginal_create_date)) AND ((@IsNull_update_date = 1 AND [update_date] IS NULL) OR" +
                " ([update_date] = @Original_update_date)) AND ([is_active] = @Original_is_active" +
                ") AND ([class] = @Original_class) AND ([id] = @Original_id) AND ((@IsNull_c_name" +
                " = 1 AND [c_name] IS NULL) OR ([c_name] = @Original_c_name)) AND ((@IsNull_e_nam" +
                "e = 1 AND [e_name] IS NULL) OR ([e_name] = @Original_e_name)) AND ((@IsNull_vouc" +
                "her_point_uuid = 1 AND [voucher_point_uuid] IS NULL) OR ([voucher_point_uuid] = " +
                "@Original_voucher_point_uuid)) AND ((@IsNull_week_shift = 1 AND [week_shift] IS " +
                "NULL) OR ([week_shift] = @Original_week_shift)) AND ((@IsNull_ou_sync_type = 1 A" +
                "ND [ou_sync_type] IS NULL) OR ([ou_sync_type] = @Original_ou_sync_type)) AND ((@" +
                "IsNull_name_zh_cn = 1 AND [name_zh_cn] IS NULL) OR ([name_zh_cn] = @Original_nam" +
                "e_zh_cn)) AND ((@IsNull_concurrent_user = 1 AND [concurrent_user] IS NULL) OR ([" +
                "concurrent_user] = @Original_concurrent_user)) AND ((@IsNull_expired_date = 1 AN" +
                "D [expired_date] IS NULL) OR ([expired_date] = @Original_expired_date)) AND ((@I" +
                "sNull_sales_attendant_uuid = 1 AND [sales_attendant_uuid] IS NULL) OR ([sales_at" +
                "tendant_uuid] = @Original_sales_attendant_uuid)));\r\nSELECT uuid, create_date, up" +
                "date_date, is_active, class, id, c_name, e_name, voucher_point_uuid, week_shift," +
                " ou_sync_type, name_zh_cn, concurrent_user, expired_date, sales_attendant_uuid F" +
                "ROM COMPANY WHERE (uuid = @uuid)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@create_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@update_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_active", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_active", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@class", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "class", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@c_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "c_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@e_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "e_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@voucher_point_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "voucher_point_uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@week_shift", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "week_shift", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ou_sync_type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ou_sync_type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@name_zh_cn", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name_zh_cn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@concurrent_user", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "concurrent_user", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@expired_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "expired_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sales_attendant_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sales_attendant_uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_create_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_create_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_update_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_update_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_active", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_active", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_class", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "class", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_c_name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "c_name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_c_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "c_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_e_name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "e_name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_e_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "e_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_voucher_point_uuid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "voucher_point_uuid", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_voucher_point_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "voucher_point_uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_week_shift", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "week_shift", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_week_shift", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "week_shift", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ou_sync_type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ou_sync_type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ou_sync_type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ou_sync_type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_name_zh_cn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name_zh_cn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_name_zh_cn", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name_zh_cn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_concurrent_user", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "concurrent_user", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_concurrent_user", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "concurrent_user", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_expired_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "expired_date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_expired_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "expired_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_sales_attendant_uuid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sales_attendant_uuid", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_sales_attendant_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sales_attendant_uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::LKWebTemplate.Controller.Properties.Settings.Default.basicConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT uuid, create_date, update_date, is_active, class, id, c_name, e_name, vouc" +
                "her_point_uuid, week_shift, ou_sync_type, name_zh_cn, concurrent_user, expired_d" +
                "ate, sales_attendant_uuid FROM dbo.COMPANY";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Basic.COMPANYDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Basic.COMPANYDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Basic.COMPANYDataTable dataTable = new Basic.COMPANYDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Basic.COMPANYDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Basic dataSet) {
            return this.Adapter.Update(dataSet, "COMPANY");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_uuid, global::System.Nullable<global::System.DateTime> Original_create_date, global::System.Nullable<global::System.DateTime> Original_update_date, string Original_is_active, string Original_class, string Original_id, string Original_c_name, string Original_e_name, string Original_voucher_point_uuid, global::System.Nullable<decimal> Original_week_shift, string Original_ou_sync_type, string Original_name_zh_cn, string Original_concurrent_user, global::System.Nullable<global::System.DateTime> Original_expired_date, string Original_sales_attendant_uuid) {
            if ((Original_uuid == null)) {
                throw new global::System.ArgumentNullException("Original_uuid");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_uuid));
            }
            if ((Original_create_date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_create_date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_update_date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_update_date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_is_active == null)) {
                throw new global::System.ArgumentNullException("Original_is_active");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_is_active));
            }
            if ((Original_class == null)) {
                throw new global::System.ArgumentNullException("Original_class");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_class));
            }
            if ((Original_id == null)) {
                throw new global::System.ArgumentNullException("Original_id");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_id));
            }
            if ((Original_c_name == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_c_name));
            }
            if ((Original_e_name == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_e_name));
            }
            if ((Original_voucher_point_uuid == null)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_voucher_point_uuid));
            }
            if ((Original_week_shift.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((decimal)(Original_week_shift.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Original_ou_sync_type == null)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_ou_sync_type));
            }
            if ((Original_name_zh_cn == null)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_name_zh_cn));
            }
            if ((Original_concurrent_user == null)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((string)(Original_concurrent_user));
            }
            if ((Original_expired_date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((System.DateTime)(Original_expired_date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_sales_attendant_uuid == null)) {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[25].Value = ((string)(Original_sales_attendant_uuid));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string uuid, global::System.Nullable<global::System.DateTime> create_date, global::System.Nullable<global::System.DateTime> update_date, string is_active, string _class, string id, string c_name, string e_name, string voucher_point_uuid, global::System.Nullable<decimal> week_shift, string ou_sync_type, string name_zh_cn, string concurrent_user, global::System.Nullable<global::System.DateTime> expired_date, string sales_attendant_uuid) {
            if ((uuid == null)) {
                throw new global::System.ArgumentNullException("uuid");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(uuid));
            }
            if ((create_date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(create_date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((update_date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(update_date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((is_active == null)) {
                throw new global::System.ArgumentNullException("is_active");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(is_active));
            }
            if ((_class == null)) {
                throw new global::System.ArgumentNullException("_class");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(_class));
            }
            if ((id == null)) {
                throw new global::System.ArgumentNullException("id");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(id));
            }
            if ((c_name == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(c_name));
            }
            if ((e_name == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(e_name));
            }
            if ((voucher_point_uuid == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(voucher_point_uuid));
            }
            if ((week_shift.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(week_shift.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((ou_sync_type == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(ou_sync_type));
            }
            if ((name_zh_cn == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(name_zh_cn));
            }
            if ((concurrent_user == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(concurrent_user));
            }
            if ((expired_date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((System.DateTime)(expired_date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((sales_attendant_uuid == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(sales_attendant_uuid));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string uuid, 
                    global::System.Nullable<global::System.DateTime> create_date, 
                    global::System.Nullable<global::System.DateTime> update_date, 
                    string is_active, 
                    string _class, 
                    string id, 
                    string c_name, 
                    string e_name, 
                    string voucher_point_uuid, 
                    global::System.Nullable<decimal> week_shift, 
                    string ou_sync_type, 
                    string name_zh_cn, 
                    string concurrent_user, 
                    global::System.Nullable<global::System.DateTime> expired_date, 
                    string sales_attendant_uuid, 
                    string Original_uuid, 
                    global::System.Nullable<global::System.DateTime> Original_create_date, 
                    global::System.Nullable<global::System.DateTime> Original_update_date, 
                    string Original_is_active, 
                    string Original_class, 
                    string Original_id, 
                    string Original_c_name, 
                    string Original_e_name, 
                    string Original_voucher_point_uuid, 
                    global::System.Nullable<decimal> Original_week_shift, 
                    string Original_ou_sync_type, 
                    string Original_name_zh_cn, 
                    string Original_concurrent_user, 
                    global::System.Nullable<global::System.DateTime> Original_expired_date, 
                    string Original_sales_attendant_uuid) {
            if ((uuid == null)) {
                throw new global::System.ArgumentNullException("uuid");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(uuid));
            }
            if ((create_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(create_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((update_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(update_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((is_active == null)) {
                throw new global::System.ArgumentNullException("is_active");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(is_active));
            }
            if ((_class == null)) {
                throw new global::System.ArgumentNullException("_class");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(_class));
            }
            if ((id == null)) {
                throw new global::System.ArgumentNullException("id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(id));
            }
            if ((c_name == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(c_name));
            }
            if ((e_name == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(e_name));
            }
            if ((voucher_point_uuid == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(voucher_point_uuid));
            }
            if ((week_shift.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(week_shift.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((ou_sync_type == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(ou_sync_type));
            }
            if ((name_zh_cn == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(name_zh_cn));
            }
            if ((concurrent_user == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(concurrent_user));
            }
            if ((expired_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(expired_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((sales_attendant_uuid == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(sales_attendant_uuid));
            }
            if ((Original_uuid == null)) {
                throw new global::System.ArgumentNullException("Original_uuid");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_uuid));
            }
            if ((Original_create_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((System.DateTime)(Original_create_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Original_update_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((System.DateTime)(Original_update_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_is_active == null)) {
                throw new global::System.ArgumentNullException("Original_is_active");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_is_active));
            }
            if ((Original_class == null)) {
                throw new global::System.ArgumentNullException("Original_class");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_class));
            }
            if ((Original_id == null)) {
                throw new global::System.ArgumentNullException("Original_id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_id));
            }
            if ((Original_c_name == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_c_name));
            }
            if ((Original_e_name == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_e_name));
            }
            if ((Original_voucher_point_uuid == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_voucher_point_uuid));
            }
            if ((Original_week_shift.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((decimal)(Original_week_shift.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_ou_sync_type == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_ou_sync_type));
            }
            if ((Original_name_zh_cn == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_name_zh_cn));
            }
            if ((Original_concurrent_user == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Original_concurrent_user));
            }
            if ((Original_expired_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((System.DateTime)(Original_expired_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Original_sales_attendant_uuid == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(Original_sales_attendant_uuid));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<global::System.DateTime> create_date, 
                    global::System.Nullable<global::System.DateTime> update_date, 
                    string is_active, 
                    string _class, 
                    string id, 
                    string c_name, 
                    string e_name, 
                    string voucher_point_uuid, 
                    global::System.Nullable<decimal> week_shift, 
                    string ou_sync_type, 
                    string name_zh_cn, 
                    string concurrent_user, 
                    global::System.Nullable<global::System.DateTime> expired_date, 
                    string sales_attendant_uuid, 
                    string Original_uuid, 
                    global::System.Nullable<global::System.DateTime> Original_create_date, 
                    global::System.Nullable<global::System.DateTime> Original_update_date, 
                    string Original_is_active, 
                    string Original_class, 
                    string Original_id, 
                    string Original_c_name, 
                    string Original_e_name, 
                    string Original_voucher_point_uuid, 
                    global::System.Nullable<decimal> Original_week_shift, 
                    string Original_ou_sync_type, 
                    string Original_name_zh_cn, 
                    string Original_concurrent_user, 
                    global::System.Nullable<global::System.DateTime> Original_expired_date, 
                    string Original_sales_attendant_uuid) {
            return this.Update(Original_uuid, create_date, update_date, is_active, _class, id, c_name, e_name, voucher_point_uuid, week_shift, ou_sync_type, name_zh_cn, concurrent_user, expired_date, sales_attendant_uuid, Original_uuid, Original_create_date, Original_update_date, Original_is_active, Original_class, Original_id, Original_c_name, Original_e_name, Original_voucher_point_uuid, Original_week_shift, Original_ou_sync_type, Original_name_zh_cn, Original_concurrent_user, Original_expired_date, Original_sales_attendant_uuid);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DEPARTMENTTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DEPARTMENTTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DEPARTMENT";
            tableMapping.ColumnMappings.Add("uuid", "uuid");
            tableMapping.ColumnMappings.Add("create_date", "create_date");
            tableMapping.ColumnMappings.Add("update_date", "update_date");
            tableMapping.ColumnMappings.Add("is_active", "is_active");
            tableMapping.ColumnMappings.Add("company_uuid", "company_uuid");
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("c_name", "c_name");
            tableMapping.ColumnMappings.Add("e_name", "e_name");
            tableMapping.ColumnMappings.Add("parent_department_uuid", "parent_department_uuid");
            tableMapping.ColumnMappings.Add("manager_uuid", "manager_uuid");
            tableMapping.ColumnMappings.Add("parent_department_id", "parent_department_id");
            tableMapping.ColumnMappings.Add("manager_id", "manager_id");
            tableMapping.ColumnMappings.Add("parent_department_uuid_list", "parent_department_uuid_list");
            tableMapping.ColumnMappings.Add("s_name", "s_name");
            tableMapping.ColumnMappings.Add("cost_center", "cost_center");
            tableMapping.ColumnMappings.Add("src_uuid", "src_uuid");
            tableMapping.ColumnMappings.Add("full_department_name", "full_department_name");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[DEPARTMENT] WHERE (([uuid] = @Original_uuid) AND ((@IsNull_cre" +
                "ate_date = 1 AND [create_date] IS NULL) OR ([create_date] = @Original_create_dat" +
                "e)) AND ((@IsNull_update_date = 1 AND [update_date] IS NULL) OR ([update_date] =" +
                " @Original_update_date)) AND ([is_active] = @Original_is_active) AND ([company_u" +
                "uid] = @Original_company_uuid) AND ([id] = @Original_id) AND ((@IsNull_c_name = " +
                "1 AND [c_name] IS NULL) OR ([c_name] = @Original_c_name)) AND ((@IsNull_e_name =" +
                " 1 AND [e_name] IS NULL) OR ([e_name] = @Original_e_name)) AND ((@IsNull_parent_" +
                "department_uuid = 1 AND [parent_department_uuid] IS NULL) OR ([parent_department" +
                "_uuid] = @Original_parent_department_uuid)) AND ((@IsNull_manager_uuid = 1 AND [" +
                "manager_uuid] IS NULL) OR ([manager_uuid] = @Original_manager_uuid)) AND ((@IsNu" +
                "ll_parent_department_id = 1 AND [parent_department_id] IS NULL) OR ([parent_depa" +
                "rtment_id] = @Original_parent_department_id)) AND ((@IsNull_manager_id = 1 AND [" +
                "manager_id] IS NULL) OR ([manager_id] = @Original_manager_id)) AND ((@IsNull_par" +
                "ent_department_uuid_list = 1 AND [parent_department_uuid_list] IS NULL) OR ([par" +
                "ent_department_uuid_list] = @Original_parent_department_uuid_list)) AND ((@IsNul" +
                "l_s_name = 1 AND [s_name] IS NULL) OR ([s_name] = @Original_s_name)) AND ((@IsNu" +
                "ll_cost_center = 1 AND [cost_center] IS NULL) OR ([cost_center] = @Original_cost" +
                "_center)) AND ((@IsNull_src_uuid = 1 AND [src_uuid] IS NULL) OR ([src_uuid] = @O" +
                "riginal_src_uuid)) AND ((@IsNull_full_department_name = 1 AND [full_department_n" +
                "ame] IS NULL) OR ([full_department_name] = @Original_full_department_name)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_create_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_create_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_update_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_update_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_active", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_active", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_company_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_c_name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "c_name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_c_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "c_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_e_name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "e_name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_e_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "e_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_parent_department_uuid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "parent_department_uuid", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_parent_department_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "parent_department_uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_manager_uuid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "manager_uuid", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_manager_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "manager_uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_parent_department_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "parent_department_id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_parent_department_id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "parent_department_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_manager_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "manager_id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_manager_id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "manager_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_parent_department_uuid_list", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "parent_department_uuid_list", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_parent_department_uuid_list", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "parent_department_uuid_list", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_s_name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "s_name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_s_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "s_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_cost_center", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cost_center", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_cost_center", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cost_center", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_src_uuid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "src_uuid", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_src_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "src_uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_full_department_name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "full_department_name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_full_department_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "full_department_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[DEPARTMENT] ([uuid], [create_date], [update_date], [is_active], [company_uuid], [id], [c_name], [e_name], [parent_department_uuid], [manager_uuid], [parent_department_id], [manager_id], [parent_department_uuid_list], [s_name], [cost_center], [src_uuid], [full_department_name]) VALUES (@uuid, @create_date, @update_date, @is_active, @company_uuid, @id, @c_name, @e_name, @parent_department_uuid, @manager_uuid, @parent_department_id, @manager_id, @parent_department_uuid_list, @s_name, @cost_center, @src_uuid, @full_department_name);
SELECT uuid, create_date, update_date, is_active, company_uuid, id, c_name, e_name, parent_department_uuid, manager_uuid, parent_department_id, manager_id, parent_department_uuid_list, s_name, cost_center, src_uuid, full_department_name FROM DEPARTMENT WHERE (uuid = @uuid)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@create_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@update_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_active", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_active", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@company_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@c_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "c_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@e_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "e_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@parent_department_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "parent_department_uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@manager_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "manager_uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@parent_department_id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "parent_department_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@manager_id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "manager_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@parent_department_uuid_list", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "parent_department_uuid_list", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@s_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "s_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@cost_center", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cost_center", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@src_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "src_uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@full_department_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "full_department_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[DEPARTMENT] SET [uuid] = @uuid, [create_date] = @create_date, [upda" +
                "te_date] = @update_date, [is_active] = @is_active, [company_uuid] = @company_uui" +
                "d, [id] = @id, [c_name] = @c_name, [e_name] = @e_name, [parent_department_uuid] " +
                "= @parent_department_uuid, [manager_uuid] = @manager_uuid, [parent_department_id" +
                "] = @parent_department_id, [manager_id] = @manager_id, [parent_department_uuid_l" +
                "ist] = @parent_department_uuid_list, [s_name] = @s_name, [cost_center] = @cost_c" +
                "enter, [src_uuid] = @src_uuid, [full_department_name] = @full_department_name WH" +
                "ERE (([uuid] = @Original_uuid) AND ((@IsNull_create_date = 1 AND [create_date] I" +
                "S NULL) OR ([create_date] = @Original_create_date)) AND ((@IsNull_update_date = " +
                "1 AND [update_date] IS NULL) OR ([update_date] = @Original_update_date)) AND ([i" +
                "s_active] = @Original_is_active) AND ([company_uuid] = @Original_company_uuid) A" +
                "ND ([id] = @Original_id) AND ((@IsNull_c_name = 1 AND [c_name] IS NULL) OR ([c_n" +
                "ame] = @Original_c_name)) AND ((@IsNull_e_name = 1 AND [e_name] IS NULL) OR ([e_" +
                "name] = @Original_e_name)) AND ((@IsNull_parent_department_uuid = 1 AND [parent_" +
                "department_uuid] IS NULL) OR ([parent_department_uuid] = @Original_parent_depart" +
                "ment_uuid)) AND ((@IsNull_manager_uuid = 1 AND [manager_uuid] IS NULL) OR ([mana" +
                "ger_uuid] = @Original_manager_uuid)) AND ((@IsNull_parent_department_id = 1 AND " +
                "[parent_department_id] IS NULL) OR ([parent_department_id] = @Original_parent_de" +
                "partment_id)) AND ((@IsNull_manager_id = 1 AND [manager_id] IS NULL) OR ([manage" +
                "r_id] = @Original_manager_id)) AND ((@IsNull_parent_department_uuid_list = 1 AND" +
                " [parent_department_uuid_list] IS NULL) OR ([parent_department_uuid_list] = @Ori" +
                "ginal_parent_department_uuid_list)) AND ((@IsNull_s_name = 1 AND [s_name] IS NUL" +
                "L) OR ([s_name] = @Original_s_name)) AND ((@IsNull_cost_center = 1 AND [cost_cen" +
                "ter] IS NULL) OR ([cost_center] = @Original_cost_center)) AND ((@IsNull_src_uuid" +
                " = 1 AND [src_uuid] IS NULL) OR ([src_uuid] = @Original_src_uuid)) AND ((@IsNull" +
                "_full_department_name = 1 AND [full_department_name] IS NULL) OR ([full_departme" +
                "nt_name] = @Original_full_department_name)));\r\nSELECT uuid, create_date, update_" +
                "date, is_active, company_uuid, id, c_name, e_name, parent_department_uuid, manag" +
                "er_uuid, parent_department_id, manager_id, parent_department_uuid_list, s_name, " +
                "cost_center, src_uuid, full_department_name FROM DEPARTMENT WHERE (uuid = @uuid)" +
                "";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@create_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@update_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_active", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_active", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@company_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@c_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "c_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@e_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "e_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@parent_department_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "parent_department_uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@manager_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "manager_uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@parent_department_id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "parent_department_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@manager_id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "manager_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@parent_department_uuid_list", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "parent_department_uuid_list", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@s_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "s_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@cost_center", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cost_center", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@src_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "src_uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@full_department_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "full_department_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_create_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_create_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_update_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_update_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_active", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_active", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_company_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_c_name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "c_name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_c_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "c_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_e_name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "e_name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_e_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "e_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_parent_department_uuid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "parent_department_uuid", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_parent_department_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "parent_department_uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_manager_uuid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "manager_uuid", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_manager_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "manager_uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_parent_department_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "parent_department_id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_parent_department_id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "parent_department_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_manager_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "manager_id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_manager_id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "manager_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_parent_department_uuid_list", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "parent_department_uuid_list", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_parent_department_uuid_list", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "parent_department_uuid_list", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_s_name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "s_name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_s_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "s_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_cost_center", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cost_center", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_cost_center", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cost_center", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_src_uuid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "src_uuid", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_src_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "src_uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_full_department_name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "full_department_name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_full_department_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "full_department_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::LKWebTemplate.Controller.Properties.Settings.Default.basicConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT uuid, create_date, update_date, is_active, company_uuid, id, c_name, e_name, parent_department_uuid, manager_uuid, parent_department_id, manager_id, parent_department_uuid_list, s_name, cost_center, src_uuid, full_department_name FROM dbo.DEPARTMENT";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Basic.DEPARTMENTDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Basic.DEPARTMENTDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Basic.DEPARTMENTDataTable dataTable = new Basic.DEPARTMENTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Basic.DEPARTMENTDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Basic dataSet) {
            return this.Adapter.Update(dataSet, "DEPARTMENT");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_uuid, 
                    global::System.Nullable<global::System.DateTime> Original_create_date, 
                    global::System.Nullable<global::System.DateTime> Original_update_date, 
                    string Original_is_active, 
                    string Original_company_uuid, 
                    string Original_id, 
                    string Original_c_name, 
                    string Original_e_name, 
                    string Original_parent_department_uuid, 
                    string Original_manager_uuid, 
                    string Original_parent_department_id, 
                    string Original_manager_id, 
                    string Original_parent_department_uuid_list, 
                    string Original_s_name, 
                    string Original_cost_center, 
                    string Original_src_uuid, 
                    string Original_full_department_name) {
            if ((Original_uuid == null)) {
                throw new global::System.ArgumentNullException("Original_uuid");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_uuid));
            }
            if ((Original_create_date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_create_date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_update_date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_update_date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_is_active == null)) {
                throw new global::System.ArgumentNullException("Original_is_active");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_is_active));
            }
            if ((Original_company_uuid == null)) {
                throw new global::System.ArgumentNullException("Original_company_uuid");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_company_uuid));
            }
            if ((Original_id == null)) {
                throw new global::System.ArgumentNullException("Original_id");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_id));
            }
            if ((Original_c_name == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_c_name));
            }
            if ((Original_e_name == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_e_name));
            }
            if ((Original_parent_department_uuid == null)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_parent_department_uuid));
            }
            if ((Original_manager_uuid == null)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_manager_uuid));
            }
            if ((Original_parent_department_id == null)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_parent_department_id));
            }
            if ((Original_manager_id == null)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_manager_id));
            }
            if ((Original_parent_department_uuid_list == null)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((string)(Original_parent_department_uuid_list));
            }
            if ((Original_s_name == null)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((string)(Original_s_name));
            }
            if ((Original_cost_center == null)) {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[25].Value = ((string)(Original_cost_center));
            }
            if ((Original_src_uuid == null)) {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[27].Value = ((string)(Original_src_uuid));
            }
            if ((Original_full_department_name == null)) {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[29].Value = ((string)(Original_full_department_name));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string uuid, 
                    global::System.Nullable<global::System.DateTime> create_date, 
                    global::System.Nullable<global::System.DateTime> update_date, 
                    string is_active, 
                    string company_uuid, 
                    string id, 
                    string c_name, 
                    string e_name, 
                    string parent_department_uuid, 
                    string manager_uuid, 
                    string parent_department_id, 
                    string manager_id, 
                    string parent_department_uuid_list, 
                    string s_name, 
                    string cost_center, 
                    string src_uuid, 
                    string full_department_name) {
            if ((uuid == null)) {
                throw new global::System.ArgumentNullException("uuid");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(uuid));
            }
            if ((create_date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(create_date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((update_date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(update_date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((is_active == null)) {
                throw new global::System.ArgumentNullException("is_active");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(is_active));
            }
            if ((company_uuid == null)) {
                throw new global::System.ArgumentNullException("company_uuid");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(company_uuid));
            }
            if ((id == null)) {
                throw new global::System.ArgumentNullException("id");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(id));
            }
            if ((c_name == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(c_name));
            }
            if ((e_name == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(e_name));
            }
            if ((parent_department_uuid == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(parent_department_uuid));
            }
            if ((manager_uuid == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(manager_uuid));
            }
            if ((parent_department_id == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(parent_department_id));
            }
            if ((manager_id == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(manager_id));
            }
            if ((parent_department_uuid_list == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(parent_department_uuid_list));
            }
            if ((s_name == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(s_name));
            }
            if ((cost_center == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(cost_center));
            }
            if ((src_uuid == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(src_uuid));
            }
            if ((full_department_name == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(full_department_name));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string uuid, 
                    global::System.Nullable<global::System.DateTime> create_date, 
                    global::System.Nullable<global::System.DateTime> update_date, 
                    string is_active, 
                    string company_uuid, 
                    string id, 
                    string c_name, 
                    string e_name, 
                    string parent_department_uuid, 
                    string manager_uuid, 
                    string parent_department_id, 
                    string manager_id, 
                    string parent_department_uuid_list, 
                    string s_name, 
                    string cost_center, 
                    string src_uuid, 
                    string full_department_name, 
                    string Original_uuid, 
                    global::System.Nullable<global::System.DateTime> Original_create_date, 
                    global::System.Nullable<global::System.DateTime> Original_update_date, 
                    string Original_is_active, 
                    string Original_company_uuid, 
                    string Original_id, 
                    string Original_c_name, 
                    string Original_e_name, 
                    string Original_parent_department_uuid, 
                    string Original_manager_uuid, 
                    string Original_parent_department_id, 
                    string Original_manager_id, 
                    string Original_parent_department_uuid_list, 
                    string Original_s_name, 
                    string Original_cost_center, 
                    string Original_src_uuid, 
                    string Original_full_department_name) {
            if ((uuid == null)) {
                throw new global::System.ArgumentNullException("uuid");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(uuid));
            }
            if ((create_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(create_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((update_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(update_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((is_active == null)) {
                throw new global::System.ArgumentNullException("is_active");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(is_active));
            }
            if ((company_uuid == null)) {
                throw new global::System.ArgumentNullException("company_uuid");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(company_uuid));
            }
            if ((id == null)) {
                throw new global::System.ArgumentNullException("id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(id));
            }
            if ((c_name == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(c_name));
            }
            if ((e_name == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(e_name));
            }
            if ((parent_department_uuid == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(parent_department_uuid));
            }
            if ((manager_uuid == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(manager_uuid));
            }
            if ((parent_department_id == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(parent_department_id));
            }
            if ((manager_id == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(manager_id));
            }
            if ((parent_department_uuid_list == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(parent_department_uuid_list));
            }
            if ((s_name == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(s_name));
            }
            if ((cost_center == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(cost_center));
            }
            if ((src_uuid == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(src_uuid));
            }
            if ((full_department_name == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(full_department_name));
            }
            if ((Original_uuid == null)) {
                throw new global::System.ArgumentNullException("Original_uuid");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_uuid));
            }
            if ((Original_create_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((System.DateTime)(Original_create_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_update_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((System.DateTime)(Original_update_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_is_active == null)) {
                throw new global::System.ArgumentNullException("Original_is_active");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_is_active));
            }
            if ((Original_company_uuid == null)) {
                throw new global::System.ArgumentNullException("Original_company_uuid");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_company_uuid));
            }
            if ((Original_id == null)) {
                throw new global::System.ArgumentNullException("Original_id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_id));
            }
            if ((Original_c_name == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_c_name));
            }
            if ((Original_e_name == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_e_name));
            }
            if ((Original_parent_department_uuid == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_parent_department_uuid));
            }
            if ((Original_manager_uuid == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_manager_uuid));
            }
            if ((Original_parent_department_id == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_parent_department_id));
            }
            if ((Original_manager_id == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Original_manager_id));
            }
            if ((Original_parent_department_uuid_list == null)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(Original_parent_department_uuid_list));
            }
            if ((Original_s_name == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(Original_s_name));
            }
            if ((Original_cost_center == null)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(Original_cost_center));
            }
            if ((Original_src_uuid == null)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(Original_src_uuid));
            }
            if ((Original_full_department_name == null)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(Original_full_department_name));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<global::System.DateTime> create_date, 
                    global::System.Nullable<global::System.DateTime> update_date, 
                    string is_active, 
                    string company_uuid, 
                    string id, 
                    string c_name, 
                    string e_name, 
                    string parent_department_uuid, 
                    string manager_uuid, 
                    string parent_department_id, 
                    string manager_id, 
                    string parent_department_uuid_list, 
                    string s_name, 
                    string cost_center, 
                    string src_uuid, 
                    string full_department_name, 
                    string Original_uuid, 
                    global::System.Nullable<global::System.DateTime> Original_create_date, 
                    global::System.Nullable<global::System.DateTime> Original_update_date, 
                    string Original_is_active, 
                    string Original_company_uuid, 
                    string Original_id, 
                    string Original_c_name, 
                    string Original_e_name, 
                    string Original_parent_department_uuid, 
                    string Original_manager_uuid, 
                    string Original_parent_department_id, 
                    string Original_manager_id, 
                    string Original_parent_department_uuid_list, 
                    string Original_s_name, 
                    string Original_cost_center, 
                    string Original_src_uuid, 
                    string Original_full_department_name) {
            return this.Update(Original_uuid, create_date, update_date, is_active, company_uuid, id, c_name, e_name, parent_department_uuid, manager_uuid, parent_department_id, manager_id, parent_department_uuid_list, s_name, cost_center, src_uuid, full_department_name, Original_uuid, Original_create_date, Original_update_date, Original_is_active, Original_company_uuid, Original_id, Original_c_name, Original_e_name, Original_parent_department_uuid, Original_manager_uuid, Original_parent_department_id, Original_manager_id, Original_parent_department_uuid_list, Original_s_name, Original_cost_center, Original_src_uuid, Original_full_department_name);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class GROUP_APPMENUTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public GROUP_APPMENUTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "GROUP_APPMENU";
            tableMapping.ColumnMappings.Add("uuid", "uuid");
            tableMapping.ColumnMappings.Add("is_active", "is_active");
            tableMapping.ColumnMappings.Add("create_date", "create_date");
            tableMapping.ColumnMappings.Add("create_user", "create_user");
            tableMapping.ColumnMappings.Add("update_date", "update_date");
            tableMapping.ColumnMappings.Add("update_user", "update_user");
            tableMapping.ColumnMappings.Add("appmenu_uuid", "appmenu_uuid");
            tableMapping.ColumnMappings.Add("group_head_uuid", "group_head_uuid");
            tableMapping.ColumnMappings.Add("is_default_page", "is_default_page");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[GROUP_APPMENU] WHERE (([uuid] = @Original_uuid) AND ([is_active] = @Original_is_active) AND ([create_date] = @Original_create_date) AND ([create_user] = @Original_create_user) AND ((@IsNull_update_date = 1 AND [update_date] IS NULL) OR ([update_date] = @Original_update_date)) AND ((@IsNull_update_user = 1 AND [update_user] IS NULL) OR ([update_user] = @Original_update_user)) AND ([appmenu_uuid] = @Original_appmenu_uuid) AND ([group_head_uuid] = @Original_group_head_uuid) AND ([is_default_page] = @Original_is_default_page))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_active", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_active", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_create_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_create_user", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_user", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_update_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_update_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_update_user", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_user", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_update_user", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_user", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_appmenu_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "appmenu_uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_group_head_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "group_head_uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_default_page", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_default_page", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[GROUP_APPMENU] ([uuid], [is_active], [create_date], [create_user], [update_date], [update_user], [appmenu_uuid], [group_head_uuid], [is_default_page]) VALUES (@uuid, @is_active, @create_date, @create_user, @update_date, @update_user, @appmenu_uuid, @group_head_uuid, @is_default_page);
SELECT uuid, is_active, create_date, create_user, update_date, update_user, appmenu_uuid, group_head_uuid, is_default_page FROM GROUP_APPMENU WHERE (uuid = @uuid)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_active", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_active", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@create_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@create_user", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_user", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@update_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@update_user", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_user", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@appmenu_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "appmenu_uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@group_head_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "group_head_uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_default_page", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_default_page", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[GROUP_APPMENU] SET [uuid] = @uuid, [is_active] = @is_active, [create_date] = @create_date, [create_user] = @create_user, [update_date] = @update_date, [update_user] = @update_user, [appmenu_uuid] = @appmenu_uuid, [group_head_uuid] = @group_head_uuid, [is_default_page] = @is_default_page WHERE (([uuid] = @Original_uuid) AND ([is_active] = @Original_is_active) AND ([create_date] = @Original_create_date) AND ([create_user] = @Original_create_user) AND ((@IsNull_update_date = 1 AND [update_date] IS NULL) OR ([update_date] = @Original_update_date)) AND ((@IsNull_update_user = 1 AND [update_user] IS NULL) OR ([update_user] = @Original_update_user)) AND ([appmenu_uuid] = @Original_appmenu_uuid) AND ([group_head_uuid] = @Original_group_head_uuid) AND ([is_default_page] = @Original_is_default_page));
SELECT uuid, is_active, create_date, create_user, update_date, update_user, appmenu_uuid, group_head_uuid, is_default_page FROM GROUP_APPMENU WHERE (uuid = @uuid)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_active", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_active", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@create_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@create_user", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_user", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@update_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@update_user", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_user", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@appmenu_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "appmenu_uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@group_head_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "group_head_uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_default_page", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_default_page", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_active", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_active", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_create_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_create_user", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_user", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_update_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_update_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_update_user", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_user", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_update_user", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_user", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_appmenu_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "appmenu_uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_group_head_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "group_head_uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_default_page", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_default_page", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::LKWebTemplate.Controller.Properties.Settings.Default.basicConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT uuid, is_active, create_date, create_user, update_date, update_user, appme" +
                "nu_uuid, group_head_uuid, is_default_page FROM dbo.GROUP_APPMENU";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Basic.GROUP_APPMENUDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Basic.GROUP_APPMENUDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Basic.GROUP_APPMENUDataTable dataTable = new Basic.GROUP_APPMENUDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Basic.GROUP_APPMENUDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Basic dataSet) {
            return this.Adapter.Update(dataSet, "GROUP_APPMENU");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_uuid, string Original_is_active, System.DateTime Original_create_date, string Original_create_user, global::System.Nullable<global::System.DateTime> Original_update_date, string Original_update_user, string Original_appmenu_uuid, string Original_group_head_uuid, string Original_is_default_page) {
            if ((Original_uuid == null)) {
                throw new global::System.ArgumentNullException("Original_uuid");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_uuid));
            }
            if ((Original_is_active == null)) {
                throw new global::System.ArgumentNullException("Original_is_active");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_is_active));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_create_date));
            if ((Original_create_user == null)) {
                throw new global::System.ArgumentNullException("Original_create_user");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_create_user));
            }
            if ((Original_update_date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_update_date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Original_update_user == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_update_user));
            }
            if ((Original_appmenu_uuid == null)) {
                throw new global::System.ArgumentNullException("Original_appmenu_uuid");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_appmenu_uuid));
            }
            if ((Original_group_head_uuid == null)) {
                throw new global::System.ArgumentNullException("Original_group_head_uuid");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_group_head_uuid));
            }
            if ((Original_is_default_page == null)) {
                throw new global::System.ArgumentNullException("Original_is_default_page");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_is_default_page));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string uuid, string is_active, System.DateTime create_date, string create_user, global::System.Nullable<global::System.DateTime> update_date, string update_user, string appmenu_uuid, string group_head_uuid, string is_default_page) {
            if ((uuid == null)) {
                throw new global::System.ArgumentNullException("uuid");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(uuid));
            }
            if ((is_active == null)) {
                throw new global::System.ArgumentNullException("is_active");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(is_active));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(create_date));
            if ((create_user == null)) {
                throw new global::System.ArgumentNullException("create_user");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(create_user));
            }
            if ((update_date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(update_date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((update_user == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(update_user));
            }
            if ((appmenu_uuid == null)) {
                throw new global::System.ArgumentNullException("appmenu_uuid");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(appmenu_uuid));
            }
            if ((group_head_uuid == null)) {
                throw new global::System.ArgumentNullException("group_head_uuid");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(group_head_uuid));
            }
            if ((is_default_page == null)) {
                throw new global::System.ArgumentNullException("is_default_page");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(is_default_page));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string uuid, 
                    string is_active, 
                    System.DateTime create_date, 
                    string create_user, 
                    global::System.Nullable<global::System.DateTime> update_date, 
                    string update_user, 
                    string appmenu_uuid, 
                    string group_head_uuid, 
                    string is_default_page, 
                    string Original_uuid, 
                    string Original_is_active, 
                    System.DateTime Original_create_date, 
                    string Original_create_user, 
                    global::System.Nullable<global::System.DateTime> Original_update_date, 
                    string Original_update_user, 
                    string Original_appmenu_uuid, 
                    string Original_group_head_uuid, 
                    string Original_is_default_page) {
            if ((uuid == null)) {
                throw new global::System.ArgumentNullException("uuid");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(uuid));
            }
            if ((is_active == null)) {
                throw new global::System.ArgumentNullException("is_active");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(is_active));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(create_date));
            if ((create_user == null)) {
                throw new global::System.ArgumentNullException("create_user");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(create_user));
            }
            if ((update_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(update_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((update_user == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(update_user));
            }
            if ((appmenu_uuid == null)) {
                throw new global::System.ArgumentNullException("appmenu_uuid");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(appmenu_uuid));
            }
            if ((group_head_uuid == null)) {
                throw new global::System.ArgumentNullException("group_head_uuid");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(group_head_uuid));
            }
            if ((is_default_page == null)) {
                throw new global::System.ArgumentNullException("is_default_page");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(is_default_page));
            }
            if ((Original_uuid == null)) {
                throw new global::System.ArgumentNullException("Original_uuid");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_uuid));
            }
            if ((Original_is_active == null)) {
                throw new global::System.ArgumentNullException("Original_is_active");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_is_active));
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(Original_create_date));
            if ((Original_create_user == null)) {
                throw new global::System.ArgumentNullException("Original_create_user");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_create_user));
            }
            if ((Original_update_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(Original_update_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_update_user == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_update_user));
            }
            if ((Original_appmenu_uuid == null)) {
                throw new global::System.ArgumentNullException("Original_appmenu_uuid");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_appmenu_uuid));
            }
            if ((Original_group_head_uuid == null)) {
                throw new global::System.ArgumentNullException("Original_group_head_uuid");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_group_head_uuid));
            }
            if ((Original_is_default_page == null)) {
                throw new global::System.ArgumentNullException("Original_is_default_page");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_is_default_page));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string is_active, 
                    System.DateTime create_date, 
                    string create_user, 
                    global::System.Nullable<global::System.DateTime> update_date, 
                    string update_user, 
                    string appmenu_uuid, 
                    string group_head_uuid, 
                    string is_default_page, 
                    string Original_uuid, 
                    string Original_is_active, 
                    System.DateTime Original_create_date, 
                    string Original_create_user, 
                    global::System.Nullable<global::System.DateTime> Original_update_date, 
                    string Original_update_user, 
                    string Original_appmenu_uuid, 
                    string Original_group_head_uuid, 
                    string Original_is_default_page) {
            return this.Update(Original_uuid, is_active, create_date, create_user, update_date, update_user, appmenu_uuid, group_head_uuid, is_default_page, Original_uuid, Original_is_active, Original_create_date, Original_create_user, Original_update_date, Original_update_user, Original_appmenu_uuid, Original_group_head_uuid, Original_is_default_page);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class GROUP_ATTENDANTTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public GROUP_ATTENDANTTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "GROUP_ATTENDANT";
            tableMapping.ColumnMappings.Add("uuid", "uuid");
            tableMapping.ColumnMappings.Add("is_active", "is_active");
            tableMapping.ColumnMappings.Add("create_date", "create_date");
            tableMapping.ColumnMappings.Add("create_user", "create_user");
            tableMapping.ColumnMappings.Add("update_date", "update_date");
            tableMapping.ColumnMappings.Add("update_user", "update_user");
            tableMapping.ColumnMappings.Add("group_head_uuid", "group_head_uuid");
            tableMapping.ColumnMappings.Add("attendant_uuid", "attendant_uuid");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[GROUP_ATTENDANT] WHERE (([uuid] = @Original_uuid) AND ([is_active] = @Original_is_active) AND ([create_date] = @Original_create_date) AND ([create_user] = @Original_create_user) AND ((@IsNull_update_date = 1 AND [update_date] IS NULL) OR ([update_date] = @Original_update_date)) AND ((@IsNull_update_user = 1 AND [update_user] IS NULL) OR ([update_user] = @Original_update_user)) AND ([group_head_uuid] = @Original_group_head_uuid) AND ([attendant_uuid] = @Original_attendant_uuid))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_active", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_active", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_create_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_create_user", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_user", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_update_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_update_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_update_user", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_user", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_update_user", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_user", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_group_head_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "group_head_uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_attendant_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "attendant_uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[GROUP_ATTENDANT] ([uuid], [is_active], [create_date], [create_user], [update_date], [update_user], [group_head_uuid], [attendant_uuid]) VALUES (@uuid, @is_active, @create_date, @create_user, @update_date, @update_user, @group_head_uuid, @attendant_uuid);
SELECT uuid, is_active, create_date, create_user, update_date, update_user, group_head_uuid, attendant_uuid FROM GROUP_ATTENDANT WHERE (uuid = @uuid)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_active", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_active", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@create_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@create_user", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_user", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@update_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@update_user", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_user", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@group_head_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "group_head_uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@attendant_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "attendant_uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[GROUP_ATTENDANT] SET [uuid] = @uuid, [is_active] = @is_active, [create_date] = @create_date, [create_user] = @create_user, [update_date] = @update_date, [update_user] = @update_user, [group_head_uuid] = @group_head_uuid, [attendant_uuid] = @attendant_uuid WHERE (([uuid] = @Original_uuid) AND ([is_active] = @Original_is_active) AND ([create_date] = @Original_create_date) AND ([create_user] = @Original_create_user) AND ((@IsNull_update_date = 1 AND [update_date] IS NULL) OR ([update_date] = @Original_update_date)) AND ((@IsNull_update_user = 1 AND [update_user] IS NULL) OR ([update_user] = @Original_update_user)) AND ([group_head_uuid] = @Original_group_head_uuid) AND ([attendant_uuid] = @Original_attendant_uuid));
SELECT uuid, is_active, create_date, create_user, update_date, update_user, group_head_uuid, attendant_uuid FROM GROUP_ATTENDANT WHERE (uuid = @uuid)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_active", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_active", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@create_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@create_user", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_user", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@update_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@update_user", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_user", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@group_head_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "group_head_uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@attendant_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "attendant_uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_active", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_active", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_create_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_create_user", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_user", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_update_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_update_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_update_user", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_user", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_update_user", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_user", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_group_head_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "group_head_uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_attendant_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "attendant_uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::LKWebTemplate.Controller.Properties.Settings.Default.basicConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT uuid, is_active, create_date, create_user, update_date, update_user, group" +
                "_head_uuid, attendant_uuid FROM dbo.GROUP_ATTENDANT";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Basic.GROUP_ATTENDANTDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Basic.GROUP_ATTENDANTDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Basic.GROUP_ATTENDANTDataTable dataTable = new Basic.GROUP_ATTENDANTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Basic.GROUP_ATTENDANTDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Basic dataSet) {
            return this.Adapter.Update(dataSet, "GROUP_ATTENDANT");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_uuid, string Original_is_active, System.DateTime Original_create_date, string Original_create_user, global::System.Nullable<global::System.DateTime> Original_update_date, string Original_update_user, string Original_group_head_uuid, string Original_attendant_uuid) {
            if ((Original_uuid == null)) {
                throw new global::System.ArgumentNullException("Original_uuid");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_uuid));
            }
            if ((Original_is_active == null)) {
                throw new global::System.ArgumentNullException("Original_is_active");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_is_active));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_create_date));
            if ((Original_create_user == null)) {
                throw new global::System.ArgumentNullException("Original_create_user");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_create_user));
            }
            if ((Original_update_date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_update_date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Original_update_user == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_update_user));
            }
            if ((Original_group_head_uuid == null)) {
                throw new global::System.ArgumentNullException("Original_group_head_uuid");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_group_head_uuid));
            }
            if ((Original_attendant_uuid == null)) {
                throw new global::System.ArgumentNullException("Original_attendant_uuid");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_attendant_uuid));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string uuid, string is_active, System.DateTime create_date, string create_user, global::System.Nullable<global::System.DateTime> update_date, string update_user, string group_head_uuid, string attendant_uuid) {
            if ((uuid == null)) {
                throw new global::System.ArgumentNullException("uuid");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(uuid));
            }
            if ((is_active == null)) {
                throw new global::System.ArgumentNullException("is_active");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(is_active));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(create_date));
            if ((create_user == null)) {
                throw new global::System.ArgumentNullException("create_user");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(create_user));
            }
            if ((update_date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(update_date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((update_user == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(update_user));
            }
            if ((group_head_uuid == null)) {
                throw new global::System.ArgumentNullException("group_head_uuid");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(group_head_uuid));
            }
            if ((attendant_uuid == null)) {
                throw new global::System.ArgumentNullException("attendant_uuid");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(attendant_uuid));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string uuid, 
                    string is_active, 
                    System.DateTime create_date, 
                    string create_user, 
                    global::System.Nullable<global::System.DateTime> update_date, 
                    string update_user, 
                    string group_head_uuid, 
                    string attendant_uuid, 
                    string Original_uuid, 
                    string Original_is_active, 
                    System.DateTime Original_create_date, 
                    string Original_create_user, 
                    global::System.Nullable<global::System.DateTime> Original_update_date, 
                    string Original_update_user, 
                    string Original_group_head_uuid, 
                    string Original_attendant_uuid) {
            if ((uuid == null)) {
                throw new global::System.ArgumentNullException("uuid");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(uuid));
            }
            if ((is_active == null)) {
                throw new global::System.ArgumentNullException("is_active");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(is_active));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(create_date));
            if ((create_user == null)) {
                throw new global::System.ArgumentNullException("create_user");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(create_user));
            }
            if ((update_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(update_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((update_user == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(update_user));
            }
            if ((group_head_uuid == null)) {
                throw new global::System.ArgumentNullException("group_head_uuid");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(group_head_uuid));
            }
            if ((attendant_uuid == null)) {
                throw new global::System.ArgumentNullException("attendant_uuid");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(attendant_uuid));
            }
            if ((Original_uuid == null)) {
                throw new global::System.ArgumentNullException("Original_uuid");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_uuid));
            }
            if ((Original_is_active == null)) {
                throw new global::System.ArgumentNullException("Original_is_active");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_is_active));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(Original_create_date));
            if ((Original_create_user == null)) {
                throw new global::System.ArgumentNullException("Original_create_user");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_create_user));
            }
            if ((Original_update_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(Original_update_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_update_user == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_update_user));
            }
            if ((Original_group_head_uuid == null)) {
                throw new global::System.ArgumentNullException("Original_group_head_uuid");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_group_head_uuid));
            }
            if ((Original_attendant_uuid == null)) {
                throw new global::System.ArgumentNullException("Original_attendant_uuid");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_attendant_uuid));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string is_active, System.DateTime create_date, string create_user, global::System.Nullable<global::System.DateTime> update_date, string update_user, string group_head_uuid, string attendant_uuid, string Original_uuid, string Original_is_active, System.DateTime Original_create_date, string Original_create_user, global::System.Nullable<global::System.DateTime> Original_update_date, string Original_update_user, string Original_group_head_uuid, string Original_attendant_uuid) {
            return this.Update(Original_uuid, is_active, create_date, create_user, update_date, update_user, group_head_uuid, attendant_uuid, Original_uuid, Original_is_active, Original_create_date, Original_create_user, Original_update_date, Original_update_user, Original_group_head_uuid, Original_attendant_uuid);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class GROUP_HEADTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public GROUP_HEADTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "GROUP_HEAD";
            tableMapping.ColumnMappings.Add("uuid", "uuid");
            tableMapping.ColumnMappings.Add("create_date", "create_date");
            tableMapping.ColumnMappings.Add("update_date", "update_date");
            tableMapping.ColumnMappings.Add("is_active", "is_active");
            tableMapping.ColumnMappings.Add("name_zh_tw", "name_zh_tw");
            tableMapping.ColumnMappings.Add("name_zh_cn", "name_zh_cn");
            tableMapping.ColumnMappings.Add("name_en_us", "name_en_us");
            tableMapping.ColumnMappings.Add("company_uuid", "company_uuid");
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("create_user", "create_user");
            tableMapping.ColumnMappings.Add("update_user", "update_user");
            tableMapping.ColumnMappings.Add("application_head_uuid", "application_head_uuid");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[GROUP_HEAD] WHERE (([uuid] = @Original_uuid) AND ([create_date] = @Original_create_date) AND ((@IsNull_update_date = 1 AND [update_date] IS NULL) OR ([update_date] = @Original_update_date)) AND ([is_active] = @Original_is_active) AND ([name_zh_tw] = @Original_name_zh_tw) AND ([name_zh_cn] = @Original_name_zh_cn) AND ([name_en_us] = @Original_name_en_us) AND ([company_uuid] = @Original_company_uuid) AND ([id] = @Original_id) AND ([create_user] = @Original_create_user) AND ((@IsNull_update_user = 1 AND [update_user] IS NULL) OR ([update_user] = @Original_update_user)) AND ([application_head_uuid] = @Original_application_head_uuid))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_create_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_update_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_update_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_active", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_active", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_name_zh_tw", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name_zh_tw", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_name_zh_cn", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name_zh_cn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_name_en_us", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name_en_us", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_company_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_create_user", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_user", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_update_user", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_user", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_update_user", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_user", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_application_head_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "application_head_uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[GROUP_HEAD] ([uuid], [create_date], [update_date], [is_active], [name_zh_tw], [name_zh_cn], [name_en_us], [company_uuid], [id], [create_user], [update_user], [application_head_uuid]) VALUES (@uuid, @create_date, @update_date, @is_active, @name_zh_tw, @name_zh_cn, @name_en_us, @company_uuid, @id, @create_user, @update_user, @application_head_uuid);
SELECT uuid, create_date, update_date, is_active, name_zh_tw, name_zh_cn, name_en_us, company_uuid, id, create_user, update_user, application_head_uuid FROM GROUP_HEAD WHERE (uuid = @uuid)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@create_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@update_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_active", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_active", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@name_zh_tw", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name_zh_tw", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@name_zh_cn", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name_zh_cn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@name_en_us", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name_en_us", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@company_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@create_user", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_user", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@update_user", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_user", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@application_head_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "application_head_uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[GROUP_HEAD] SET [uuid] = @uuid, [create_date] = @create_date, [update_date] = @update_date, [is_active] = @is_active, [name_zh_tw] = @name_zh_tw, [name_zh_cn] = @name_zh_cn, [name_en_us] = @name_en_us, [company_uuid] = @company_uuid, [id] = @id, [create_user] = @create_user, [update_user] = @update_user, [application_head_uuid] = @application_head_uuid WHERE (([uuid] = @Original_uuid) AND ([create_date] = @Original_create_date) AND ((@IsNull_update_date = 1 AND [update_date] IS NULL) OR ([update_date] = @Original_update_date)) AND ([is_active] = @Original_is_active) AND ([name_zh_tw] = @Original_name_zh_tw) AND ([name_zh_cn] = @Original_name_zh_cn) AND ([name_en_us] = @Original_name_en_us) AND ([company_uuid] = @Original_company_uuid) AND ([id] = @Original_id) AND ([create_user] = @Original_create_user) AND ((@IsNull_update_user = 1 AND [update_user] IS NULL) OR ([update_user] = @Original_update_user)) AND ([application_head_uuid] = @Original_application_head_uuid));
SELECT uuid, create_date, update_date, is_active, name_zh_tw, name_zh_cn, name_en_us, company_uuid, id, create_user, update_user, application_head_uuid FROM GROUP_HEAD WHERE (uuid = @uuid)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@create_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@update_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_active", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_active", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@name_zh_tw", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name_zh_tw", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@name_zh_cn", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name_zh_cn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@name_en_us", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name_en_us", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@company_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@create_user", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_user", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@update_user", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_user", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@application_head_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "application_head_uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_create_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_update_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_update_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_active", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_active", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_name_zh_tw", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name_zh_tw", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_name_zh_cn", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name_zh_cn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_name_en_us", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name_en_us", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_company_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_create_user", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_user", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_update_user", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_user", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_update_user", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_user", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_application_head_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "application_head_uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::LKWebTemplate.Controller.Properties.Settings.Default.basicConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT uuid, create_date, update_date, is_active, name_zh_tw, name_zh_cn, name_en" +
                "_us, company_uuid, id, create_user, update_user, application_head_uuid FROM dbo." +
                "GROUP_HEAD";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Basic.GROUP_HEADDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Basic.GROUP_HEADDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Basic.GROUP_HEADDataTable dataTable = new Basic.GROUP_HEADDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Basic.GROUP_HEADDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Basic dataSet) {
            return this.Adapter.Update(dataSet, "GROUP_HEAD");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_uuid, System.DateTime Original_create_date, global::System.Nullable<global::System.DateTime> Original_update_date, string Original_is_active, string Original_name_zh_tw, string Original_name_zh_cn, string Original_name_en_us, string Original_company_uuid, string Original_id, string Original_create_user, string Original_update_user, string Original_application_head_uuid) {
            if ((Original_uuid == null)) {
                throw new global::System.ArgumentNullException("Original_uuid");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_uuid));
            }
            this.Adapter.DeleteCommand.Parameters[1].Value = ((System.DateTime)(Original_create_date));
            if ((Original_update_date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_update_date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Original_is_active == null)) {
                throw new global::System.ArgumentNullException("Original_is_active");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_is_active));
            }
            if ((Original_name_zh_tw == null)) {
                throw new global::System.ArgumentNullException("Original_name_zh_tw");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_name_zh_tw));
            }
            if ((Original_name_zh_cn == null)) {
                throw new global::System.ArgumentNullException("Original_name_zh_cn");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_name_zh_cn));
            }
            if ((Original_name_en_us == null)) {
                throw new global::System.ArgumentNullException("Original_name_en_us");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_name_en_us));
            }
            if ((Original_company_uuid == null)) {
                throw new global::System.ArgumentNullException("Original_company_uuid");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_company_uuid));
            }
            if ((Original_id == null)) {
                throw new global::System.ArgumentNullException("Original_id");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_id));
            }
            if ((Original_create_user == null)) {
                throw new global::System.ArgumentNullException("Original_create_user");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_create_user));
            }
            if ((Original_update_user == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_update_user));
            }
            if ((Original_application_head_uuid == null)) {
                throw new global::System.ArgumentNullException("Original_application_head_uuid");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_application_head_uuid));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string uuid, System.DateTime create_date, global::System.Nullable<global::System.DateTime> update_date, string is_active, string name_zh_tw, string name_zh_cn, string name_en_us, string company_uuid, string id, string create_user, string update_user, string application_head_uuid) {
            if ((uuid == null)) {
                throw new global::System.ArgumentNullException("uuid");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(uuid));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(create_date));
            if ((update_date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(update_date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((is_active == null)) {
                throw new global::System.ArgumentNullException("is_active");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(is_active));
            }
            if ((name_zh_tw == null)) {
                throw new global::System.ArgumentNullException("name_zh_tw");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(name_zh_tw));
            }
            if ((name_zh_cn == null)) {
                throw new global::System.ArgumentNullException("name_zh_cn");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(name_zh_cn));
            }
            if ((name_en_us == null)) {
                throw new global::System.ArgumentNullException("name_en_us");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(name_en_us));
            }
            if ((company_uuid == null)) {
                throw new global::System.ArgumentNullException("company_uuid");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(company_uuid));
            }
            if ((id == null)) {
                throw new global::System.ArgumentNullException("id");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(id));
            }
            if ((create_user == null)) {
                throw new global::System.ArgumentNullException("create_user");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(create_user));
            }
            if ((update_user == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(update_user));
            }
            if ((application_head_uuid == null)) {
                throw new global::System.ArgumentNullException("application_head_uuid");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(application_head_uuid));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string uuid, 
                    System.DateTime create_date, 
                    global::System.Nullable<global::System.DateTime> update_date, 
                    string is_active, 
                    string name_zh_tw, 
                    string name_zh_cn, 
                    string name_en_us, 
                    string company_uuid, 
                    string id, 
                    string create_user, 
                    string update_user, 
                    string application_head_uuid, 
                    string Original_uuid, 
                    System.DateTime Original_create_date, 
                    global::System.Nullable<global::System.DateTime> Original_update_date, 
                    string Original_is_active, 
                    string Original_name_zh_tw, 
                    string Original_name_zh_cn, 
                    string Original_name_en_us, 
                    string Original_company_uuid, 
                    string Original_id, 
                    string Original_create_user, 
                    string Original_update_user, 
                    string Original_application_head_uuid) {
            if ((uuid == null)) {
                throw new global::System.ArgumentNullException("uuid");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(uuid));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(create_date));
            if ((update_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(update_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((is_active == null)) {
                throw new global::System.ArgumentNullException("is_active");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(is_active));
            }
            if ((name_zh_tw == null)) {
                throw new global::System.ArgumentNullException("name_zh_tw");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(name_zh_tw));
            }
            if ((name_zh_cn == null)) {
                throw new global::System.ArgumentNullException("name_zh_cn");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(name_zh_cn));
            }
            if ((name_en_us == null)) {
                throw new global::System.ArgumentNullException("name_en_us");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(name_en_us));
            }
            if ((company_uuid == null)) {
                throw new global::System.ArgumentNullException("company_uuid");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(company_uuid));
            }
            if ((id == null)) {
                throw new global::System.ArgumentNullException("id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(id));
            }
            if ((create_user == null)) {
                throw new global::System.ArgumentNullException("create_user");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(create_user));
            }
            if ((update_user == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(update_user));
            }
            if ((application_head_uuid == null)) {
                throw new global::System.ArgumentNullException("application_head_uuid");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(application_head_uuid));
            }
            if ((Original_uuid == null)) {
                throw new global::System.ArgumentNullException("Original_uuid");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_uuid));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(Original_create_date));
            if ((Original_update_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((System.DateTime)(Original_update_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Original_is_active == null)) {
                throw new global::System.ArgumentNullException("Original_is_active");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_is_active));
            }
            if ((Original_name_zh_tw == null)) {
                throw new global::System.ArgumentNullException("Original_name_zh_tw");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_name_zh_tw));
            }
            if ((Original_name_zh_cn == null)) {
                throw new global::System.ArgumentNullException("Original_name_zh_cn");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_name_zh_cn));
            }
            if ((Original_name_en_us == null)) {
                throw new global::System.ArgumentNullException("Original_name_en_us");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_name_en_us));
            }
            if ((Original_company_uuid == null)) {
                throw new global::System.ArgumentNullException("Original_company_uuid");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_company_uuid));
            }
            if ((Original_id == null)) {
                throw new global::System.ArgumentNullException("Original_id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_id));
            }
            if ((Original_create_user == null)) {
                throw new global::System.ArgumentNullException("Original_create_user");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_create_user));
            }
            if ((Original_update_user == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_update_user));
            }
            if ((Original_application_head_uuid == null)) {
                throw new global::System.ArgumentNullException("Original_application_head_uuid");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_application_head_uuid));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.DateTime create_date, 
                    global::System.Nullable<global::System.DateTime> update_date, 
                    string is_active, 
                    string name_zh_tw, 
                    string name_zh_cn, 
                    string name_en_us, 
                    string company_uuid, 
                    string id, 
                    string create_user, 
                    string update_user, 
                    string application_head_uuid, 
                    string Original_uuid, 
                    System.DateTime Original_create_date, 
                    global::System.Nullable<global::System.DateTime> Original_update_date, 
                    string Original_is_active, 
                    string Original_name_zh_tw, 
                    string Original_name_zh_cn, 
                    string Original_name_en_us, 
                    string Original_company_uuid, 
                    string Original_id, 
                    string Original_create_user, 
                    string Original_update_user, 
                    string Original_application_head_uuid) {
            return this.Update(Original_uuid, create_date, update_date, is_active, name_zh_tw, name_zh_cn, name_en_us, company_uuid, id, create_user, update_user, application_head_uuid, Original_uuid, Original_create_date, Original_update_date, Original_is_active, Original_name_zh_tw, Original_name_zh_cn, Original_name_en_us, Original_company_uuid, Original_id, Original_create_user, Original_update_user, Original_application_head_uuid);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SITETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SITETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SITE";
            tableMapping.ColumnMappings.Add("uuid", "uuid");
            tableMapping.ColumnMappings.Add("create_date", "create_date");
            tableMapping.ColumnMappings.Add("update_date", "update_date");
            tableMapping.ColumnMappings.Add("is_active", "is_active");
            tableMapping.ColumnMappings.Add("company_uuid", "company_uuid");
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("c_name", "c_name");
            tableMapping.ColumnMappings.Add("e_name", "e_name");
            tableMapping.ColumnMappings.Add("parent_site_uuid", "parent_site_uuid");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[SITE] WHERE (([uuid] = @Original_uuid) AND ((@IsNull_create_date = 1 AND [create_date] IS NULL) OR ([create_date] = @Original_create_date)) AND ((@IsNull_update_date = 1 AND [update_date] IS NULL) OR ([update_date] = @Original_update_date)) AND ([is_active] = @Original_is_active) AND ([company_uuid] = @Original_company_uuid) AND ([id] = @Original_id) AND ((@IsNull_c_name = 1 AND [c_name] IS NULL) OR ([c_name] = @Original_c_name)) AND ((@IsNull_e_name = 1 AND [e_name] IS NULL) OR ([e_name] = @Original_e_name)) AND ((@IsNull_parent_site_uuid = 1 AND [parent_site_uuid] IS NULL) OR ([parent_site_uuid] = @Original_parent_site_uuid)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_create_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_create_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_update_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_update_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_active", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_active", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_company_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_c_name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "c_name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_c_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "c_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_e_name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "e_name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_e_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "e_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_parent_site_uuid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "parent_site_uuid", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_parent_site_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "parent_site_uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[SITE] ([uuid], [create_date], [update_date], [is_active], [company_uuid], [id], [c_name], [e_name], [parent_site_uuid]) VALUES (@uuid, @create_date, @update_date, @is_active, @company_uuid, @id, @c_name, @e_name, @parent_site_uuid);
SELECT uuid, create_date, update_date, is_active, company_uuid, id, c_name, e_name, parent_site_uuid FROM SITE WHERE (uuid = @uuid)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@create_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@update_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_active", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_active", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@company_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@c_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "c_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@e_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "e_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@parent_site_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "parent_site_uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[SITE] SET [uuid] = @uuid, [create_date] = @create_date, [update_date] = @update_date, [is_active] = @is_active, [company_uuid] = @company_uuid, [id] = @id, [c_name] = @c_name, [e_name] = @e_name, [parent_site_uuid] = @parent_site_uuid WHERE (([uuid] = @Original_uuid) AND ((@IsNull_create_date = 1 AND [create_date] IS NULL) OR ([create_date] = @Original_create_date)) AND ((@IsNull_update_date = 1 AND [update_date] IS NULL) OR ([update_date] = @Original_update_date)) AND ([is_active] = @Original_is_active) AND ([company_uuid] = @Original_company_uuid) AND ([id] = @Original_id) AND ((@IsNull_c_name = 1 AND [c_name] IS NULL) OR ([c_name] = @Original_c_name)) AND ((@IsNull_e_name = 1 AND [e_name] IS NULL) OR ([e_name] = @Original_e_name)) AND ((@IsNull_parent_site_uuid = 1 AND [parent_site_uuid] IS NULL) OR ([parent_site_uuid] = @Original_parent_site_uuid)));
SELECT uuid, create_date, update_date, is_active, company_uuid, id, c_name, e_name, parent_site_uuid FROM SITE WHERE (uuid = @uuid)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@create_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@update_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_active", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_active", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@company_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@c_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "c_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@e_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "e_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@parent_site_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "parent_site_uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_create_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_create_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_update_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_update_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_active", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_active", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_company_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_c_name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "c_name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_c_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "c_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_e_name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "e_name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_e_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "e_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_parent_site_uuid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "parent_site_uuid", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_parent_site_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "parent_site_uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::LKWebTemplate.Controller.Properties.Settings.Default.basicConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT uuid, create_date, update_date, is_active, company_uuid, id, c_name, e_nam" +
                "e, parent_site_uuid FROM dbo.SITE";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Basic.SITEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Basic.SITEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Basic.SITEDataTable dataTable = new Basic.SITEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Basic.SITEDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Basic dataSet) {
            return this.Adapter.Update(dataSet, "SITE");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_uuid, global::System.Nullable<global::System.DateTime> Original_create_date, global::System.Nullable<global::System.DateTime> Original_update_date, string Original_is_active, string Original_company_uuid, string Original_id, string Original_c_name, string Original_e_name, string Original_parent_site_uuid) {
            if ((Original_uuid == null)) {
                throw new global::System.ArgumentNullException("Original_uuid");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_uuid));
            }
            if ((Original_create_date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_create_date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_update_date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_update_date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_is_active == null)) {
                throw new global::System.ArgumentNullException("Original_is_active");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_is_active));
            }
            if ((Original_company_uuid == null)) {
                throw new global::System.ArgumentNullException("Original_company_uuid");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_company_uuid));
            }
            if ((Original_id == null)) {
                throw new global::System.ArgumentNullException("Original_id");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_id));
            }
            if ((Original_c_name == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_c_name));
            }
            if ((Original_e_name == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_e_name));
            }
            if ((Original_parent_site_uuid == null)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_parent_site_uuid));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string uuid, global::System.Nullable<global::System.DateTime> create_date, global::System.Nullable<global::System.DateTime> update_date, string is_active, string company_uuid, string id, string c_name, string e_name, string parent_site_uuid) {
            if ((uuid == null)) {
                throw new global::System.ArgumentNullException("uuid");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(uuid));
            }
            if ((create_date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(create_date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((update_date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(update_date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((is_active == null)) {
                throw new global::System.ArgumentNullException("is_active");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(is_active));
            }
            if ((company_uuid == null)) {
                throw new global::System.ArgumentNullException("company_uuid");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(company_uuid));
            }
            if ((id == null)) {
                throw new global::System.ArgumentNullException("id");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(id));
            }
            if ((c_name == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(c_name));
            }
            if ((e_name == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(e_name));
            }
            if ((parent_site_uuid == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(parent_site_uuid));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string uuid, 
                    global::System.Nullable<global::System.DateTime> create_date, 
                    global::System.Nullable<global::System.DateTime> update_date, 
                    string is_active, 
                    string company_uuid, 
                    string id, 
                    string c_name, 
                    string e_name, 
                    string parent_site_uuid, 
                    string Original_uuid, 
                    global::System.Nullable<global::System.DateTime> Original_create_date, 
                    global::System.Nullable<global::System.DateTime> Original_update_date, 
                    string Original_is_active, 
                    string Original_company_uuid, 
                    string Original_id, 
                    string Original_c_name, 
                    string Original_e_name, 
                    string Original_parent_site_uuid) {
            if ((uuid == null)) {
                throw new global::System.ArgumentNullException("uuid");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(uuid));
            }
            if ((create_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(create_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((update_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(update_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((is_active == null)) {
                throw new global::System.ArgumentNullException("is_active");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(is_active));
            }
            if ((company_uuid == null)) {
                throw new global::System.ArgumentNullException("company_uuid");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(company_uuid));
            }
            if ((id == null)) {
                throw new global::System.ArgumentNullException("id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(id));
            }
            if ((c_name == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(c_name));
            }
            if ((e_name == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(e_name));
            }
            if ((parent_site_uuid == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(parent_site_uuid));
            }
            if ((Original_uuid == null)) {
                throw new global::System.ArgumentNullException("Original_uuid");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_uuid));
            }
            if ((Original_create_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(Original_create_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_update_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(Original_update_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_is_active == null)) {
                throw new global::System.ArgumentNullException("Original_is_active");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_is_active));
            }
            if ((Original_company_uuid == null)) {
                throw new global::System.ArgumentNullException("Original_company_uuid");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_company_uuid));
            }
            if ((Original_id == null)) {
                throw new global::System.ArgumentNullException("Original_id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_id));
            }
            if ((Original_c_name == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_c_name));
            }
            if ((Original_e_name == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_e_name));
            }
            if ((Original_parent_site_uuid == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_parent_site_uuid));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<global::System.DateTime> create_date, 
                    global::System.Nullable<global::System.DateTime> update_date, 
                    string is_active, 
                    string company_uuid, 
                    string id, 
                    string c_name, 
                    string e_name, 
                    string parent_site_uuid, 
                    string Original_uuid, 
                    global::System.Nullable<global::System.DateTime> Original_create_date, 
                    global::System.Nullable<global::System.DateTime> Original_update_date, 
                    string Original_is_active, 
                    string Original_company_uuid, 
                    string Original_id, 
                    string Original_c_name, 
                    string Original_e_name, 
                    string Original_parent_site_uuid) {
            return this.Update(Original_uuid, create_date, update_date, is_active, company_uuid, id, c_name, e_name, parent_site_uuid, Original_uuid, Original_create_date, Original_update_date, Original_is_active, Original_company_uuid, Original_id, Original_c_name, Original_e_name, Original_parent_site_uuid);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class attendant_vTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public attendant_vTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "attendant_v";
            tableMapping.ColumnMappings.Add("company_id", "company_id");
            tableMapping.ColumnMappings.Add("company_c_name", "company_c_name");
            tableMapping.ColumnMappings.Add("company_e_name", "company_e_name");
            tableMapping.ColumnMappings.Add("department_id", "department_id");
            tableMapping.ColumnMappings.Add("department_c_name", "department_c_name");
            tableMapping.ColumnMappings.Add("department_e_name", "department_e_name");
            tableMapping.ColumnMappings.Add("site_id", "site_id");
            tableMapping.ColumnMappings.Add("site_c_name", "site_c_name");
            tableMapping.ColumnMappings.Add("site_e_name", "site_e_name");
            tableMapping.ColumnMappings.Add("UUID", "UUID");
            tableMapping.ColumnMappings.Add("CREATE_DATE", "CREATE_DATE");
            tableMapping.ColumnMappings.Add("UPDATE_DATE", "UPDATE_DATE");
            tableMapping.ColumnMappings.Add("IS_ACTIVE", "IS_ACTIVE");
            tableMapping.ColumnMappings.Add("COMPANY_UUID", "COMPANY_UUID");
            tableMapping.ColumnMappings.Add("ACCOUNT", "ACCOUNT");
            tableMapping.ColumnMappings.Add("C_NAME", "C_NAME");
            tableMapping.ColumnMappings.Add("E_NAME", "E_NAME");
            tableMapping.ColumnMappings.Add("EMAIL", "EMAIL");
            tableMapping.ColumnMappings.Add("PASSWORD", "PASSWORD");
            tableMapping.ColumnMappings.Add("IS_SUPPER", "IS_SUPPER");
            tableMapping.ColumnMappings.Add("IS_ADMIN", "IS_ADMIN");
            tableMapping.ColumnMappings.Add("CODE_PAGE", "CODE_PAGE");
            tableMapping.ColumnMappings.Add("DEPARTMENT_UUID", "DEPARTMENT_UUID");
            tableMapping.ColumnMappings.Add("PHONE", "PHONE");
            tableMapping.ColumnMappings.Add("SITE_UUID", "SITE_UUID");
            tableMapping.ColumnMappings.Add("GENDER", "GENDER");
            tableMapping.ColumnMappings.Add("BIRTHDAY", "BIRTHDAY");
            tableMapping.ColumnMappings.Add("HIRE_DATE", "HIRE_DATE");
            tableMapping.ColumnMappings.Add("QUIT_DATE", "QUIT_DATE");
            tableMapping.ColumnMappings.Add("IS_MANAGER", "IS_MANAGER");
            tableMapping.ColumnMappings.Add("IS_DIRECT", "IS_DIRECT");
            tableMapping.ColumnMappings.Add("GRADE", "GRADE");
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("IS_DEFAULT_PASS", "IS_DEFAULT_PASS");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::LKWebTemplate.Controller.Properties.Settings.Default.basicConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT company_id, company_c_name, company_e_name, department_id, department_c_name, department_e_name, site_id, site_c_name, site_e_name, UUID, CREATE_DATE, UPDATE_DATE, IS_ACTIVE, COMPANY_UUID, ACCOUNT, C_NAME, E_NAME, EMAIL, PASSWORD, IS_SUPPER, IS_ADMIN, CODE_PAGE, DEPARTMENT_UUID, PHONE, SITE_UUID, GENDER, BIRTHDAY, HIRE_DATE, QUIT_DATE, IS_MANAGER, IS_DIRECT, GRADE, ID, IS_DEFAULT_PASS FROM dbo.attendant_v";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Basic.attendant_vDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Basic.attendant_vDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Basic.attendant_vDataTable dataTable = new Basic.attendant_vDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class sitemap_vTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sitemap_vTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "sitemap_v";
            tableMapping.ColumnMappings.Add("UUID", "UUID");
            tableMapping.ColumnMappings.Add("IS_ACTIVE", "IS_ACTIVE");
            tableMapping.ColumnMappings.Add("CREATE_DATE", "CREATE_DATE");
            tableMapping.ColumnMappings.Add("CREATE_USER", "CREATE_USER");
            tableMapping.ColumnMappings.Add("UPDATE_DATE", "UPDATE_DATE");
            tableMapping.ColumnMappings.Add("UPDATE_USER", "UPDATE_USER");
            tableMapping.ColumnMappings.Add("SITEMAP_UUID", "SITEMAP_UUID");
            tableMapping.ColumnMappings.Add("APPPAGE_UUID", "APPPAGE_UUID");
            tableMapping.ColumnMappings.Add("ROOT_UUID", "ROOT_UUID");
            tableMapping.ColumnMappings.Add("HASCHILD", "HASCHILD");
            tableMapping.ColumnMappings.Add("APPLICATION_HEAD_UUID", "APPLICATION_HEAD_UUID");
            tableMapping.ColumnMappings.Add("name", "name");
            tableMapping.ColumnMappings.Add("description", "description");
            tableMapping.ColumnMappings.Add("url", "url");
            tableMapping.ColumnMappings.Add("p_mode", "p_mode");
            tableMapping.ColumnMappings.Add("parameter_class", "parameter_class");
            tableMapping.ColumnMappings.Add("apppage_is_active", "apppage_is_active");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::LKWebTemplate.Controller.Properties.Settings.Default.basicConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT UUID, IS_ACTIVE, CREATE_DATE, CREATE_USER, UPDATE_DATE, UPDATE_USER, SITEM" +
                "AP_UUID, APPPAGE_UUID, ROOT_UUID, HASCHILD, APPLICATION_HEAD_UUID, name, descrip" +
                "tion, url, p_mode, parameter_class, apppage_is_active FROM dbo.sitemap_v";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Basic.sitemap_vDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Basic.sitemap_vDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Basic.sitemap_vDataTable dataTable = new Basic.sitemap_vDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class group_head_vTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public group_head_vTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "group_head_v";
            tableMapping.ColumnMappings.Add("uuid", "uuid");
            tableMapping.ColumnMappings.Add("create_date", "create_date");
            tableMapping.ColumnMappings.Add("update_date", "update_date");
            tableMapping.ColumnMappings.Add("is_group_active", "is_group_active");
            tableMapping.ColumnMappings.Add("name_zh_tw", "name_zh_tw");
            tableMapping.ColumnMappings.Add("name_zh_cn", "name_zh_cn");
            tableMapping.ColumnMappings.Add("name_en_us", "name_en_us");
            tableMapping.ColumnMappings.Add("company_uuid", "company_uuid");
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("create_user", "create_user");
            tableMapping.ColumnMappings.Add("update_user", "update_user");
            tableMapping.ColumnMappings.Add("application_head_uuid", "application_head_uuid");
            tableMapping.ColumnMappings.Add("application_id", "application_id");
            tableMapping.ColumnMappings.Add("application_name", "application_name");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::LKWebTemplate.Controller.Properties.Settings.Default.basicConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT uuid, create_date, update_date, is_group_active, name_zh_tw, name_zh_cn, n" +
                "ame_en_us, company_uuid, id, create_user, update_user, application_head_uuid, ap" +
                "plication_id, application_name FROM dbo.group_head_v";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Basic.group_head_vDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Basic.group_head_vDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Basic.group_head_vDataTable dataTable = new Basic.group_head_vDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class group_attendant_vTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public group_attendant_vTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "group_attendant_v";
            tableMapping.ColumnMappings.Add("group_name_zh_tw", "group_name_zh_tw");
            tableMapping.ColumnMappings.Add("group_name_zh_cn", "group_name_zh_cn");
            tableMapping.ColumnMappings.Add("group_name_en_us", "group_name_en_us");
            tableMapping.ColumnMappings.Add("is_group_active", "is_group_active");
            tableMapping.ColumnMappings.Add("company_uuid", "company_uuid");
            tableMapping.ColumnMappings.Add("company_id", "company_id");
            tableMapping.ColumnMappings.Add("company_c_name", "company_c_name");
            tableMapping.ColumnMappings.Add("company_e_name", "company_e_name");
            tableMapping.ColumnMappings.Add("group_id", "group_id");
            tableMapping.ColumnMappings.Add("application_head_uuid", "application_head_uuid");
            tableMapping.ColumnMappings.Add("attendant_c_name", "attendant_c_name");
            tableMapping.ColumnMappings.Add("attendant_E_name", "attendant_E_name");
            tableMapping.ColumnMappings.Add("account", "account");
            tableMapping.ColumnMappings.Add("email", "email");
            tableMapping.ColumnMappings.Add("is_attendant_active", "is_attendant_active");
            tableMapping.ColumnMappings.Add("UUID", "UUID");
            tableMapping.ColumnMappings.Add("CREATE_DATE", "CREATE_DATE");
            tableMapping.ColumnMappings.Add("UPDATE_DATE", "UPDATE_DATE");
            tableMapping.ColumnMappings.Add("IS_ACTIVE", "IS_ACTIVE");
            tableMapping.ColumnMappings.Add("group_head_uuid", "group_head_uuid");
            tableMapping.ColumnMappings.Add("attendant_uuid", "attendant_uuid");
            tableMapping.ColumnMappings.Add("DEPARTMENT_UUID", "DEPARTMENT_UUID");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::LKWebTemplate.Controller.Properties.Settings.Default.basicConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT group_name_zh_tw, group_name_zh_cn, group_name_en_us, is_group_active, company_uuid, company_id, company_c_name, company_e_name, group_id, application_head_uuid, attendant_c_name, attendant_E_name, account, email, is_attendant_active, UUID, CREATE_DATE, UPDATE_DATE, IS_ACTIVE, group_head_uuid, attendant_uuid, DEPARTMENT_UUID FROM dbo.group_attendant_v";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Basic.group_attendant_vDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Basic.group_attendant_vDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Basic.group_attendant_vDataTable dataTable = new Basic.group_attendant_vDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class appmenu_apppage_vTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public appmenu_apppage_vTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "appmenu_apppage_v";
            tableMapping.ColumnMappings.Add("UUID", "UUID");
            tableMapping.ColumnMappings.Add("IS_ACTIVE", "IS_ACTIVE");
            tableMapping.ColumnMappings.Add("CREATE_DATE", "CREATE_DATE");
            tableMapping.ColumnMappings.Add("CREATE_USER", "CREATE_USER");
            tableMapping.ColumnMappings.Add("UPDATE_DATE", "UPDATE_DATE");
            tableMapping.ColumnMappings.Add("UPDATE_USER", "UPDATE_USER");
            tableMapping.ColumnMappings.Add("NAME_ZH_TW", "NAME_ZH_TW");
            tableMapping.ColumnMappings.Add("NAME_ZH_CN", "NAME_ZH_CN");
            tableMapping.ColumnMappings.Add("NAME_EN_US", "NAME_EN_US");
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("APPMENU_UUID", "APPMENU_UUID");
            tableMapping.ColumnMappings.Add("HASCHILD", "HASCHILD");
            tableMapping.ColumnMappings.Add("APPLICATION_HEAD_UUID", "APPLICATION_HEAD_UUID");
            tableMapping.ColumnMappings.Add("ORD", "ORD");
            tableMapping.ColumnMappings.Add("PARAMETER_CLASS", "PARAMETER_CLASS");
            tableMapping.ColumnMappings.Add("IMAGE", "IMAGE");
            tableMapping.ColumnMappings.Add("SITEMAP_UUID", "SITEMAP_UUID");
            tableMapping.ColumnMappings.Add("ACTION_MODE", "ACTION_MODE");
            tableMapping.ColumnMappings.Add("IS_DEFAULT_PAGE", "IS_DEFAULT_PAGE");
            tableMapping.ColumnMappings.Add("IS_ADMIN", "IS_ADMIN");
            tableMapping.ColumnMappings.Add("url", "url");
            tableMapping.ColumnMappings.Add("description", "description");
            tableMapping.ColumnMappings.Add("func_name", "func_name");
            tableMapping.ColumnMappings.Add("func_parameter_class", "func_parameter_class");
            tableMapping.ColumnMappings.Add("p_mode", "p_mode");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::LKWebTemplate.Controller.Properties.Settings.Default.basicConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT UUID, IS_ACTIVE, CREATE_DATE, CREATE_USER, UPDATE_DATE, UPDATE_USER, NAME_ZH_TW, NAME_ZH_CN, NAME_EN_US, ID, APPMENU_UUID, HASCHILD, APPLICATION_HEAD_UUID, ORD, PARAMETER_CLASS, IMAGE, SITEMAP_UUID, ACTION_MODE, IS_DEFAULT_PAGE, IS_ADMIN, url, description, func_name, func_parameter_class, p_mode FROM dbo.appmenu_apppage_v";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Basic.appmenu_apppage_vDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Basic.appmenu_apppage_vDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Basic.appmenu_apppage_vDataTable dataTable = new Basic.appmenu_apppage_vDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class group_appmenu_vTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public group_appmenu_vTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "group_appmenu_v";
            tableMapping.ColumnMappings.Add("UUID", "UUID");
            tableMapping.ColumnMappings.Add("IS_ACTIVE", "IS_ACTIVE");
            tableMapping.ColumnMappings.Add("CREATE_DATE", "CREATE_DATE");
            tableMapping.ColumnMappings.Add("CREATE_USER", "CREATE_USER");
            tableMapping.ColumnMappings.Add("UPDATE_DATE", "UPDATE_DATE");
            tableMapping.ColumnMappings.Add("UPDATE_USER", "UPDATE_USER");
            tableMapping.ColumnMappings.Add("APPMENU_UUID", "APPMENU_UUID");
            tableMapping.ColumnMappings.Add("GROUP_HEAD_UUID", "GROUP_HEAD_UUID");
            tableMapping.ColumnMappings.Add("IS_DEFAULT_PAGE", "IS_DEFAULT_PAGE");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::LKWebTemplate.Controller.Properties.Settings.Default.basicConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT UUID, IS_ACTIVE, CREATE_DATE, CREATE_USER, UPDATE_DATE, UPDATE_USER, APPME" +
                "NU_UUID, GROUP_HEAD_UUID, IS_DEFAULT_PAGE FROM dbo.group_appmenu_v";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Basic.group_appmenu_vDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Basic.group_appmenu_vDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Basic.group_appmenu_vDataTable dataTable = new Basic.group_appmenu_vDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class authority_menu_vTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public authority_menu_vTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "authority_menu_v";
            tableMapping.ColumnMappings.Add("is_user_default_page", "is_user_default_page");
            tableMapping.ColumnMappings.Add("UUID", "UUID");
            tableMapping.ColumnMappings.Add("IS_ACTIVE", "IS_ACTIVE");
            tableMapping.ColumnMappings.Add("CREATE_DATE", "CREATE_DATE");
            tableMapping.ColumnMappings.Add("CREATE_USER", "CREATE_USER");
            tableMapping.ColumnMappings.Add("UPDATE_DATE", "UPDATE_DATE");
            tableMapping.ColumnMappings.Add("UPDATE_USER", "UPDATE_USER");
            tableMapping.ColumnMappings.Add("NAME_ZH_TW", "NAME_ZH_TW");
            tableMapping.ColumnMappings.Add("NAME_ZH_CN", "NAME_ZH_CN");
            tableMapping.ColumnMappings.Add("NAME_EN_US", "NAME_EN_US");
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("APPMENU_UUID", "APPMENU_UUID");
            tableMapping.ColumnMappings.Add("HASCHILD", "HASCHILD");
            tableMapping.ColumnMappings.Add("APPLICATION_HEAD_UUID", "APPLICATION_HEAD_UUID");
            tableMapping.ColumnMappings.Add("ORD", "ORD");
            tableMapping.ColumnMappings.Add("PARAMETER_CLASS", "PARAMETER_CLASS");
            tableMapping.ColumnMappings.Add("IMAGE", "IMAGE");
            tableMapping.ColumnMappings.Add("SITEMAP_UUID", "SITEMAP_UUID");
            tableMapping.ColumnMappings.Add("ACTION_MODE", "ACTION_MODE");
            tableMapping.ColumnMappings.Add("IS_DEFAULT_PAGE", "IS_DEFAULT_PAGE");
            tableMapping.ColumnMappings.Add("IS_ADMIN", "IS_ADMIN");
            tableMapping.ColumnMappings.Add("ATTENDANT_UUID", "ATTENDANT_UUID");
            tableMapping.ColumnMappings.Add("APPLICATION_NAME", "APPLICATION_NAME");
            tableMapping.ColumnMappings.Add("url", "url");
            tableMapping.ColumnMappings.Add("func_parameter_class", "func_parameter_class");
            tableMapping.ColumnMappings.Add("p_mode", "p_mode");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::LKWebTemplate.Controller.Properties.Settings.Default.basicConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT is_user_default_page, UUID, IS_ACTIVE, CREATE_DATE, CREATE_USER, UPDATE_DATE, UPDATE_USER, NAME_ZH_TW, NAME_ZH_CN, NAME_EN_US, ID, APPMENU_UUID, HASCHILD, APPLICATION_HEAD_UUID, ORD, PARAMETER_CLASS, IMAGE, SITEMAP_UUID, ACTION_MODE, IS_DEFAULT_PAGE, IS_ADMIN, ATTENDANT_UUID, APPLICATION_NAME, url, func_parameter_class, p_mode FROM dbo.authority_menu_v";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Basic.authority_menu_vDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Basic.authority_menu_vDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Basic.authority_menu_vDataTable dataTable = new Basic.authority_menu_vDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ERROR_LOGTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ERROR_LOGTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ERROR_LOG";
            tableMapping.ColumnMappings.Add("uuid", "uuid");
            tableMapping.ColumnMappings.Add("create_date", "create_date");
            tableMapping.ColumnMappings.Add("update_date", "update_date");
            tableMapping.ColumnMappings.Add("is_active", "is_active");
            tableMapping.ColumnMappings.Add("error_code", "error_code");
            tableMapping.ColumnMappings.Add("error_time", "error_time");
            tableMapping.ColumnMappings.Add("error_message", "error_message");
            tableMapping.ColumnMappings.Add("application_name", "application_name");
            tableMapping.ColumnMappings.Add("attendant_uuid", "attendant_uuid");
            tableMapping.ColumnMappings.Add("error_type", "error_type");
            tableMapping.ColumnMappings.Add("is_read", "is_read");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[ERROR_LOG] WHERE (([uuid] = @Original_uuid) AND ((@IsNull_create_date = 1 AND [create_date] IS NULL) OR ([create_date] = @Original_create_date)) AND ((@IsNull_update_date = 1 AND [update_date] IS NULL) OR ([update_date] = @Original_update_date)) AND ([is_active] = @Original_is_active) AND ([error_code] = @Original_error_code) AND ([error_time] = @Original_error_time) AND ((@IsNull_application_name = 1 AND [application_name] IS NULL) OR ([application_name] = @Original_application_name)) AND ((@IsNull_attendant_uuid = 1 AND [attendant_uuid] IS NULL) OR ([attendant_uuid] = @Original_attendant_uuid)) AND ((@IsNull_error_type = 1 AND [error_type] IS NULL) OR ([error_type] = @Original_error_type)) AND ((@IsNull_is_read = 1 AND [is_read] IS NULL) OR ([is_read] = @Original_is_read)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_create_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_create_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_update_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_update_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_active", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_active", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_error_code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "error_code", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_error_time", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "error_time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_application_name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "application_name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_application_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "application_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_attendant_uuid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "attendant_uuid", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_attendant_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "attendant_uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_error_type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "error_type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_error_type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "error_type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_is_read", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_read", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_read", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_read", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[ERROR_LOG] ([uuid], [create_date], [update_date], [is_active], [error_code], [error_time], [error_message], [application_name], [attendant_uuid], [error_type], [is_read]) VALUES (@uuid, @create_date, @update_date, @is_active, @error_code, @error_time, @error_message, @application_name, @attendant_uuid, @error_type, @is_read);
SELECT uuid, create_date, update_date, is_active, error_code, error_time, error_message, application_name, attendant_uuid, error_type, is_read FROM ERROR_LOG WHERE (uuid = @uuid)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@create_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@update_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_active", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_active", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@error_code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "error_code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@error_time", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "error_time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@error_message", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "error_message", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@application_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "application_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@attendant_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "attendant_uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@error_type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "error_type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_read", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_read", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[ERROR_LOG] SET [uuid] = @uuid, [create_date] = @create_date, [update_date] = @update_date, [is_active] = @is_active, [error_code] = @error_code, [error_time] = @error_time, [error_message] = @error_message, [application_name] = @application_name, [attendant_uuid] = @attendant_uuid, [error_type] = @error_type, [is_read] = @is_read WHERE (([uuid] = @Original_uuid) AND ((@IsNull_create_date = 1 AND [create_date] IS NULL) OR ([create_date] = @Original_create_date)) AND ((@IsNull_update_date = 1 AND [update_date] IS NULL) OR ([update_date] = @Original_update_date)) AND ([is_active] = @Original_is_active) AND ([error_code] = @Original_error_code) AND ([error_time] = @Original_error_time) AND ((@IsNull_application_name = 1 AND [application_name] IS NULL) OR ([application_name] = @Original_application_name)) AND ((@IsNull_attendant_uuid = 1 AND [attendant_uuid] IS NULL) OR ([attendant_uuid] = @Original_attendant_uuid)) AND ((@IsNull_error_type = 1 AND [error_type] IS NULL) OR ([error_type] = @Original_error_type)) AND ((@IsNull_is_read = 1 AND [is_read] IS NULL) OR ([is_read] = @Original_is_read)));
SELECT uuid, create_date, update_date, is_active, error_code, error_time, error_message, application_name, attendant_uuid, error_type, is_read FROM ERROR_LOG WHERE (uuid = @uuid)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@create_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@update_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_active", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_active", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@error_code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "error_code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@error_time", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "error_time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@error_message", global::System.Data.SqlDbType.Text, 0, global::System.Data.ParameterDirection.Input, 0, 0, "error_message", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@application_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "application_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@attendant_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "attendant_uuid", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@error_type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "error_type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_read", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_read", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_create_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_create_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "create_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_update_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_update_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "update_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_active", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_active", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_error_code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "error_code", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_error_time", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "error_time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_application_name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "application_name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_application_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "application_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_attendant_uuid", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "attendant_uuid", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_attendant_uuid", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "attendant_uuid", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_error_type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "error_type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_error_type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "error_type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_is_read", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_read", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_read", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_read", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::LKWebTemplate.Controller.Properties.Settings.Default.basicConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT uuid, create_date, update_date, is_active, error_code, error_time, error_m" +
                "essage, application_name, attendant_uuid, error_type, is_read FROM dbo.ERROR_LOG" +
                "";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Basic.ERROR_LOGDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Basic.ERROR_LOGDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Basic.ERROR_LOGDataTable dataTable = new Basic.ERROR_LOGDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Basic.ERROR_LOGDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(Basic dataSet) {
            return this.Adapter.Update(dataSet, "ERROR_LOG");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_uuid, global::System.Nullable<global::System.DateTime> Original_create_date, global::System.Nullable<global::System.DateTime> Original_update_date, string Original_is_active, string Original_error_code, string Original_error_time, string Original_application_name, string Original_attendant_uuid, string Original_error_type, string Original_is_read) {
            if ((Original_uuid == null)) {
                throw new global::System.ArgumentNullException("Original_uuid");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_uuid));
            }
            if ((Original_create_date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_create_date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_update_date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_update_date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_is_active == null)) {
                throw new global::System.ArgumentNullException("Original_is_active");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_is_active));
            }
            if ((Original_error_code == null)) {
                throw new global::System.ArgumentNullException("Original_error_code");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_error_code));
            }
            if ((Original_error_time == null)) {
                throw new global::System.ArgumentNullException("Original_error_time");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_error_time));
            }
            if ((Original_application_name == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_application_name));
            }
            if ((Original_attendant_uuid == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_attendant_uuid));
            }
            if ((Original_error_type == null)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_error_type));
            }
            if ((Original_is_read == null)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_is_read));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string uuid, global::System.Nullable<global::System.DateTime> create_date, global::System.Nullable<global::System.DateTime> update_date, string is_active, string error_code, string error_time, string error_message, string application_name, string attendant_uuid, string error_type, string is_read) {
            if ((uuid == null)) {
                throw new global::System.ArgumentNullException("uuid");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(uuid));
            }
            if ((create_date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(create_date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((update_date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(update_date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((is_active == null)) {
                throw new global::System.ArgumentNullException("is_active");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(is_active));
            }
            if ((error_code == null)) {
                throw new global::System.ArgumentNullException("error_code");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(error_code));
            }
            if ((error_time == null)) {
                throw new global::System.ArgumentNullException("error_time");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(error_time));
            }
            if ((error_message == null)) {
                throw new global::System.ArgumentNullException("error_message");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(error_message));
            }
            if ((application_name == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(application_name));
            }
            if ((attendant_uuid == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(attendant_uuid));
            }
            if ((error_type == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(error_type));
            }
            if ((is_read == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(is_read));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string uuid, 
                    global::System.Nullable<global::System.DateTime> create_date, 
                    global::System.Nullable<global::System.DateTime> update_date, 
                    string is_active, 
                    string error_code, 
                    string error_time, 
                    string error_message, 
                    string application_name, 
                    string attendant_uuid, 
                    string error_type, 
                    string is_read, 
                    string Original_uuid, 
                    global::System.Nullable<global::System.DateTime> Original_create_date, 
                    global::System.Nullable<global::System.DateTime> Original_update_date, 
                    string Original_is_active, 
                    string Original_error_code, 
                    string Original_error_time, 
                    string Original_application_name, 
                    string Original_attendant_uuid, 
                    string Original_error_type, 
                    string Original_is_read) {
            if ((uuid == null)) {
                throw new global::System.ArgumentNullException("uuid");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(uuid));
            }
            if ((create_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(create_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((update_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(update_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((is_active == null)) {
                throw new global::System.ArgumentNullException("is_active");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(is_active));
            }
            if ((error_code == null)) {
                throw new global::System.ArgumentNullException("error_code");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(error_code));
            }
            if ((error_time == null)) {
                throw new global::System.ArgumentNullException("error_time");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(error_time));
            }
            if ((error_message == null)) {
                throw new global::System.ArgumentNullException("error_message");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(error_message));
            }
            if ((application_name == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(application_name));
            }
            if ((attendant_uuid == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(attendant_uuid));
            }
            if ((error_type == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(error_type));
            }
            if ((is_read == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(is_read));
            }
            if ((Original_uuid == null)) {
                throw new global::System.ArgumentNullException("Original_uuid");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_uuid));
            }
            if ((Original_create_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(Original_create_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_update_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((System.DateTime)(Original_update_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Original_is_active == null)) {
                throw new global::System.ArgumentNullException("Original_is_active");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_is_active));
            }
            if ((Original_error_code == null)) {
                throw new global::System.ArgumentNullException("Original_error_code");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_error_code));
            }
            if ((Original_error_time == null)) {
                throw new global::System.ArgumentNullException("Original_error_time");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_error_time));
            }
            if ((Original_application_name == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_application_name));
            }
            if ((Original_attendant_uuid == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_attendant_uuid));
            }
            if ((Original_error_type == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_error_type));
            }
            if ((Original_is_read == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_is_read));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<global::System.DateTime> create_date, 
                    global::System.Nullable<global::System.DateTime> update_date, 
                    string is_active, 
                    string error_code, 
                    string error_time, 
                    string error_message, 
                    string application_name, 
                    string attendant_uuid, 
                    string error_type, 
                    string is_read, 
                    string Original_uuid, 
                    global::System.Nullable<global::System.DateTime> Original_create_date, 
                    global::System.Nullable<global::System.DateTime> Original_update_date, 
                    string Original_is_active, 
                    string Original_error_code, 
                    string Original_error_time, 
                    string Original_application_name, 
                    string Original_attendant_uuid, 
                    string Original_error_type, 
                    string Original_is_read) {
            return this.Update(Original_uuid, create_date, update_date, is_active, error_code, error_time, error_message, application_name, attendant_uuid, error_type, is_read, Original_uuid, Original_create_date, Original_update_date, Original_is_active, Original_error_code, Original_error_time, Original_application_name, Original_attendant_uuid, Original_error_type, Original_is_read);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class error_log_vTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public error_log_vTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "error_log_v";
            tableMapping.ColumnMappings.Add("uuid", "uuid");
            tableMapping.ColumnMappings.Add("create_date", "create_date");
            tableMapping.ColumnMappings.Add("update_date", "update_date");
            tableMapping.ColumnMappings.Add("is_active", "is_active");
            tableMapping.ColumnMappings.Add("error_code", "error_code");
            tableMapping.ColumnMappings.Add("error_time", "error_time");
            tableMapping.ColumnMappings.Add("error_message", "error_message");
            tableMapping.ColumnMappings.Add("application_name", "application_name");
            tableMapping.ColumnMappings.Add("attendant_uuid", "attendant_uuid");
            tableMapping.ColumnMappings.Add("error_type", "error_type");
            tableMapping.ColumnMappings.Add("is_read", "is_read");
            tableMapping.ColumnMappings.Add("c_name", "c_name");
            tableMapping.ColumnMappings.Add("e_name", "e_name");
            tableMapping.ColumnMappings.Add("id", "id");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::LKWebTemplate.Controller.Properties.Settings.Default.basicConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT uuid, create_date, update_date, is_active, error_code, error_time, error_m" +
                "essage, application_name, attendant_uuid, error_type, is_read, c_name, e_name, i" +
                "d FROM dbo.error_log_v";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(Basic.error_log_vDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual Basic.error_log_vDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            Basic.error_log_vDataTable dataTable = new Basic.error_log_vDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private APPLICATION_HEADTableAdapter _aPPLICATION_HEADTableAdapter;
        
        private SITEMAPTableAdapter _sITEMAPTableAdapter;
        
        private APPMENUTableAdapter _aPPMENUTableAdapter;
        
        private APPPAGETableAdapter _aPPPAGETableAdapter;
        
        private ATTENDANTTableAdapter _aTTENDANTTableAdapter;
        
        private COMPANYTableAdapter _cOMPANYTableAdapter;
        
        private DEPARTMENTTableAdapter _dEPARTMENTTableAdapter;
        
        private GROUP_APPMENUTableAdapter _gROUP_APPMENUTableAdapter;
        
        private GROUP_ATTENDANTTableAdapter _gROUP_ATTENDANTTableAdapter;
        
        private GROUP_HEADTableAdapter _gROUP_HEADTableAdapter;
        
        private SITETableAdapter _sITETableAdapter;
        
        private ERROR_LOGTableAdapter _eRROR_LOGTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public APPLICATION_HEADTableAdapter APPLICATION_HEADTableAdapter {
            get {
                return this._aPPLICATION_HEADTableAdapter;
            }
            set {
                this._aPPLICATION_HEADTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public SITEMAPTableAdapter SITEMAPTableAdapter {
            get {
                return this._sITEMAPTableAdapter;
            }
            set {
                this._sITEMAPTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public APPMENUTableAdapter APPMENUTableAdapter {
            get {
                return this._aPPMENUTableAdapter;
            }
            set {
                this._aPPMENUTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public APPPAGETableAdapter APPPAGETableAdapter {
            get {
                return this._aPPPAGETableAdapter;
            }
            set {
                this._aPPPAGETableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public ATTENDANTTableAdapter ATTENDANTTableAdapter {
            get {
                return this._aTTENDANTTableAdapter;
            }
            set {
                this._aTTENDANTTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public COMPANYTableAdapter COMPANYTableAdapter {
            get {
                return this._cOMPANYTableAdapter;
            }
            set {
                this._cOMPANYTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public DEPARTMENTTableAdapter DEPARTMENTTableAdapter {
            get {
                return this._dEPARTMENTTableAdapter;
            }
            set {
                this._dEPARTMENTTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public GROUP_APPMENUTableAdapter GROUP_APPMENUTableAdapter {
            get {
                return this._gROUP_APPMENUTableAdapter;
            }
            set {
                this._gROUP_APPMENUTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public GROUP_ATTENDANTTableAdapter GROUP_ATTENDANTTableAdapter {
            get {
                return this._gROUP_ATTENDANTTableAdapter;
            }
            set {
                this._gROUP_ATTENDANTTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public GROUP_HEADTableAdapter GROUP_HEADTableAdapter {
            get {
                return this._gROUP_HEADTableAdapter;
            }
            set {
                this._gROUP_HEADTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public SITETableAdapter SITETableAdapter {
            get {
                return this._sITETableAdapter;
            }
            set {
                this._sITETableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public ERROR_LOGTableAdapter ERROR_LOGTableAdapter {
            get {
                return this._eRROR_LOGTableAdapter;
            }
            set {
                this._eRROR_LOGTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._aPPLICATION_HEADTableAdapter != null) 
                            && (this._aPPLICATION_HEADTableAdapter.Connection != null))) {
                    return this._aPPLICATION_HEADTableAdapter.Connection;
                }
                if (((this._sITEMAPTableAdapter != null) 
                            && (this._sITEMAPTableAdapter.Connection != null))) {
                    return this._sITEMAPTableAdapter.Connection;
                }
                if (((this._aPPMENUTableAdapter != null) 
                            && (this._aPPMENUTableAdapter.Connection != null))) {
                    return this._aPPMENUTableAdapter.Connection;
                }
                if (((this._aPPPAGETableAdapter != null) 
                            && (this._aPPPAGETableAdapter.Connection != null))) {
                    return this._aPPPAGETableAdapter.Connection;
                }
                if (((this._aTTENDANTTableAdapter != null) 
                            && (this._aTTENDANTTableAdapter.Connection != null))) {
                    return this._aTTENDANTTableAdapter.Connection;
                }
                if (((this._cOMPANYTableAdapter != null) 
                            && (this._cOMPANYTableAdapter.Connection != null))) {
                    return this._cOMPANYTableAdapter.Connection;
                }
                if (((this._dEPARTMENTTableAdapter != null) 
                            && (this._dEPARTMENTTableAdapter.Connection != null))) {
                    return this._dEPARTMENTTableAdapter.Connection;
                }
                if (((this._gROUP_APPMENUTableAdapter != null) 
                            && (this._gROUP_APPMENUTableAdapter.Connection != null))) {
                    return this._gROUP_APPMENUTableAdapter.Connection;
                }
                if (((this._gROUP_ATTENDANTTableAdapter != null) 
                            && (this._gROUP_ATTENDANTTableAdapter.Connection != null))) {
                    return this._gROUP_ATTENDANTTableAdapter.Connection;
                }
                if (((this._gROUP_HEADTableAdapter != null) 
                            && (this._gROUP_HEADTableAdapter.Connection != null))) {
                    return this._gROUP_HEADTableAdapter.Connection;
                }
                if (((this._sITETableAdapter != null) 
                            && (this._sITETableAdapter.Connection != null))) {
                    return this._sITETableAdapter.Connection;
                }
                if (((this._eRROR_LOGTableAdapter != null) 
                            && (this._eRROR_LOGTableAdapter.Connection != null))) {
                    return this._eRROR_LOGTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._aPPLICATION_HEADTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._sITEMAPTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._aPPMENUTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._aPPPAGETableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._aTTENDANTTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._cOMPANYTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._dEPARTMENTTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._gROUP_APPMENUTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._gROUP_ATTENDANTTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._gROUP_HEADTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._sITETableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._eRROR_LOGTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateUpdatedRows(Basic dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._cOMPANYTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.COMPANY.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._cOMPANYTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._sITETableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.SITE.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    this.SortSelfReferenceRows(updatedRows, dataSet.Relations["SITE_FK2"], false);
                    result = (result + this._sITETableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._aTTENDANTTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ATTENDANT.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._aTTENDANTTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._dEPARTMENTTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.DEPARTMENT.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    this.SortSelfReferenceRows(updatedRows, dataSet.Relations["DEPARTMENT_FK2"], false);
                    result = (result + this._dEPARTMENTTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._aPPLICATION_HEADTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.APPLICATION_HEAD.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._aPPLICATION_HEADTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._aPPPAGETableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.APPPAGE.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._aPPPAGETableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._sITEMAPTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.SITEMAP.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    this.SortSelfReferenceRows(updatedRows, dataSet.Relations["SITEMAP_SITEMAP_FK1"], false);
                    // Note: More than one self-referenced relation found.  The generated code may not work correctly.
                    this.SortSelfReferenceRows(updatedRows, dataSet.Relations["SITEMAP_SITEMAP_FK2"], false);
                    result = (result + this._sITEMAPTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._gROUP_HEADTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.GROUP_HEAD.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._gROUP_HEADTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._aPPMENUTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.APPMENU.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    this.SortSelfReferenceRows(updatedRows, dataSet.Relations["APPMENU_APPMENU_FK1"], false);
                    result = (result + this._aPPMENUTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._eRROR_LOGTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ERROR_LOG.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._eRROR_LOGTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._gROUP_APPMENUTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.GROUP_APPMENU.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._gROUP_APPMENUTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._gROUP_ATTENDANTTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.GROUP_ATTENDANT.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._gROUP_ATTENDANTTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateInsertedRows(Basic dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._cOMPANYTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.COMPANY.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._cOMPANYTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._sITETableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.SITE.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    this.SortSelfReferenceRows(addedRows, dataSet.Relations["SITE_FK2"], false);
                    result = (result + this._sITETableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._aTTENDANTTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ATTENDANT.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._aTTENDANTTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._dEPARTMENTTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.DEPARTMENT.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    this.SortSelfReferenceRows(addedRows, dataSet.Relations["DEPARTMENT_FK2"], false);
                    result = (result + this._dEPARTMENTTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._aPPLICATION_HEADTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.APPLICATION_HEAD.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._aPPLICATION_HEADTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._aPPPAGETableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.APPPAGE.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._aPPPAGETableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._sITEMAPTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.SITEMAP.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    this.SortSelfReferenceRows(addedRows, dataSet.Relations["SITEMAP_SITEMAP_FK1"], false);
                    // Note: More than one self-referenced relation found.  The generated code may not work correctly.
                    this.SortSelfReferenceRows(addedRows, dataSet.Relations["SITEMAP_SITEMAP_FK2"], false);
                    result = (result + this._sITEMAPTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._gROUP_HEADTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.GROUP_HEAD.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._gROUP_HEADTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._aPPMENUTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.APPMENU.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    this.SortSelfReferenceRows(addedRows, dataSet.Relations["APPMENU_APPMENU_FK1"], false);
                    result = (result + this._aPPMENUTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._eRROR_LOGTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ERROR_LOG.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._eRROR_LOGTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._gROUP_APPMENUTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.GROUP_APPMENU.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._gROUP_APPMENUTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._gROUP_ATTENDANTTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.GROUP_ATTENDANT.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._gROUP_ATTENDANTTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateDeletedRows(Basic dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._gROUP_ATTENDANTTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.GROUP_ATTENDANT.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._gROUP_ATTENDANTTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._gROUP_APPMENUTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.GROUP_APPMENU.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._gROUP_APPMENUTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._eRROR_LOGTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ERROR_LOG.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._eRROR_LOGTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._aPPMENUTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.APPMENU.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    this.SortSelfReferenceRows(deletedRows, dataSet.Relations["APPMENU_APPMENU_FK1"], true);
                    result = (result + this._aPPMENUTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._gROUP_HEADTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.GROUP_HEAD.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._gROUP_HEADTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._sITEMAPTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.SITEMAP.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    this.SortSelfReferenceRows(deletedRows, dataSet.Relations["SITEMAP_SITEMAP_FK1"], true);
                    // Note: More than one self-referenced relation found.  The generated code may not work correctly.
                    this.SortSelfReferenceRows(deletedRows, dataSet.Relations["SITEMAP_SITEMAP_FK2"], true);
                    result = (result + this._sITEMAPTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._aPPPAGETableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.APPPAGE.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._aPPPAGETableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._aPPLICATION_HEADTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.APPLICATION_HEAD.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._aPPLICATION_HEADTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._dEPARTMENTTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.DEPARTMENT.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    this.SortSelfReferenceRows(deletedRows, dataSet.Relations["DEPARTMENT_FK2"], true);
                    result = (result + this._dEPARTMENTTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._aTTENDANTTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ATTENDANT.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._aTTENDANTTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._sITETableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.SITE.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    this.SortSelfReferenceRows(deletedRows, dataSet.Relations["SITE_FK2"], true);
                    result = (result + this._sITETableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._cOMPANYTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.COMPANY.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._cOMPANYTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int UpdateAll(Basic dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._aPPLICATION_HEADTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._aPPLICATION_HEADTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._sITEMAPTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._sITEMAPTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._aPPMENUTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._aPPMENUTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._aPPPAGETableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._aPPPAGETableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._aTTENDANTTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._aTTENDANTTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._cOMPANYTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._cOMPANYTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._dEPARTMENTTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._dEPARTMENTTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._gROUP_APPMENUTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._gROUP_APPMENUTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._gROUP_ATTENDANTTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._gROUP_ATTENDANTTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._gROUP_HEADTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._gROUP_HEADTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._sITETableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._sITETableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._eRROR_LOGTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._eRROR_LOGTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager 未包含連接資訊。請將每個 TableAdapterManager 的 TableAdapter 屬性設成有效的 Table" +
                        "Adapter 執行個體。");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("無法開始交易。目前的資料連接不支援交易或是目前的狀態不允許交易開始。");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._aPPLICATION_HEADTableAdapter != null)) {
                    revertConnections.Add(this._aPPLICATION_HEADTableAdapter, this._aPPLICATION_HEADTableAdapter.Connection);
                    this._aPPLICATION_HEADTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._aPPLICATION_HEADTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._aPPLICATION_HEADTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._aPPLICATION_HEADTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._aPPLICATION_HEADTableAdapter.Adapter);
                    }
                }
                if ((this._sITEMAPTableAdapter != null)) {
                    revertConnections.Add(this._sITEMAPTableAdapter, this._sITEMAPTableAdapter.Connection);
                    this._sITEMAPTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._sITEMAPTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._sITEMAPTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._sITEMAPTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._sITEMAPTableAdapter.Adapter);
                    }
                }
                if ((this._aPPMENUTableAdapter != null)) {
                    revertConnections.Add(this._aPPMENUTableAdapter, this._aPPMENUTableAdapter.Connection);
                    this._aPPMENUTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._aPPMENUTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._aPPMENUTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._aPPMENUTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._aPPMENUTableAdapter.Adapter);
                    }
                }
                if ((this._aPPPAGETableAdapter != null)) {
                    revertConnections.Add(this._aPPPAGETableAdapter, this._aPPPAGETableAdapter.Connection);
                    this._aPPPAGETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._aPPPAGETableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._aPPPAGETableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._aPPPAGETableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._aPPPAGETableAdapter.Adapter);
                    }
                }
                if ((this._aTTENDANTTableAdapter != null)) {
                    revertConnections.Add(this._aTTENDANTTableAdapter, this._aTTENDANTTableAdapter.Connection);
                    this._aTTENDANTTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._aTTENDANTTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._aTTENDANTTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._aTTENDANTTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._aTTENDANTTableAdapter.Adapter);
                    }
                }
                if ((this._cOMPANYTableAdapter != null)) {
                    revertConnections.Add(this._cOMPANYTableAdapter, this._cOMPANYTableAdapter.Connection);
                    this._cOMPANYTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._cOMPANYTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._cOMPANYTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._cOMPANYTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._cOMPANYTableAdapter.Adapter);
                    }
                }
                if ((this._dEPARTMENTTableAdapter != null)) {
                    revertConnections.Add(this._dEPARTMENTTableAdapter, this._dEPARTMENTTableAdapter.Connection);
                    this._dEPARTMENTTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._dEPARTMENTTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._dEPARTMENTTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._dEPARTMENTTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._dEPARTMENTTableAdapter.Adapter);
                    }
                }
                if ((this._gROUP_APPMENUTableAdapter != null)) {
                    revertConnections.Add(this._gROUP_APPMENUTableAdapter, this._gROUP_APPMENUTableAdapter.Connection);
                    this._gROUP_APPMENUTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._gROUP_APPMENUTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._gROUP_APPMENUTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._gROUP_APPMENUTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._gROUP_APPMENUTableAdapter.Adapter);
                    }
                }
                if ((this._gROUP_ATTENDANTTableAdapter != null)) {
                    revertConnections.Add(this._gROUP_ATTENDANTTableAdapter, this._gROUP_ATTENDANTTableAdapter.Connection);
                    this._gROUP_ATTENDANTTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._gROUP_ATTENDANTTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._gROUP_ATTENDANTTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._gROUP_ATTENDANTTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._gROUP_ATTENDANTTableAdapter.Adapter);
                    }
                }
                if ((this._gROUP_HEADTableAdapter != null)) {
                    revertConnections.Add(this._gROUP_HEADTableAdapter, this._gROUP_HEADTableAdapter.Connection);
                    this._gROUP_HEADTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._gROUP_HEADTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._gROUP_HEADTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._gROUP_HEADTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._gROUP_HEADTableAdapter.Adapter);
                    }
                }
                if ((this._sITETableAdapter != null)) {
                    revertConnections.Add(this._sITETableAdapter, this._sITETableAdapter.Connection);
                    this._sITETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._sITETableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._sITETableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._sITETableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._sITETableAdapter.Adapter);
                    }
                }
                if ((this._eRROR_LOGTableAdapter != null)) {
                    revertConnections.Add(this._eRROR_LOGTableAdapter, this._eRROR_LOGTableAdapter.Connection);
                    this._eRROR_LOGTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._eRROR_LOGTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._eRROR_LOGTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._eRROR_LOGTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._eRROR_LOGTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._aPPLICATION_HEADTableAdapter != null)) {
                    this._aPPLICATION_HEADTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._aPPLICATION_HEADTableAdapter]));
                    this._aPPLICATION_HEADTableAdapter.Transaction = null;
                }
                if ((this._sITEMAPTableAdapter != null)) {
                    this._sITEMAPTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._sITEMAPTableAdapter]));
                    this._sITEMAPTableAdapter.Transaction = null;
                }
                if ((this._aPPMENUTableAdapter != null)) {
                    this._aPPMENUTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._aPPMENUTableAdapter]));
                    this._aPPMENUTableAdapter.Transaction = null;
                }
                if ((this._aPPPAGETableAdapter != null)) {
                    this._aPPPAGETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._aPPPAGETableAdapter]));
                    this._aPPPAGETableAdapter.Transaction = null;
                }
                if ((this._aTTENDANTTableAdapter != null)) {
                    this._aTTENDANTTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._aTTENDANTTableAdapter]));
                    this._aTTENDANTTableAdapter.Transaction = null;
                }
                if ((this._cOMPANYTableAdapter != null)) {
                    this._cOMPANYTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._cOMPANYTableAdapter]));
                    this._cOMPANYTableAdapter.Transaction = null;
                }
                if ((this._dEPARTMENTTableAdapter != null)) {
                    this._dEPARTMENTTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._dEPARTMENTTableAdapter]));
                    this._dEPARTMENTTableAdapter.Transaction = null;
                }
                if ((this._gROUP_APPMENUTableAdapter != null)) {
                    this._gROUP_APPMENUTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._gROUP_APPMENUTableAdapter]));
                    this._gROUP_APPMENUTableAdapter.Transaction = null;
                }
                if ((this._gROUP_ATTENDANTTableAdapter != null)) {
                    this._gROUP_ATTENDANTTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._gROUP_ATTENDANTTableAdapter]));
                    this._gROUP_ATTENDANTTableAdapter.Transaction = null;
                }
                if ((this._gROUP_HEADTableAdapter != null)) {
                    this._gROUP_HEADTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._gROUP_HEADTableAdapter]));
                    this._gROUP_HEADTableAdapter.Transaction = null;
                }
                if ((this._sITETableAdapter != null)) {
                    this._sITETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._sITETableAdapter]));
                    this._sITETableAdapter.Transaction = null;
                }
                if ((this._eRROR_LOGTableAdapter != null)) {
                    this._eRROR_LOGTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._eRROR_LOGTableAdapter]));
                    this._eRROR_LOGTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool IsChildAndParent(global::System.Data.DataRow child, global::System.Data.DataRow parent) {
                global::System.Diagnostics.Debug.Assert((child != null));
                global::System.Diagnostics.Debug.Assert((parent != null));
                global::System.Data.DataRow newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((newParent != null) 
                            && ((object.ReferenceEquals(newParent, child) == false) 
                            && (object.ReferenceEquals(newParent, parent) == false))); 
                ) {
                    newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }
                if ((newParent == null)) {
                    for (newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original); ((newParent != null) 
                                && ((object.ReferenceEquals(newParent, child) == false) 
                                && (object.ReferenceEquals(newParent, parent) == false))); 
                    ) {
                        newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }
                if (object.ReferenceEquals(newParent, parent)) {
                    return true;
                }
                return false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                // Is row1 the child or grandchild of row2
                if (this.IsChildAndParent(row1, row2)) {
                    return this._childFirst;
                }

                // Is row2 the child or grandchild of row1
                if (this.IsChildAndParent(row2, row1)) {
                    return (-1 * this._childFirst);
                }
                return 0;
            }
        }
    }
}

#pragma warning restore 1591